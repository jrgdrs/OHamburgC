# automatic
@Uppercase = [ A Aacute Acircumflex Adieresis Agrave Aring Atilde B C D E Eacute Ecircumflex Edieresis Egrave F G H I J K L M N Ntilde O Oacute Ocircumflex Odieresis Ograve Otilde P Q R S T U Uacute Ucircumflex Udieresis Ugrave V W X Y Z
];

# Prefix: Languagesystems
# automatic
languagesystem DFLT dflt;


# Prefix: Prefix


feature aalt {
# automatic
feature c2sc;
feature smcp;
feature case;

} aalt;

feature ccmp {
# automatic
lookup ccmp_DFLT_1 {
	lookupflag 0;
	sub brevecomb acutecomb by brevecomb_acutecomb;
	sub brevecomb gravecomb by brevecomb_gravecomb;
	sub brevecomb hookabovecomb by brevecomb_hookabovecomb;
	sub brevecomb tildecomb by brevecomb_tildecomb;
	sub circumflexcomb acutecomb by circumflexcomb_acutecomb;
	sub circumflexcomb gravecomb by circumflexcomb_gravecomb;
	sub circumflexcomb hookabovecomb by circumflexcomb_hookabovecomb;
	sub circumflexcomb tildecomb by circumflexcomb_tildecomb;
} ccmp_DFLT_1;

lookup ccmp_Other_1 {
	lookupflag 0;
	@Markscomb = [tonos dieresiscomb dotaccentcomb gravecomb acutecomb hungarumlautcomb caroncomb.alt circumflexcomb caroncomb brevecomb ringcomb tildecomb macroncomb hookabovecomb commaturnedabovecomb commaaccentcomb cedillacomb ogonekcomb];
	@MarkscombCase = [tonos.case dieresiscomb.case dotaccentcomb.case gravecomb.case acutecomb.case hungarumlautcomb.case caroncomb.alt.case circumflexcomb.case caroncomb.case brevecomb.case ringcomb.case tildecomb.case macroncomb.case hookabovecomb.case commaturnedabovecomb.case commaaccentcomb.case cedillacomb.case ogonekcomb.case];
	sub @Markscomb @Markscomb' by @MarkscombCase;
	sub @Uppercase @Markscomb' by @MarkscombCase;
} ccmp_Other_1;

lookup ccmp_Other_2 {
	lookupflag 0;
	sub @Markscomb' @MarkscombCase by @MarkscombCase;
	sub @MarkscombCase @Markscomb' by @MarkscombCase;
} ccmp_Other_2;

} ccmp;

feature c2sc {
# automatic
sub dieresiscomb by dieresiscomb.sc;
sub dotaccentcomb by dotaccentcomb.sc;
sub gravecomb by gravecomb.sc;
sub acutecomb by acutecomb.sc;
sub hungarumlautcomb by hungarumlautcomb.sc;
sub caroncomb.alt by caroncomb.alt.sc;
sub circumflexcomb by circumflexcomb.sc;
sub circumflexcomb_gravecomb by circumflexcomb_gravecomb.sc;
sub circumflexcomb_acutecomb by circumflexcomb_acutecomb.sc;
sub circumflexcomb_tildecomb by circumflexcomb_tildecomb.sc;
sub circumflexcomb_hookabovecomb by circumflexcomb_hookabovecomb.sc;
sub caroncomb by caroncomb.sc;
sub brevecomb by brevecomb.sc;
sub brevecomb_gravecomb by brevecomb_gravecomb.sc;
sub brevecomb_acutecomb by brevecomb_acutecomb.sc;
sub brevecomb_tildecomb by brevecomb_tildecomb.sc;
sub brevecomb_hookabovecomb by brevecomb_hookabovecomb.sc;
sub ringcomb by ringcomb.sc;
sub tildecomb by tildecomb.sc;
sub macroncomb by macroncomb.sc;
sub hookabovecomb by hookabovecomb.sc;
sub commaturnedabovecomb by commaturnedabovecomb.sc;
sub horncomb by horncomb.sc;
sub dotbelowcomb by dotbelowcomb.sc;
sub commaaccentcomb by commaaccentcomb.sc;
sub cedillacomb by cedillacomb.sc;
sub ogonekcomb by ogonekcomb.sc;

} c2sc;

feature smcp {
# automatic
sub dieresiscomb by dieresiscomb.sc;
sub dotaccentcomb by dotaccentcomb.sc;
sub gravecomb by gravecomb.sc;
sub acutecomb by acutecomb.sc;
sub hungarumlautcomb by hungarumlautcomb.sc;
sub caroncomb.alt by caroncomb.alt.sc;
sub circumflexcomb by circumflexcomb.sc;
sub caroncomb by caroncomb.sc;
sub brevecomb by brevecomb.sc;
sub ringcomb by ringcomb.sc;
sub tildecomb by tildecomb.sc;
sub macroncomb by macroncomb.sc;
sub hookabovecomb by hookabovecomb.sc;
sub commaturnedabovecomb by commaturnedabovecomb.sc;
sub horncomb by horncomb.sc;
sub brevecomb_acutecomb by brevecomb_acutecomb.sc;
sub brevecomb_gravecomb by brevecomb_gravecomb.sc;
sub brevecomb_hookabovecomb by brevecomb_hookabovecomb.sc;
sub brevecomb_tildecomb by brevecomb_tildecomb.sc;
sub circumflexcomb_acutecomb by circumflexcomb_acutecomb.sc;
sub circumflexcomb_gravecomb by circumflexcomb_gravecomb.sc;
sub circumflexcomb_hookabovecomb by circumflexcomb_hookabovecomb.sc;
sub circumflexcomb_tildecomb by circumflexcomb_tildecomb.sc;
sub dotbelowcomb by dotbelowcomb.sc;
sub commaaccentcomb by commaaccentcomb.sc;
sub cedillacomb by cedillacomb.sc;
sub ogonekcomb by ogonekcomb.sc;

} smcp;

feature case {
# automatic
sub tonos by tonos.case;
sub dieresiscomb by dieresiscomb.case;
sub dotaccentcomb by dotaccentcomb.case;
sub gravecomb by gravecomb.case;
sub acutecomb by acutecomb.case;
sub hungarumlautcomb by hungarumlautcomb.case;
sub caroncomb.alt by caroncomb.alt.case;
sub circumflexcomb by circumflexcomb.case;
sub caroncomb by caroncomb.case;
sub brevecomb by brevecomb.case;
sub ringcomb by ringcomb.case;
sub tildecomb by tildecomb.case;
sub macroncomb by macroncomb.case;
sub hookabovecomb by hookabovecomb.case;
sub commaturnedabovecomb by commaturnedabovecomb.case;
sub commaaccentcomb by commaaccentcomb.case;
sub cedillacomb by cedillacomb.case;
sub ogonekcomb by ogonekcomb.case;

} case;
