{
.appVersion = "3340";
.formatVersion = 3;
date = "2025-01-12 19:30:48 +0000";
familyName = "Neue Schrift";
fontMaster = (
{
customParameters = (
{
name = unitizerUnit;
value = "19.58";
}
);
id = m01;
metricValues = (
{
over = 16;
pos = 800;
},
{
over = 16;
pos = 700;
},
{
over = 16;
pos = 500;
},
{
over = -16;
},
{
over = -16;
pos = -200;
},
{
}
);
name = Regular;
}
);
glyphs = (
{
glyphname = A;
layers = (
{
layerId = m01;
width = 600;
}
);
unicode = 65;
},
{
glyphname = B;
layers = (
{
layerId = m01;
width = 600;
}
);
unicode = 66;
},
{
glyphname = C;
layers = (
{
layerId = m01;
width = 600;
}
);
unicode = 67;
},
{
glyphname = D;
layers = (
{
layerId = m01;
width = 600;
}
);
unicode = 68;
},
{
glyphname = E;
layers = (
{
layerId = m01;
width = 600;
}
);
unicode = 69;
},
{
glyphname = F;
layers = (
{
layerId = m01;
width = 600;
}
);
unicode = 70;
},
{
glyphname = G;
layers = (
{
layerId = m01;
width = 600;
}
);
unicode = 71;
},
{
glyphname = H;
layers = (
{
layerId = m01;
width = 600;
}
);
unicode = 72;
},
{
glyphname = I;
layers = (
{
layerId = m01;
width = 600;
}
);
unicode = 73;
},
{
glyphname = J;
layers = (
{
layerId = m01;
width = 600;
}
);
unicode = 74;
},
{
glyphname = K;
layers = (
{
layerId = m01;
width = 600;
}
);
unicode = 75;
},
{
glyphname = L;
layers = (
{
layerId = m01;
width = 600;
}
);
unicode = 76;
},
{
glyphname = M;
layers = (
{
layerId = m01;
width = 600;
}
);
unicode = 77;
},
{
glyphname = N;
layers = (
{
layerId = m01;
width = 600;
}
);
unicode = 78;
},
{
glyphname = O;
layers = (
{
layerId = m01;
width = 600;
}
);
unicode = 79;
},
{
glyphname = P;
layers = (
{
layerId = m01;
width = 600;
}
);
unicode = 80;
},
{
glyphname = Q;
layers = (
{
layerId = m01;
width = 600;
}
);
unicode = 81;
},
{
glyphname = R;
layers = (
{
layerId = m01;
width = 600;
}
);
unicode = 82;
},
{
glyphname = S;
layers = (
{
layerId = m01;
width = 600;
}
);
unicode = 83;
},
{
glyphname = T;
layers = (
{
layerId = m01;
width = 600;
}
);
unicode = 84;
},
{
glyphname = U;
layers = (
{
layerId = m01;
width = 600;
}
);
unicode = 85;
},
{
glyphname = V;
layers = (
{
layerId = m01;
width = 600;
}
);
unicode = 86;
},
{
glyphname = W;
layers = (
{
layerId = m01;
width = 600;
}
);
unicode = 87;
},
{
glyphname = X;
layers = (
{
layerId = m01;
width = 600;
}
);
unicode = 88;
},
{
glyphname = Y;
layers = (
{
layerId = m01;
width = 600;
}
);
unicode = 89;
},
{
glyphname = Z;
layers = (
{
layerId = m01;
width = 600;
}
);
unicode = 90;
},
{
glyphname = H.001;
lastChange = "2025-01-13 19:00:14 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(670.83,366,o),
(676,363.981,o),
(676,330,cs),
(676,170,l),
(670.675,52.842,o),
(679.258,39.271,o),
(606,28,cs),
(585,25,l),
(577,17,o),
(579,-0.333,o),
(587,-3,c),
(637.667,-0.333,o),
(677.333,0,o),
(724,0,cs),
(768,0,o),
(807.667,-0.333,o),
(861,-3,c),
(869,-0.333,o),
(870.667,21,o),
(864,25,c),
(837,28,ls),
(771.259,38.519,o),
(769,45.453,o),
(769,170,cs),
(769,578,ls),
(769,692.336,o),
(768.197,715.496,o),
(837,721,cs),
(860,723,l),
(868,728.333,o),
(866,748,o),
(858,752,c),
(807.333,748,o),
(768,748,o),
(724,748,cs),
(677.333,748,o),
(640.333,748,o),
(587,752,c),
(579,748,o),
(577,728.333,o),
(585,723,c),
(606,721,ls),
(674.754,715.5,o),
(676,692.927,o),
(676,578,cs),
(676,448,ls),
(676,411.801,o),
(671.111,411,o),
(619,411,cs),
(295,411,ls),
(240.891,411,o),
(238,412.246,o),
(238,448,cs),
(238,578,ls),
(238,690.064,o),
(237.343,715.507,o),
(306,721,cs),
(328,723,l),
(334.667,728.333,o),
(333,748,o),
(325,752,c),
(277,748,o),
(238,748,o),
(194,748,cs),
(146,748,o),
(107,749.333,o),
(51,752,c),
(43,748,o),
(41,728.333,o),
(49,723,c),
(78,721,ls),
(139.302,715.427,o),
(145,693.258,o),
(145,578,cs),
(145,170,ls),
(145,53.007,o),
(144.917,41.733,o),
(79,28,cs),
(60,25,l),
(52,17,o),
(55.333,-0.333,o),
(62,-3,c),
(84,-2.333,o),
(105.5,-1.667,o),
(126.5,-1,cs),
(147.5,-0.333,o),
(170,0,o),
(194,0,cs),
(238,0,o),
(275.333,-0.333,o),
(338,-3,c),
(344.667,-0.333,o),
(348,21,o),
(340,25,c),
(307,28,ls),
(240.823,36.272,o),
(238,53.047,o),
(238,170,cs),
(238,330,ls),
(238,363.861,o),
(241.215,366,o),
(295,366,cs),
(619,366,l),
(619,366,l)
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */
6 3 30 4
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
6
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 4 values pushed */
92 3 68 4
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
92
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
6
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
55
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
68
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
117
MDRP[10000]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
0
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
40
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
40 14
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
43
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
43 14
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
46
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
46 14
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
77
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
77 14
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
80
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
80 14
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
83
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
83 14
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
15
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
15 4
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
18
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
18 4
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
21
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
21 4
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
102
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
102 4
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
105
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
105 4
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
108
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
108 4
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 4 values pushed */
61 1 0 4
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
61
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
15
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
11 1
MIRP[11100]	/* MoveIndirectRelPt */
PUSHW[ ]	/* 1 value pushed */
40
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
36 1
MIRP[11100]	/* MoveIndirectRelPt */
PUSHW[ ]	/* 1 value pushed */
49
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
49
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
50
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
73
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
74
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
74
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
86
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
86
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
87
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
11
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
98
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
98
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
99
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
111
MDRP[10000]	/* MoveDirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 914;
}
);
note = H;
},
{
glyphname = H.002;
lastChange = "2025-01-13 19:00:14 +0000";
layers = (
{
hints = (
{
horizontal = 1;
place = (681,38);
type = Stem;
},
{
horizontal = 1;
place = (348,47);
type = Stem;
},
{
horizontal = 1;
place = (-4,38);
type = Stem;
},
{
place = (608,90);
type = Stem;
},
{
place = (123,92);
type = Stem;
}
);
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(786,719,l),
(647,714,l),
(520,718,l),
(520,680,l),
(561,674,l),
(578,667,l),
(596,653,l),
(603,611,l),
(606,539,l),
(606,394,l),
(214,394,l),
(214,576,l),
(216,631,l),
(233,665,l),
(264,675,l),
(301,679,l),
(301,718,l),
(174,713,l),
(34,719,l),
(33,680,l),
(76,678,l),
(103,668,l),
(118,639,l),
(123,588,l),
(123,128,l),
(117,73,l),
(95,43,l),
(35,36,l),
(34,-3,l),
(179,4,l),
(302,-5,l),
(302,36,l),
(254,36,l),
(233,47,l),
(219,70,l),
(214,132,l),
(214,347,l),
(608,347,l),
(608,141,l),
(604,76,l),
(596,57,l),
(581,41,l),
(522,32,l),
(521,-5,l),
(658,0,l),
(786,-6,l),
(788,34,l),
(743,35,l),
(717,47,l),
(705,69,l),
(700,96,l),
(698,171,l),
(698,583,l),
(700,633,l),
(714,663,l),
(739,672,l),
(785,679,l),
(785,679,l)
);
}
);
width = 821;
}
);
},
{
glyphname = H.003;
lastChange = "2025-01-13 19:00:14 +0000";
layers = (
{
hints = (
{
horizontal = 1;
place = (681,38);
type = Stem;
},
{
horizontal = 1;
place = (348,47);
type = Stem;
},
{
horizontal = 1;
place = (-4,38);
type = Stem;
},
{
place = (608,90);
type = Stem;
},
{
place = (123,92);
type = Stem;
}
);
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(786,719,l),
(647,714,l),
(520,718,l),
(520,680,l),
(561,674,l),
(578,667,l),
(596,653,l),
(603,611,l),
(606,539,l),
(606,394,l),
(214,394,l),
(214,576,l),
(216,631,l),
(233,665,l),
(264,675,l),
(301,679,l),
(301,718,l),
(174,713,l),
(34,719,l),
(33,680,l),
(76,678,l),
(103,668,l),
(118,639,l),
(123,588,l),
(123,128,l),
(117,73,l),
(95,43,l),
(35,36,l),
(34,-3,l),
(179,4,l),
(302,-5,l),
(302,36,l),
(254,36,l),
(233,47,l),
(219,70,l),
(214,132,l),
(214,347,l),
(608,347,l),
(608,141,l),
(604,76,l),
(596,57,l),
(581,41,l),
(522,32,l),
(521,-5,l),
(658,0,l),
(786,-6,l),
(788,34,l),
(743,35,l),
(717,47,l),
(705,69,l),
(700,96,l),
(698,171,l),
(698,583,l),
(700,633,l),
(714,663,l),
(739,672,l),
(785,679,l),
(785,679,l)
);
}
);
width = 821;
}
);
},
{
glyphname = H.004;
lastChange = "2025-01-13 19:00:14 +0000";
layers = (
{
hints = (
{
horizontal = 1;
place = (596,29);
type = Stem;
},
{
horizontal = 1;
place = (321,33);
type = Stem;
},
{
horizontal = 1;
place = (0,29);
type = Stem;
},
{
place = (480,104);
type = Stem;
},
{
place = (94,103);
type = Stem;
}
);
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(94,272,l),
(94,116,l),
(90,60,l),
(82,43,l),
(55,31,l),
(26,27,l),
(13,18,l),
(15,7,l),
(29,1,l),
(68,4,l),
(134,6,l),
(206,4,l),
(231,1,l),
(256,0,l),
(276,4,l),
(278,12,l),
(268,24,l),
(251,27,l),
(230,28,l),
(203,50,l),
(199,74,l),
(198,234,l),
(198,274,l),
(202,311,l),
(221,317,l),
(258,319,l),
(378,319,l),
(447,320,l),
(475,313,l),
(479,277,l),
(478,247,l),
(479,181,l),
(478,91,l),
(476,58,l),
(465,39,l),
(446,28,l),
(423,26,l),
(407,25,l),
(399,12,l),
(406,-1,l),
(416,-2,l),
(528,4,l),
(586,2,l),
(646,-3,l),
(664,4,l),
(666,11,l),
(661,19,l),
(620,27,l),
(596,43,l),
(586,61,l),
(585,101,l),
(584,161,l),
(585,215,l),
(584,390,l),
(585,481,l),
(584,536,l),
(594,573,l),
(613,587,l),
(629,592,l),
(653,594,l),
(666,607,l),
(663,617,l),
(646,621,l),
(617,618,l),
(529,616,l),
(462,618,l),
(432,620,l),
(417,621,l),
(407,620,l),
(400,608,l),
(401,599,l),
(408,595,l),
(438,593,l),
(465,579,l),
(478,563,l),
(479,509,l),
(480,427,l),
(480,392,l),
(476,354,l),
(454,349,l),
(306,349,l),
(214,351,l),
(205,356,l),
(200,376,l),
(200,507,l),
(203,564,l),
(223,586,l),
(243,592,l),
(277,600,l),
(282,608,l),
(278,616,l),
(263,620,l),
(251,619,l),
(163,614,l),
(67,618,l),
(50,618,l),
(32,620,l),
(19,617,l),
(15,605,l),
(17,595,l),
(27,591,l),
(52,592,l),
(85,574,l),
(97,539,l),
(97,466,l),
(96,323,l),
(96,323,l)
);
}
);
width = 683;
}
);
},
{
glyphname = H.005;
lastChange = "2025-01-13 19:00:14 +0000";
layers = (
{
hints = (
{
horizontal = 1;
place = (686,35);
type = Stem;
},
{
horizontal = 1;
place = (363,47);
type = Stem;
},
{
horizontal = 1;
place = (0,36);
type = Stem;
},
{
place = (642,91);
type = Stem;
},
{
place = (111,94);
type = Stem;
}
);
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(498,411,l),
(427,411,l),
(339,412,l),
(274,413,l),
(206,413,l),
(204,455,l),
(207,570,l),
(206,603,l),
(207,656,l),
(218,673,l),
(252,684,l),
(283,687,l),
(302,687,l),
(312,695,l),
(312,708,l),
(310,721,l),
(255,722,l),
(167,719,l),
(96,722,l),
(53,721,l),
(21,723,l),
(6,720,l),
(5,699,l),
(7,688,l),
(19,688,l),
(56,685,l),
(92,669,l),
(104,649,l),
(109,626,l),
(112,563,l),
(113,513,l),
(111,447,l),
(113,357,l),
(112,332,l),
(112,287,l),
(110,254,l),
(110,162,l),
(108,101,l),
(101,65,l),
(90,52,l),
(50,38,l),
(4,35,l),
(5,4,l),
(22,3,l),
(46,-1,l),
(103,6,l),
(144,4,l),
(268,3,l),
(306,1,l),
(310,24,l),
(300,33,l),
(235,42,l),
(209,59,l),
(202,106,l),
(202,335,l),
(204,363,l),
(243,367,l),
(300,364,l),
(348,365,l),
(430,363,l),
(504,367,l),
(553,365,l),
(611,368,l),
(623,367,l),
(639,367,l),
(641,324,l),
(639,236,l),
(640,170,l),
(637,96,l),
(627,55,l),
(590,41,l),
(535,37,l),
(536,3,l),
(559,1,l),
(608,5,l),
(717,5,l),
(763,2,l),
(798,1,l),
(840,5,l),
(842,21,l),
(838,36,l),
(827,38,l),
(769,46,l),
(744,64,l),
(734,104,l),
(732,145,l),
(733,212,l),
(732,287,l),
(733,344,l),
(733,404,l),
(734,454,l),
(735,509,l),
(736,582,l),
(735,634,l),
(744,670,l),
(782,686,l),
(839,690,l),
(840,710,l),
(837,722,l),
(831,723,l),
(821,722,l),
(720,718,l),
(618,722,l),
(538,722,l),
(537,699,l),
(540,689,l),
(550,688,l),
(563,689,l),
(577,687,l),
(608,684,l),
(635,665,l),
(641,644,l),
(644,579,l),
(646,535,l),
(644,496,l),
(644,464,l),
(641,418,l),
(569,415,l),
(569,415,l)
);
}
);
width = 848;
}
);
},
{
glyphname = H.006;
lastChange = "2025-01-13 19:00:14 +0000";
layers = (
{
hints = (
{
horizontal = 1;
place = (338,46);
type = Stem;
},
{
horizontal = 1;
place = (-1,36);
type = Stem;
},
{
horizontal = 1;
place = (694,21);
target = up;
type = BottomGhost;
},
{
place = (570,93);
type = Stem;
},
{
place = (109,91);
type = Stem;
}
);
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(261,384,l),
(216,392,l),
(207,416,l),
(204,456,l),
(202,513,l),
(201,593,l),
(202,628,l),
(205,654,l),
(219,669,l),
(238,675,l),
(284,687,l),
(292,698,l),
(284,710,l),
(270,715,l),
(257,714,l),
(202,707,l),
(162,706,l),
(77,711,l),
(54,712,l),
(21,715,l),
(10,709,l),
(7,704,l),
(22,686,l),
(34,683,l),
(95,669,l),
(109,632,l),
(110,588,l),
(110,447,l),
(111,359,l),
(106,200,l),
(106,106,l),
(99,69,l),
(67,43,l),
(39,40,l),
(11,29,l),
(4,20,l),
(8,7,l),
(21,2,l),
(89,7,l),
(126,10,l),
(169,10,l),
(205,9,l),
(260,1,l),
(272,0,l),
(292,0,l),
(303,17,l),
(291,32,l),
(266,35,l),
(210,59,l),
(200,82,l),
(198,122,l),
(196,236,l),
(197,286,l),
(199,311,l),
(220,338,l),
(237,340,l),
(273,340,l),
(371,337,l),
(533,340,l),
(553,333,l),
(567,304,l),
(566,253,l),
(567,157,l),
(567,132,l),
(564,72,l),
(537,45,l),
(480,34,l),
(462,26,l),
(457,13,l),
(472,-3,l),
(481,-2,l),
(496,-1,l),
(541,6,l),
(605,11,l),
(674,4,l),
(723,-5,l),
(740,-3,l),
(748,12,l),
(742,25,l),
(725,32,l),
(688,39,l),
(678,43,l),
(667,61,l),
(659,113,l),
(659,206,l),
(660,258,l),
(659,318,l),
(660,365,l),
(659,409,l),
(659,497,l),
(657,563,l),
(664,655,l),
(689,670,l),
(718,675,l),
(738,677,l),
(752,693,l),
(747,705,l),
(733,710,l),
(718,708,l),
(698,707,l),
(663,703,l),
(603,701,l),
(571,702,l),
(531,707,l),
(497,709,l),
(481,695,l),
(492,679,l),
(508,674,l),
(537,667,l),
(559,647,l),
(567,620,l),
(568,558,l),
(567,486,l),
(567,447,l),
(566,430,l),
(565,401,l),
(546,385,l),
(532,381,l),
(499,380,l),
(403,383,l),
(285,382,l),
(285,382,l)
);
}
);
width = 778;
}
);
},
{
glyphname = H.007;
lastChange = "2025-01-13 19:00:14 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(226.667,354,o),
(227,353,o),
(227,385,cs),
(227,528,ls),
(227,556,o),
(229.333,573.667,o),
(234,581,cs),
(242,592.333,o),
(256.333,598.667,o),
(277,600,cs),
(301,601.333,o),
(313,607,o),
(313,617,cs),
(313,626.333,o),
(306.333,631,o),
(293,631,cs),
(285,631,o),
(279.333,630.667,o),
(276,630,c),
(233.333,628,o),
(199.667,627,o),
(175,627,cs),
(147.667,627,o),
(121.667,627.667,o),
(97,629,cs),
(72.333,630.333,o),
(58,631,o),
(54,631,cs),
(40,631,o),
(33,626.333,o),
(33,617,cs),
(33,607,o),
(45,601.333,o),
(69,600,cs),
(89.667,598.667,o),
(103.667,592.333,o),
(111,581,cs),
(116.333,573.667,o),
(119,556,o),
(119,528,cs),
(119,100,ls),
(119,72.667,o),
(116.333,55.333,o),
(111,48,cs),
(103,36,o),
(89,29.333,o),
(69,28,cs),
(45,26,o),
(33,20.333,o),
(33,11,cs),
(33,1.667,o),
(39.667,-3,o),
(53,-3,cs),
(60.333,-3,o),
(66.333,-2.667,o),
(71,-2,cs),
(114.333,0,o),
(148.333,1,o),
(173,1,cs),
(188.333,1,o),
(213.833,0.333,o),
(249.5,-1,cs),
(285.167,-2.333,o),
(299.333,-3,o),
(292,-3,cs),
(306,-3,o),
(313,1.667,o),
(313,11,cs),
(313,20.333,o),
(301,26,o),
(277,28,cs),
(256.333,30,o),
(242,36.333,o),
(234,47,cs),
(229.333,54.333,o),
(227,72,o),
(227,100,cs),
(227,297,ls),
(227,318.333,o),
(229,320,o),
(265,320,cs),
(478,320,ls),
(508.667,320,o),
(511,319,o),
(511,295,cs),
(511,100,ls),
(511,72.667,o),
(508.667,55.333,o),
(504,48,cs),
(495.333,36,o),
(481,29.333,o),
(461,28,cs),
(437.667,26,o),
(426,20.333,o),
(426,11,cs),
(426,1.667,o),
(432.333,-3,o),
(445,-3,cs),
(453,-3,o),
(458.667,-2.667,o),
(462,-2,c),
(506,0,o),
(540.333,1,o),
(565,1,cs),
(591.667,1,o),
(617.333,0.333,o),
(642,-1,cs),
(666.667,-2.333,o),
(681,-3,o),
(685,-3,cs),
(699,-3,o),
(706,1.667,o),
(706,11,cs),
(706,20.333,o),
(694,26,o),
(670,28,cs),
(648.667,30,o),
(634.333,36.333,o),
(627,47,cs),
(621.667,54.333,o),
(619,72,o),
(619,100,cs),
(619,528,ls),
(619,556,o),
(621.667,573.667,o),
(627,581,cs),
(634.333,591.667,o),
(648.667,598,o),
(670,600,cs),
(694,601.333,o),
(706,607,o),
(706,617,cs),
(706,626.333,o),
(699.333,631,o),
(686,631,cs),
(678.667,631,o),
(672.667,630.667,o),
(668,630,cs),
(624.667,628,o),
(590.667,627,o),
(566,627,cs),
(550.667,627,o),
(525.167,627.667,o),
(489.5,629,cs),
(453.833,630.333,o),
(439.333,631,o),
(446,631,cs),
(432.667,631,o),
(426,626.333,o),
(426,617,cs),
(426,607,o),
(437.667,601.333,o),
(461,600,cs),
(481.667,598,o),
(496,591.667,o),
(504,581,cs),
(508.667,573.667,o),
(511,556,o),
(511,528,cs),
(511,385,ls),
(511,355.667,o),
(510,354,o),
(474,354,cs),
(260,354,l),
(260,354,l)
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */
10
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
112
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
113
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
28
MDRP[11100]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
5
MDRP[11100]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
112
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
84
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
84
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 3 values pushed */
13 84 28
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHW[ ]	/* 1 value pushed */
5
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
52
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
84
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
61
MDRP[11100]	/* MoveDirectRelPt */
PUSHW[ ]	/* 3 values pushed */
69 84 28
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHW[ ]	/* 1 value pushed */
108
MDRP[10000]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
37
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
13
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
13 44
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
37
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
16
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
16 44
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
37
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
18
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
18 44
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
37
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
20
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
20 44
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
37
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
93
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
93 44
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
37
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
96
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
96 44
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
37
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
98
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
98 44
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
37
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
100
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
100 44
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
37
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
37
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
37 38
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
37
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
40
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
40 38
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
37
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
42
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
42 38
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
37
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
44
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
44 38
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
37
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
69
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
69 38
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
37
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
72
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
72 38
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
37
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
74
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
74 38
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
37
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
76
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
76 38
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 3 values pushed */
1 56 13
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
1
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
13
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
9
MDRP[11100]	/* MoveDirectRelPt */
NPUSHW[ ]	/* 5 values pushed */
57 9 73 9 2
DELTAP2[ ]	/* DeltaExceptionP2 */
NPUSHW[ ]	/* 21 values pushed */
104 9 120 9 136 9 152 9 168 9 184 9 200 9 216 9 232 9 248 9 10
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 7 values pushed */
8 9 24 9 40 9 3
DELTAP2[ ]	/* DeltaExceptionP2 */
PUSHW[ ]	/* 1 value pushed */
24
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
37
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
33
MDRP[11100]	/* MoveDirectRelPt */
NPUSHW[ ]	/* 21 values pushed */
103 33 119 33 135 33 151 33 167 33 183 33 199 33 215 33 231 33 247 33 10
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 7 values pushed */
7 33 23 33 39 33 3
DELTAP2[ ]	/* DeltaExceptionP2 */
NPUSHW[ ]	/* 5 values pushed */
54 33 70 33 2
DELTAP2[ ]	/* DeltaExceptionP2 */
PUSHW[ ]	/* 1 value pushed */
48
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
65
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
80
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
24
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
89
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
104
MDRP[10000]	/* MoveDirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 739;
}
);
note = H;
},
{
glyphname = H.008;
lastChange = "2025-01-13 19:00:14 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(177.333,729,o),
(163,730,o),
(155,730,cs),
(133,730,o),
(107.667,730.667,o),
(79,732,cs),
(64.333,732.667,o),
(56.333,733,o),
(55,733,cs),
(40.333,733,o),
(36,729.667,o),
(36,715,cs),
(36,697.667,o),
(37,697,o),
(61,697,cs),
(89.667,696.333,o),
(110.333,689.333,o),
(123,676,cs),
(130.333,668.667,o),
(134.833,660,o),
(136.5,650,cs),
(138.167,640,o),
(140.333,608.667,o),
(143,556,c),
(142,524,l),
(144,483,l),
(143,427,l),
(144,356,l),
(143,319,l),
(144,271,ls),
(144,255.667,o),
(143.333,233.333,o),
(142,204,cs),
(141.333,192.667,o),
(141,176.333,o),
(141,155,cs),
(141,134,ls),
(141.667,126.667,o),
(142,120,o),
(142,114,cs),
(142,72,o),
(132,47.333,o),
(112,40,cs),
(101.333,36.667,o),
(84.333,34.333,o),
(61,33,cs),
(45.667,32.333,o),
(38,26.333,o),
(38,15,cs),
(38,2.333,o),
(48,-4,o),
(68,-4,cs),
(68.667,-4,o),
(72,-4,o),
(78,-4,cs),
(83.333,-3.333,o),
(88.667,-3,o),
(94,-3,cs),
(165.333,-1,o),
(209.333,-0.333,o),
(226,-1,cs),
(329,-4,ls),
(338.333,-4,o),
(343,1.333,o),
(343,12,cs),
(343,26.667,o),
(338.667,32,o),
(320,32,cs),
(288.667,32.667,o),
(268,36,o),
(258,42,cs),
(244,51.333,o),
(237,70.667,o),
(237,100,cs),
(237,108,o),
(236.5,118.333,o),
(235.5,131,cs),
(234.5,143.667,o),
(234.333,157.667,o),
(235,173,cs),
(237,245,l),
(236,301,ls),
(235.333,338.333,o),
(237,358,o),
(241,360,cs),
(248.333,364,o),
(274.333,366,o),
(319,366,cs),
(347,366,ls),
(355,366,o),
(363.333,365.667,o),
(372,365,cs),
(381.333,365,o),
(386.333,365,o),
(387,365,cs),
(467,366,ls),
(523.667,366.667,o),
(558.333,367,o),
(571,367,cs),
(593,367.667,o),
(625.333,368,o),
(668,368,cs),
(678,368,o),
(683.333,366.333,o),
(684,363,cs),
(686,355,o),
(687,313.333,o),
(687,238,cs),
(687,224,o),
(686.667,211.833,o),
(686,201.5,cs),
(685.333,191.167,o),
(685,184,o),
(685,180,cs),
(686,127,ls),
(687.333,47,o),
(670.333,31.667,o),
(605,33,cs),
(583.667,33,o),
(578,31,o),
(578,11,cs),
(578,1,o),
(583,-4,o),
(593,-4,cs),
(627,-3,ls),
(694.333,-1,o),
(734.333,0,o),
(747,0,cs),
(761.667,0,o),
(775,-0.333,o),
(787,-1,cs),
(825,-3,o),
(850,-4,o),
(862,-4,cs),
(883.333,-4,o),
(886,1,o),
(886,17,cs),
(886,27.667,o),
(878,33,o),
(862,33,cs),
(791.333,34.333,o),
(772.333,48.667,o),
(775,158,cs),
(777,196,ls),
(777,200,o),
(776.333,206.333,o),
(775,215,c),
(775,240,ls),
(775,248,o),
(775.667,269,o),
(777,303,cs),
(779.667,435.667,o),
(781,544.333,o),
(781,629,cs),
(781,683.667,o),
(794,695.333,o),
(854,694,cs),
(875.333,692.667,o),
(886,699,o),
(886,713,cs),
(886,724.333,o),
(880.333,730,o),
(869,730,cs),
(861.667,730,o),
(845.667,729,o),
(821,727,cs),
(802.333,725.667,o),
(786.333,725.333,o),
(773,726,cs),
(616,731,ls),
(595.333,731.667,o),
(585,725.667,o),
(585,713,cs),
(585,702.333,o),
(594,696.333,o),
(612,695,cs),
(636,693,o),
(651.667,690.667,o),
(659,688,cs),
(666.333,685.333,o),
(672.333,679.333,o),
(677,670,cs),
(685,653.333,o),
(688.667,627,o),
(688,591,cs),
(687,549,l),
(688,481,ls),
(689.333,405,o),
(689.667,414,o),
(631,414,cs),
(612.333,414,o),
(594.667,413.667,o),
(578,413,cs),
(557.333,412.333,o),
(540,412,o),
(526,412,cs),
(437,413,l),
(346,411,ls),
(284,409,o),
(249,412,o),
(241,420,cs),
(235,424.667,o),
(233.667,454.333,o),
(237,509,cs),
(239,544,l),
(237,587,ls),
(236.333,603.667,o),
(236,617,o),
(236,627,cs),
(236,657,o),
(241.333,676,o),
(252,684,cs),
(260,689.333,o),
(282,693,o),
(318,695,cs),
(330,695.667,o),
(337.333,696.333,o),
(340,697,cs),
(346.667,699,o),
(350,704.333,o),
(350,713,cs),
(350,727,o),
(343.667,733.667,o),
(331,733,cs),
(198,727,l),
(198,727,l)
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */
10
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
163
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
164
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
163
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
140
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
140
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
104
MDRP[11100]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
10
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
10
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
104
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
12
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
104
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
14
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
104
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
16
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
16
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
164
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
54
MDRP[11100]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
85
MDRP[11100]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
27
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
27
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
85
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
29
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
29
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
54
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
39
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
39
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
54
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
50
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
50
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
54
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
52
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
52
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
54
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
57
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
57
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
85
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
81
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
81
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
85
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
87
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
87
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
104
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
101
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
101
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
104
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
108
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
140
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
132
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
132
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
140
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
134
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
134
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
140
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
137
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
137
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
140
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
142
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
140
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
144
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
144
MDAP[1]	/* MoveDirectAbsPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
0
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
38
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
41
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
43
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
156
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
158
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
160
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
37
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
66
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
66 38
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
37
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
68
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
68 38
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
37
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
70
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
70 38
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
37
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
72
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
72 38
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
37
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
117
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
117 38
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
37
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
120
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
120 38
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
37
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
122
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
122 38
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
37
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
124
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
124 38
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 3 values pushed */
24 93 13
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
24
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
41
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
47
MDRP[11100]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
6
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
6
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
24
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
18
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
18
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
24
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
20
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
20
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
24
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
22
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
22
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
47
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
34
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
34
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
41
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
39
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
39
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
66
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
61
MDRP[11100]	/* MoveDirectRelPt */
NPUSHW[ ]	/* 21 values pushed */
103 61 119 61 135 61 151 61 167 61 183 61 199 61 215 61 231 61 247 61 10
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 7 values pushed */
7 61 23 61 39 61 3
DELTAP2[ ]	/* DeltaExceptionP2 */
NPUSHW[ ]	/* 5 values pushed */
54 61 70 61 2
DELTAP2[ ]	/* DeltaExceptionP2 */
PUSHW[ ]	/* 1 value pushed */
78
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
93
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
89
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
89
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
93
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
91
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
91
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
93
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
96
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
96
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
93
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
98
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
78
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
112
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
112
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
128
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
47
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
150
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
150
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
41
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
162
MDRP[10000]	/* MoveDirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 922;
}
);
note = H;
},
{
glyphname = H.009;
lastChange = "2025-01-13 19:00:14 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(239,584.333,o),
(241.667,655.667,o),
(247,693,cs),
(248.333,703,o),
(252.667,709.833,o),
(260,713.5,cs),
(267.333,717.167,o),
(283.667,719.667,o),
(309,721,cs),
(364,724,l),
(360,733.333,o),
(358,739.333,o),
(358,742,cs),
(358,745.333,o),
(360,751.667,o),
(364,761,c),
(299,756,ls),
(278.333,754.667,o),
(243.667,754,o),
(195,754,cs),
(146.333,754,o),
(111.667,754.667,o),
(91,756,cs),
(26,761,l),
(30,751.667,o),
(32,745.333,o),
(32,742,cs),
(32,739.333,o),
(30,733.333,o),
(26,724,c),
(80,721,ls),
(104.667,719.667,o),
(120.667,717.5,o),
(128,714.5,cs),
(135.333,711.5,o),
(140,705.333,o),
(142,696,cs),
(148,666.667,o),
(151,594.333,o),
(151,479,cs),
(151,277,ls),
(151,171,o),
(148.333,99.667,o),
(143,63,cs),
(141.667,53,o),
(137.167,46.167,o),
(129.5,42.5,cs),
(121.833,38.833,o),
(105.333,36.333,o),
(80,35,cs),
(26,32,l),
(30,22.667,o),
(32,16.667,o),
(32,14,cs),
(32,10,o),
(30,4.333,o),
(26,-3,c),
(91,0,ls),
(119.667,1.333,o),
(154.333,2,o),
(195,2,cs),
(235.667,2,o),
(270.333,1.333,o),
(299,0,cs),
(364,-3,l),
(360,4.333,o),
(358,10,o),
(358,14,cs),
(358,16.667,o),
(360,22.667,o),
(364,32,c),
(309,35,ls),
(285,36.333,o),
(269.333,38.5,o),
(262,41.5,cs),
(254.667,44.5,o),
(250,50.667,o),
(248,60,cs),
(242,89.333,o),
(239,161.667,o),
(239,277,cs),
(239,356,l),
(332.333,361.333,o),
(420.333,364,o),
(503,364,cs),
(666,362,l),
(666,277,ls),
(666,145.667,o),
(662.667,71,o),
(656,53,cs),
(652.667,43.667,o),
(632.667,37.667,o),
(596,35,cs),
(542,32,l),
(545.333,22.667,o),
(547,16.667,o),
(547,14,cs),
(547,10,o),
(545.333,4.333,o),
(542,-3,c),
(606,0,ls),
(634.667,1.333,o),
(669.667,2,o),
(711,2,cs),
(751.667,2,o),
(786.333,1.333,o),
(815,0,cs),
(880,-3,l),
(876,4.333,o),
(874,10,o),
(874,14,cs),
(874,16.667,o),
(876,22.667,o),
(880,32,c),
(825,35,ls),
(801,36.333,o),
(785.167,38.5,o),
(777.5,41.5,cs),
(769.833,44.5,o),
(765.333,50.667,o),
(764,60,cs),
(758,89.333,o),
(755,161.667,o),
(755,277,cs),
(755,479,ls),
(755,584.333,o),
(757.667,655.667,o),
(763,693,cs),
(764.333,703,o),
(768.667,709.833,o),
(776,713.5,cs),
(783.333,717.167,o),
(799.667,719.667,o),
(825,721,cs),
(880,724,l),
(876,733.333,o),
(874,739.333,o),
(874,742,cs),
(874,745.333,o),
(876,751.667,o),
(880,761,c),
(815,756,ls),
(793.667,754.667,o),
(759,754,o),
(711,754,cs),
(662.333,754,o),
(627.333,754.667,o),
(606,756,cs),
(542,761,l),
(545.333,751.667,o),
(547,745.333,o),
(547,742,cs),
(547,739.333,o),
(545.333,733.333,o),
(542,724,c),
(596,721,ls),
(632.667,719,o),
(652.667,713,o),
(656,703,cs),
(662.667,686.333,o),
(666,611.667,o),
(666,479,cs),
(666,402,l),
(554,396,o),
(463,393,o),
(393,393,cs),
(357,393,o),
(305.667,394.667,o),
(239,398,c),
(239,479,l),
(239,479,l)
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */
10
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
115
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
116
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
115
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
88
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
88
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
62
MDRP[11100]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
0
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
116
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
31
MDRP[11100]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
6
MDRP[11100]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
88
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
86
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
86
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
31
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
29
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
29
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 3 values pushed */
11 86 29
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHW[ ]	/* 3 values pushed */
15 86 29
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHW[ ]	/* 3 values pushed */
48 86 29
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHW[ ]	/* 3 values pushed */
52 86 29
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHW[ ]	/* 1 value pushed */
6
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
57
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 3 values pushed */
68 86 29
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHW[ ]	/* 3 values pushed */
72 86 29
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHW[ ]	/* 3 values pushed */
105 86 29
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHW[ ]	/* 3 values pushed */
109 86 29
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHW[ ]	/* 1 value pushed */
62
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
113
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
113
MDAP[1]	/* MoveDirectAbsPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
33
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
15
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
15 40
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
33
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
18
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
18 40
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
33
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
20
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
20 40
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
33
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
99
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
99 40
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
33
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
102
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
102 40
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
33
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
104
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
104 40
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
33
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
42
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
42 34
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
33
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
45
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
45 34
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
33
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
47
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
47 34
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
33
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
72
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
72 34
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
33
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
75
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
75 34
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
33
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
77
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
77 34
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 3 values pushed */
16 10 13
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
16
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 3 values pushed */
3 61 13
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
3
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
1
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
1
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
61
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
58
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
58
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
5
MDRP[11100]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
16
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
21
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
21
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
10
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
25
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
25
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
42
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
37
MDRP[11100]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
52
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
52
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
53
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
67
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
68
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
68
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
82
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
82
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
83
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
10
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
94
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 3 values pushed */
95 10 16
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHW[ ]	/* 1 value pushed */
16
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
100
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
16
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
105
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
105
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
10
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
109
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
109
MDAP[1]	/* MoveDirectAbsPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 907;
}
);
note = H;
},
{
glyphname = H.010;
lastChange = "2025-01-13 19:00:14 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(606.749,681,o),
(608,662.079,o),
(608,540,cs),
(608,395,l),
(215,395,l),
(215,578,ls),
(215,655.529,o),
(217.643,683.667,o),
(303,681,c),
(303,719,l),
(255,716.333,o),
(216.667,714,o),
(174,714,cs),
(126,714,o),
(80.667,716.333,o),
(34,719,c),
(34,682,l),
(76.197,679.656,o),
(91.468,681.532,o),
(108,665,cs),
(114,659,o),
(117.833,650.833,o),
(119.5,640.5,cs),
(121.167,630.167,o),
(122.333,612.333,o),
(123,587,cs),
(123,127,l),
(120.29,51.112,o),
(118.957,34,o),
(35,34,c),
(35,-4,l),
(81.667,-1.333,o),
(131,1,o),
(179,1,cs),
(220.333,1,o),
(254.667,-1.333,o),
(304,-4,c),
(304,35,l),
(222.042,35,o),
(215,46.142,o),
(215,133,cs),
(215,348,l),
(610,348,l),
(610,141,ls),
(610,51.995,o),
(609.294,35.697,o),
(523,33,c),
(523,-4,l),
(569.667,-1.333,o),
(614.667,1,o),
(660,1,cs),
(704,1,o),
(747.667,-1.333,o),
(789,-4,c),
(789,35,l),
(699,35,o),
(701,51.685,o),
(701,174,cs),
(701,586,ls),
(701,669.794,o),
(704.281,676.599,o),
(788,682,c),
(788,719,l),
(742.667,716.333,o),
(697,714,o),
(649,714,cs),
(607.667,714,o),
(566,716.333,o),
(522,719,c),
(522,681,l),
(522,681,l)
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */
83
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
84
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
13
MDRP[11100]	/* MoveDirectRelPt */
PUSHW[ ]	/* 2 values pushed */
31 3
MIRP[11100]	/* MoveIndirectRelPt */
PUSHW[ ]	/* 1 value pushed */
83
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
52
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
52
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 2 values pushed */
34 3
MIRP[11100]	/* MoveIndirectRelPt */
PUSHW[ ]	/* 1 value pushed */
74
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
31
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
76
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
76
MDAP[1]	/* MoveDirectAbsPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
0
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
0
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
0 18
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
3
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
3 18
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
6
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
6 18
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
62
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
62 18
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
65
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
65 18
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
68
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
68 18
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
19
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
19 4
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
22
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
22 4
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
25
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
25 4
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
40
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
40 4
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
43
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
43 4
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
46
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
46 4
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 4 values pushed */
76 1 32 4
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
6
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
7 1
MIRP[11100]	/* MoveIndirectRelPt */
PUSHW[ ]	/* 1 value pushed */
19
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
18 1
MIRP[11100]	/* MoveIndirectRelPt */
PUSHW[ ]	/* 1 value pushed */
26
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
26
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
39
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
39
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
47
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
7
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
61
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
69
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
69
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
82
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
82
MDAP[1]	/* MoveDirectAbsPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 825;
}
);
note = H;
},
{
glyphname = H.011;
lastChange = "2025-01-13 19:00:14 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(241,563,ls),
(241,644.333,o),
(245,651.333,o),
(305,658,cs),
(322,660,ls),
(340.667,662.667,o),
(350,669.333,o),
(350,680,cs),
(350,691.333,o),
(342.333,697,o),
(327,697,cs),
(323,697,l),
(310,696,ls),
(274,693.333,o),
(236,692,o),
(196,692,cs),
(175.333,692,o),
(151,692.667,o),
(123,694,cs),
(106.333,694.667,o),
(96,695,o),
(92,695,cs),
(77,696,l),
(73,696,ls),
(56.333,696,o),
(48,689.667,o),
(48,677,cs),
(48,665,o),
(55.667,658.667,o),
(71,658,cs),
(89,657,ls),
(117.667,655.667,o),
(135.167,648.833,o),
(141.5,636.5,cs),
(147.833,624.167,o),
(151,582,o),
(151,510,cs),
(151,153,ls),
(151,49,o),
(149,41.667,o),
(89,35,cs),
(73,33,ls),
(57,31,o),
(49,25,o),
(49,15,cs),
(49,1.667,o),
(56.667,-5,o),
(72,-5,cs),
(82,-5,l),
(97,-3,l),
(214,0,ls),
(212.667,0,o),
(239,-1,o),
(293,-3,cs),
(321,-4,l),
(332,-5,ls),
(343.333,-6.333,o),
(349,-0.667,o),
(349,12,cs),
(349,24.667,o),
(340,31.667,o),
(322,33,cs),
(300,35,ls),
(245.333,40.333,o),
(241,51,o),
(241,151,cs),
(241,344,l),
(621,344,l),
(621,145,ls),
(621,97.667,o),
(619,69,o),
(615,59,cs),
(609.667,46.333,o),
(591.333,38.333,o),
(560,35,cs),
(541,33,ls),
(523,31,o),
(514,25,o),
(514,15,cs),
(514,2.333,o),
(521.333,-4,o),
(536,-4,cs),
(546,-4,l),
(563,-3,ls),
(607,-0.333,o),
(641,1,o),
(665,1,cs),
(671,1,o),
(702,0,o),
(758,-2,cs),
(786,-3,ls),
(804.667,-3.667,o),
(814,2.333,o),
(814,15,cs),
(814,25,o),
(805.333,31,o),
(788,33,cs),
(767,35,ls),
(741.667,37.667,o),
(726.167,44.833,o),
(720.5,56.5,cs),
(714.833,68.167,o),
(712,98.333,o),
(712,147,cs),
(710,540,l),
(710,546,ls),
(710,644.667,o),
(713.333,652.667,o),
(772,658,cs),
(792,660,ls),
(806.667,662,o),
(814,668.667,o),
(814,680,cs),
(814,692,o),
(805.667,698,o),
(789,698,cs),
(778,698,l),
(759,696,ls),
(734.333,693.333,o),
(701.333,692,o),
(660,692,cs),
(638,692,o),
(603.667,693.333,o),
(557,696,cs),
(539,697,ls),
(521,698.333,o),
(512,692,o),
(512,678,cs),
(512,666.667,o),
(520.667,660.333,o),
(538,659,cs),
(565,657,ls),
(590.333,655,o),
(606,648,o),
(612,636,cs),
(618,624,o),
(621,593.333,o),
(621,544,cs),
(621,385,l),
(241,385,l),
(241,385,l)
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */
10
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
105
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
106
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
25
MDRP[11100]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
1
MDRP[11100]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
48
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
48
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
1
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
50
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
105
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
76
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
76
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
53
MDRP[11100]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
103
MDRP[10000]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
9
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
12
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
15
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
85
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
87
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
89
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
91
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
93
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
95
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
35
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
34
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
34 36
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
35
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
37
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
37 36
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
35
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
39
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
39 36
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
35
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
41
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
41 36
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
35
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
61
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
61 36
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
35
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
63
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
63 36
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
35
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
65
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
65 36
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
35
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
67
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
67 36
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 3 values pushed */
14 21 13
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
14
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 3 values pushed */
0 51 13
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
0
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
21
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
4
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
4
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
14
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
10
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
14
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
16
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
16
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
34
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
29
MDRP[11100]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
45
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
46
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
46
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
56
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
56
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
57
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
73
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
73
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
21
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
80
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
80
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
14
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
86
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
14
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
94
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
94
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
21
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
99
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
99
MDAP[1]	/* MoveDirectAbsPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 865;
}
);
note = H;
},
{
glyphname = O.001;
lastChange = "2025-01-13 19:00:14 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(249.216,17,o),
(165,235.164,o),
(165,402,cs),
(165,526,o),
(202.5,608.167,o),
(256.5,659.5,cs),
(310.5,710.833,o),
(377.333,731,o),
(436,731,cs),
(653.255,731,o),
(736,527.961,o),
(736,342,cs),
(736,230,o),
(703.333,149.333,o),
(654,96,cs),
(604.667,42.667,o),
(538,17,o),
(470,17,cs)
);
},
{
closed = 1;
nodes = (
(671.757,-18,o),
(849,144.974,o),
(849,377,cs),
(849,579.974,o),
(717.084,766,o),
(456,766,cs),
(221.171,766,o),
(52,592.94,o),
(52,366,cs),
(52,166.182,o),
(200.948,-18,o),
(456,-18,cs)
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */
40
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
41
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
35
MDRP[11100]	/* MoveDirectRelPt */
PUSHW[ ]	/* 2 values pushed */
5 3
MIRP[11100]	/* MoveIndirectRelPt */
NPUSHW[ ]	/* 5 values pushed */
154 5 170 5 2
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 19 values pushed */
9 5 25 5 41 5 57 5 73 5 89 5 105 5 121 5 137 5 9
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHW[ ]	/* 1 value pushed */
40
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
25
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
25
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 2 values pushed */
15 3
MIRP[11100]	/* MoveIndirectRelPt */
NPUSHW[ ]	/* 19 values pushed */
6 15 22 15 38 15 54 15 70 15 86 15 102 15 118 15 134 15 9
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 5 values pushed */
149 15 165 15 2
DELTAP1[ ]	/* DeltaExceptionP1 */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
0
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
30
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
30 14
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
20
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
20 4
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 2 values pushed */
0 1
MIRP[11100]	/* MoveIndirectRelPt */
NPUSHW[ ]	/* 33 values pushed */
7 0 23 0 39 0 55 0 71 0 87 0 103 0 119 0 135 0 151 0 167 0 183 0 199 0 215 0 231 0 247 0 16
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 23 values pushed */
7 0 23 0 39 0 55 0 71 0 87 0 103 0 119 0 135 0 151 0 167 0 11
DELTAP2[ ]	/* DeltaExceptionP2 */
NPUSHW[ ]	/* 5 values pushed */
182 0 198 0 2
DELTAP2[ ]	/* DeltaExceptionP2 */
PUSHW[ ]	/* 1 value pushed */
30
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
10 1
MIRP[11100]	/* MoveIndirectRelPt */
NPUSHW[ ]	/* 5 values pushed */
185 10 201 10 2
DELTAP2[ ]	/* DeltaExceptionP2 */
NPUSHW[ ]	/* 33 values pushed */
8 10 24 10 40 10 56 10 72 10 88 10 104 10 120 10 136 10 152 10 168 10 184 10 200 10 216 10 232 10 248 10 16
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 23 values pushed */
8 10 24 10 40 10 56 10 72 10 88 10 104 10 120 10 136 10 152 10 168 10 11
DELTAP2[ ]	/* DeltaExceptionP2 */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 901;
}
);
note = O;
},
{
glyphname = O.002;
lastChange = "2025-01-13 19:00:14 +0000";
layers = (
{
hints = (
{
horizontal = 1;
place = (684,46);
type = Stem;
},
{
horizontal = 1;
place = (-15,44);
type = Stem;
},
{
place = (694,101);
type = Stem;
},
{
place = (47,103);
type = Stem;
}
);
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(414,730,l),
(322,719,l),
(259,697,l),
(193,656,l),
(113,577,l),
(69,494,l),
(49,420,l),
(47,362,l),
(57,273,l),
(85,185,l),
(106,144,l),
(151,90,l),
(216,36,l),
(308,-1,l),
(412,-15,l),
(462,-14,l),
(540,4,l),
(606,30,l),
(658,68,l),
(722,132,l),
(761,196,l),
(785,259,l),
(795,356,l),
(789,426,l),
(771,493,l),
(741,556,l),
(698,615,l),
(640,666,l),
(556,710,l),
(493,725,l),
(493,725,l)
);
},
{
closed = 1;
nodes = (
(420,685,l),
(514,665,l),
(555,642,l),
(596,611,l),
(655,518,l),
(689,410,l),
(694,343,l),
(684,260,l),
(662,193,l),
(608,109,l),
(543,62,l),
(491,40,l),
(425,30,l),
(363,37,l),
(308,59,l),
(260,93,l),
(217,141,l),
(181,207,l),
(160,273,l),
(149,369,l),
(159,456,l),
(182,527,l),
(213,578,l),
(247,617,l),
(295,652,l),
(343,670,l),
(343,670,l)
);
}
);
width = 842;
}
);
},
{
glyphname = O.003;
lastChange = "2025-01-13 19:00:14 +0000";
layers = (
{
hints = (
{
horizontal = 1;
place = (684,46);
type = Stem;
},
{
horizontal = 1;
place = (-15,44);
type = Stem;
},
{
place = (694,101);
type = Stem;
},
{
place = (47,103);
type = Stem;
}
);
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(414,730,l),
(322,719,l),
(259,697,l),
(193,656,l),
(113,577,l),
(69,494,l),
(49,420,l),
(47,362,l),
(57,273,l),
(85,185,l),
(106,144,l),
(151,90,l),
(216,36,l),
(308,-1,l),
(412,-15,l),
(462,-14,l),
(540,4,l),
(606,30,l),
(658,68,l),
(722,132,l),
(761,196,l),
(785,259,l),
(795,356,l),
(789,426,l),
(771,493,l),
(741,556,l),
(698,615,l),
(640,666,l),
(556,710,l),
(493,725,l),
(493,725,l)
);
},
{
closed = 1;
nodes = (
(420,685,l),
(514,665,l),
(555,642,l),
(596,611,l),
(655,518,l),
(689,410,l),
(694,343,l),
(684,260,l),
(662,193,l),
(608,109,l),
(543,62,l),
(491,40,l),
(425,30,l),
(363,37,l),
(308,59,l),
(260,93,l),
(217,141,l),
(181,207,l),
(160,273,l),
(149,369,l),
(159,456,l),
(182,527,l),
(213,578,l),
(247,617,l),
(295,652,l),
(343,670,l),
(343,670,l)
);
}
);
width = 842;
}
);
},
{
glyphname = O.004;
lastChange = "2025-01-13 19:00:14 +0000";
layers = (
{
hints = (
{
horizontal = 1;
place = (616,22);
type = Stem;
},
{
horizontal = 1;
place = (-16,23);
type = Stem;
},
{
place = (590,117);
type = Stem;
},
{
place = (25,118);
type = Stem;
}
);
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(25,321,l),
(29,251,l),
(50,185,l),
(83,123,l),
(133,73,l),
(165,45,l),
(215,16,l),
(285,-9,l),
(373,-16,l),
(426,-14,l),
(473,-3,l),
(566,51,l),
(619,96,l),
(658,146,l),
(698,228,l),
(708,319,l),
(703,385,l),
(690,429,l),
(669,477,l),
(637,522,l),
(564,586,l),
(487,622,l),
(369,639,l),
(257,623,l),
(182,592,l),
(110,531,l),
(65,470,l),
(40,411,l),
(40,411,l)
);
},
{
closed = 1;
nodes = (
(144,342,l),
(151,423,l),
(170,480,l),
(204,540,l),
(245,579,l),
(287,602,l),
(358,617,l),
(433,601,l),
(495,559,l),
(542,500,l),
(575,427,l),
(590,314,l),
(582,235,l),
(565,171,l),
(524,88,l),
(474,39,l),
(454,25,l),
(398,10,l),
(377,8,l),
(337,12,l),
(291,31,l),
(243,66,l),
(197,126,l),
(167,190,l),
(151,252,l),
(151,252,l)
);
}
);
width = 738;
}
);
},
{
glyphname = O.005;
lastChange = "2025-01-13 19:00:14 +0000";
layers = (
{
hints = (
{
horizontal = 1;
place = (706,35);
type = Stem;
},
{
horizontal = 1;
place = (-20,45);
type = Stem;
},
{
place = (724,111);
type = Stem;
},
{
place = (33,110);
type = Stem;
}
);
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(702,644,l),
(688,658,l),
(673,668,l),
(660,678,l),
(634,691,l),
(618,700,l),
(522,732,l),
(424,740,l),
(373,735,l),
(294,718,l),
(269,709,l),
(248,698,l),
(227,688,l),
(192,663,l),
(169,645,l),
(152,627,l),
(98,563,l),
(89,546,l),
(71,519,l),
(63,496,l),
(50,464,l),
(36,349,l),
(36,306,l),
(41,285,l),
(59,212,l),
(86,164,l),
(128,105,l),
(153,81,l),
(242,20,l),
(262,11,l),
(297,-2,l),
(312,-6,l),
(331,-12,l),
(357,-16,l),
(380,-19,l),
(397,-21,l),
(416,-22,l),
(454,-20,l),
(548,2,l),
(565,7,l),
(626,34,l),
(668,63,l),
(700,90,l),
(758,157,l),
(769,173,l),
(784,193,l),
(796,217,l),
(807,236,l),
(819,268,l),
(831,326,l),
(833,350,l),
(833,364,l),
(834,385,l),
(832,400,l),
(825,444,l),
(807,494,l),
(795,517,l),
(787,535,l),
(769,562,l),
(743,597,l),
(714,628,l),
(714,628,l)
);
},
{
closed = 1;
nodes = (
(226,121,l),
(191,173,l),
(164,234,l),
(146,327,l),
(142,386,l),
(146,451,l),
(158,506,l),
(200,588,l),
(252,641,l),
(277,660,l),
(300,671,l),
(375,695,l),
(396,695,l),
(418,698,l),
(440,696,l),
(463,695,l),
(488,687,l),
(558,659,l),
(603,625,l),
(634,598,l),
(649,573,l),
(668,549,l),
(677,524,l),
(692,496,l),
(699,466,l),
(713,430,l),
(716,390,l),
(721,330,l),
(710,247,l),
(677,168,l),
(644,116,l),
(632,102,l),
(582,60,l),
(528,38,l),
(442,20,l),
(385,25,l),
(347,37,l),
(278,72,l),
(259,89,l),
(243,104,l),
(235,114,l),
(235,114,l)
);
}
);
width = 869;
}
);
},
{
glyphname = O.006;
lastChange = "2025-01-13 19:00:14 +0000";
layers = (
{
hints = (
{
horizontal = 1;
place = (691,38);
type = Stem;
},
{
horizontal = 1;
place = (-20,39);
type = Stem;
},
{
place = (659,115);
type = Stem;
},
{
place = (26,118);
type = Stem;
}
);
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(26,344,l),
(31,288,l),
(41,244,l),
(70,180,l),
(83,159,l),
(90,148,l),
(96,139,l),
(106,128,l),
(118,113,l),
(168,62,l),
(210,36,l),
(281,-3,l),
(330,-16,l),
(396,-18,l),
(456,-15,l),
(511,0,l),
(585,38,l),
(681,117,l),
(710,153,l),
(742,208,l),
(771,317,l),
(772,357,l),
(772,395,l),
(760,460,l),
(727,544,l),
(673,621,l),
(661,634,l),
(642,649,l),
(602,678,l),
(566,697,l),
(539,709,l),
(499,720,l),
(403,730,l),
(353,725,l),
(325,721,l),
(303,714,l),
(281,710,l),
(258,699,l),
(193,666,l),
(161,643,l),
(139,622,l),
(90,563,l),
(56,502,l),
(43,468,l),
(36,434,l),
(31,402,l),
(29,374,l),
(29,374,l)
);
},
{
closed = 1;
nodes = (
(392,693,l),
(490,679,l),
(553,644,l),
(573,621,l),
(632,531,l),
(655,441,l),
(660,381,l),
(652,294,l),
(640,236,l),
(607,153,l),
(582,112,l),
(542,70,l),
(523,56,l),
(433,26,l),
(404,24,l),
(385,23,l),
(367,25,l),
(315,39,l),
(278,61,l),
(235,101,l),
(192,164,l),
(175,199,l),
(153,268,l),
(147,314,l),
(145,355,l),
(146,391,l),
(149,432,l),
(157,476,l),
(168,519,l),
(200,584,l),
(256,650,l),
(306,679,l),
(306,679,l)
);
}
);
width = 799;
}
);
},
{
glyphname = O.007;
lastChange = "2025-01-13 19:00:14 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(192.667,637,o),
(40,496,o),
(40,316,cs),
(40,136,o),
(193.333,-9,o),
(384,-9,cs),
(568,-9,o),
(728,141.333,o),
(728,316,cs),
(728,498.667,o),
(579.333,637,o),
(386,637,cs)
);
},
{
closed = 1;
nodes = (
(443.667,612,o),
(500.333,581.667,o),
(545,521,cs),
(586.333,463.667,o),
(607,394.333,o),
(607,313,cs),
(607,239.667,o),
(588.667,172.667,o),
(552,112,cs),
(512.667,48,o),
(459.667,16,o),
(393,16,cs),
(265,16,o),
(161,158.667,o),
(161,336,cs),
(161,500,o),
(248.333,612,o),
(375,612,cs)
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */
10
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
26
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
27
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
3
MDRP[11100]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
26
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
9
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
9
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
15
MDRP[11100]	/* MoveDirectRelPt */
NPUSHW[ ]	/* 21 values pushed */
102 15 118 15 134 15 150 15 166 15 182 15 198 15 214 15 230 15 246 15 10
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 7 values pushed */
6 15 22 15 38 15 3
DELTAP2[ ]	/* DeltaExceptionP2 */
NPUSHW[ ]	/* 5 values pushed */
53 15 69 15 2
DELTAP2[ ]	/* DeltaExceptionP2 */
PUSHW[ ]	/* 1 value pushed */
3
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
22
MDRP[11100]	/* MoveDirectRelPt */
NPUSHW[ ]	/* 5 values pushed */
58 22 74 22 2
DELTAP2[ ]	/* DeltaExceptionP2 */
NPUSHW[ ]	/* 21 values pushed */
105 22 121 22 137 22 153 22 169 22 185 22 201 22 217 22 233 22 249 22 10
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 7 values pushed */
9 22 25 22 41 22 3
DELTAP2[ ]	/* DeltaExceptionP2 */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
37
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
0
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
0 44
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
37
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
6
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
6 38
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
12
MDRP[11100]	/* MoveDirectRelPt */
NPUSHW[ ]	/* 5 values pushed */
57 12 73 12 2
DELTAP2[ ]	/* DeltaExceptionP2 */
NPUSHW[ ]	/* 21 values pushed */
104 12 120 12 136 12 152 12 168 12 184 12 200 12 216 12 232 12 248 12 10
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 7 values pushed */
8 12 24 12 40 12 3
DELTAP2[ ]	/* DeltaExceptionP2 */
PUSHW[ ]	/* 1 value pushed */
6
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
18
MDRP[11100]	/* MoveDirectRelPt */
NPUSHW[ ]	/* 21 values pushed */
103 18 119 18 135 18 151 18 167 18 183 18 199 18 215 18 231 18 247 18 10
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 7 values pushed */
7 18 23 18 39 18 3
DELTAP2[ ]	/* DeltaExceptionP2 */
NPUSHW[ ]	/* 5 values pushed */
54 18 70 18 2
DELTAP2[ ]	/* DeltaExceptionP2 */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 769;
}
);
note = O;
},
{
glyphname = O.008;
lastChange = "2025-01-13 19:00:14 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(369.667,753,o),
(291.333,730.333,o),
(224,685,cs),
(153.333,638.333,o),
(88.667,557.333,o),
(66,488,cs),
(48.667,438,o),
(40,388.667,o),
(40,340,cs),
(40,276,o),
(57.667,218.333,o),
(93,167,cs),
(140.333,98.333,o),
(196.333,48,o),
(261,16,cs),
(314.333,-10,o),
(372.333,-23,o),
(435,-23,cs),
(531,-23,o),
(647,20.333,o),
(715,83,cs),
(804.333,163,o),
(862,281.667,o),
(862,383,cs),
(862,403,o),
(859,425.333,o),
(853,450,cs),
(839.667,506.667,o),
(812,560.333,o),
(770,611,cs),
(691.333,705.667,o),
(587.667,753,o),
(459,753,cs)
);
},
{
closed = 1;
nodes = (
(520.333,715,o),
(611.333,671.667,o),
(662,605,cs),
(720,528.333,o),
(749,439.667,o),
(749,339,cs),
(749,289.667,o),
(741,246.333,o),
(725,209,cs),
(694.333,135,o),
(651.333,85,o),
(596,59,cs),
(547.333,35.667,o),
(501.333,24,o),
(458,24,cs),
(400.667,24,o),
(316,46,o),
(240,138,cs),
(183.333,206,o),
(155,295,o),
(155,405,cs),
(155,489,o),
(174.333,555.333,o),
(213,604,cs),
(271,678,o),
(345,715,o),
(435,715,cs)
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */
10
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
45
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
46
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
6
MDRP[11100]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
45
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
18
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
18
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
29
MDRP[11100]	/* MoveDirectRelPt */
NPUSHW[ ]	/* 21 values pushed */
102 29 118 29 134 29 150 29 166 29 182 29 198 29 214 29 230 29 246 29 10
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 7 values pushed */
6 29 22 29 38 29 3
DELTAP2[ ]	/* DeltaExceptionP2 */
NPUSHW[ ]	/* 5 values pushed */
53 29 69 29 2
DELTAP2[ ]	/* DeltaExceptionP2 */
PUSHW[ ]	/* 1 value pushed */
6
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
40
MDRP[11100]	/* MoveDirectRelPt */
NPUSHW[ ]	/* 5 values pushed */
58 40 74 40 2
DELTAP2[ ]	/* DeltaExceptionP2 */
NPUSHW[ ]	/* 21 values pushed */
105 40 121 40 137 40 153 40 169 40 185 40 201 40 217 40 233 40 249 40 10
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 7 values pushed */
9 40 25 40 41 40 3
DELTAP2[ ]	/* DeltaExceptionP2 */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
37
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
0
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
0 44
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
37
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
12
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
12 38
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
25
MDRP[11100]	/* MoveDirectRelPt */
NPUSHW[ ]	/* 5 values pushed */
57 25 73 25 2
DELTAP2[ ]	/* DeltaExceptionP2 */
NPUSHW[ ]	/* 21 values pushed */
104 25 120 25 136 25 152 25 168 25 184 25 200 25 216 25 232 25 248 25 10
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 7 values pushed */
8 25 24 25 40 25 3
DELTAP2[ ]	/* DeltaExceptionP2 */
PUSHW[ ]	/* 1 value pushed */
12
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
34
MDRP[11100]	/* MoveDirectRelPt */
NPUSHW[ ]	/* 21 values pushed */
103 34 119 34 135 34 151 34 167 34 183 34 199 34 215 34 231 34 247 34 10
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 7 values pushed */
7 34 23 34 39 34 3
DELTAP2[ ]	/* DeltaExceptionP2 */
NPUSHW[ ]	/* 5 values pushed */
54 34 70 34 2
DELTAP2[ ]	/* DeltaExceptionP2 */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 901;
}
);
note = O;
},
{
glyphname = O.009;
lastChange = "2025-01-13 19:00:14 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(218,775,o),
(48,601,o),
(48,377,cs),
(48,153,o),
(213.333,-19,o),
(432,-19,cs),
(653.333,-19,o),
(822,149.333,o),
(822,376,cs),
(822,601.333,o),
(652.667,775,o),
(434,775,cs)
);
},
{
closed = 1;
nodes = (
(599,741,o),
(714,589,o),
(714,373,cs),
(714,262.333,o),
(690.333,175,o),
(643,111,cs),
(600.333,55,o),
(520.667,17,o),
(442,17,cs),
(272.667,17,o),
(153,167.667,o),
(153,377,cs),
(153,601,o),
(261.667,741,o),
(435,741,cs)
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */
10
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
26
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
27
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
3
MDRP[11100]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
26
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
9
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
9
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
15
MDRP[11100]	/* MoveDirectRelPt */
NPUSHW[ ]	/* 21 values pushed */
102 15 118 15 134 15 150 15 166 15 182 15 198 15 214 15 230 15 246 15 10
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 7 values pushed */
6 15 22 15 38 15 3
DELTAP2[ ]	/* DeltaExceptionP2 */
NPUSHW[ ]	/* 5 values pushed */
53 15 69 15 2
DELTAP2[ ]	/* DeltaExceptionP2 */
PUSHW[ ]	/* 1 value pushed */
3
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
23
MDRP[11100]	/* MoveDirectRelPt */
NPUSHW[ ]	/* 5 values pushed */
58 23 74 23 2
DELTAP2[ ]	/* DeltaExceptionP2 */
NPUSHW[ ]	/* 21 values pushed */
105 23 121 23 137 23 153 23 169 23 185 23 201 23 217 23 233 23 249 23 10
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 7 values pushed */
9 23 25 23 41 23 3
DELTAP2[ ]	/* DeltaExceptionP2 */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
33
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
0
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
0 40
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
33
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
6
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
6 34
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
12
MDRP[11100]	/* MoveDirectRelPt */
NPUSHW[ ]	/* 5 values pushed */
57 12 73 12 2
DELTAP2[ ]	/* DeltaExceptionP2 */
NPUSHW[ ]	/* 21 values pushed */
104 12 120 12 136 12 152 12 168 12 184 12 200 12 216 12 232 12 248 12 10
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 7 values pushed */
8 12 24 12 40 12 3
DELTAP2[ ]	/* DeltaExceptionP2 */
PUSHW[ ]	/* 1 value pushed */
6
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
18
MDRP[11100]	/* MoveDirectRelPt */
NPUSHW[ ]	/* 21 values pushed */
103 18 119 18 135 18 151 18 167 18 183 18 199 18 215 18 231 18 247 18 10
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 7 values pushed */
7 18 23 18 39 18 3
DELTAP2[ ]	/* DeltaExceptionP2 */
NPUSHW[ ]	/* 5 values pushed */
54 18 70 18 2
DELTAP2[ ]	/* DeltaExceptionP2 */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 869;
}
);
note = O;
},
{
glyphname = O.010;
lastChange = "2025-01-13 19:00:14 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(191.241,726.649,o),
(47,555.765,o),
(47,362,cs),
(47,295.195,o),
(62.967,165.376,o),
(179,67,cs),
(267.554,-7.718,o),
(353.286,-16,o),
(414,-16,cs),
(494,-16,o),
(582,-0.333,o),
(670,73,cs),
(704.667,101,o),
(746.333,146,o),
(773,218,cs),
(789.667,260.667,o),
(798,307,o),
(798,357,cs),
(798,550.224,o),
(660.567,737.317,o),
(416,732,cs)
);
},
{
closed = 1;
nodes = (
(610.634,687,o),
(697,496.724,o),
(697,342,cs),
(697,159.636,o),
(578.6,28,o),
(427,28,cs),
(249.814,28,o),
(150,197.575,o),
(150,369,cs),
(150,567.77,o),
(279.924,687,o),
(422,687,cs)
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */
48
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
49
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
5
MDRP[11100]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
48
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
23
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
23
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 2 values pushed */
33 3
MIRP[11100]	/* MoveIndirectRelPt */
NPUSHW[ ]	/* 17 values pushed */
6 33 22 33 38 33 54 33 70 33 86 33 102 33 118 33 8
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 5 values pushed */
133 33 149 33 2
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHW[ ]	/* 1 value pushed */
5
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
43 3
MIRP[11100]	/* MoveIndirectRelPt */
NPUSHW[ ]	/* 5 values pushed */
138 43 154 43 2
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 17 values pushed */
9 43 25 43 41 43 57 43 73 43 89 43 105 43 121 43 8
DELTAP1[ ]	/* DeltaExceptionP1 */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
0
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
0
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
0 18
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
13
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
13 4
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
28 1
MIRP[11100]	/* MoveIndirectRelPt */
NPUSHW[ ]	/* 5 values pushed */
153 28 169 28 2
DELTAP2[ ]	/* DeltaExceptionP2 */
NPUSHW[ ]	/* 33 values pushed */
8 28 24 28 40 28 56 28 72 28 88 28 104 28 120 28 136 28 152 28 168 28 184 28 200 28 216 28 232 28 248 28 16
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 19 values pushed */
8 28 24 28 40 28 56 28 72 28 88 28 104 28 120 28 136 28 9
DELTAP2[ ]	/* DeltaExceptionP2 */
PUSHW[ ]	/* 1 value pushed */
13
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
38 1
MIRP[11100]	/* MoveIndirectRelPt */
NPUSHW[ ]	/* 33 values pushed */
7 38 23 38 39 38 55 38 71 38 87 38 103 38 119 38 135 38 151 38 167 38 183 38 199 38 215 38 231 38 247 38 16
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 19 values pushed */
7 38 23 38 39 38 55 38 71 38 87 38 103 38 119 38 135 38 9
DELTAP2[ ]	/* DeltaExceptionP2 */
NPUSHW[ ]	/* 5 values pushed */
150 38 166 38 2
DELTAP2[ ]	/* DeltaExceptionP2 */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 846;
}
);
note = O;
},
{
glyphname = O.011;
lastChange = "2025-01-13 19:00:14 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(207.667,723,o),
(52,565.667,o),
(52,347,cs),
(52,123,o),
(199.333,-31,o),
(414,-31,cs),
(522.667,-31,o),
(613.667,8.333,o),
(687,87,cs),
(751.667,156.333,o),
(784,243.667,o),
(784,349,cs),
(784,452.333,o),
(757,536,o),
(703,600,cs),
(634.333,682,o),
(541.667,723,o),
(425,723,cs)
);
},
{
closed = 1;
nodes = (
(509.667,685,o),
(575,648.667,o),
(621,576,cs),
(660.333,514.667,o),
(680,439,o),
(680,349,cs),
(680,249,o),
(657,168,o),
(611,106,cs),
(561.667,39.333,o),
(497.667,6,o),
(419,6,cs),
(267,6,o),
(158,144.667,o),
(158,346,cs),
(158,547.333,o),
(266.333,685,o),
(425,685,cs)
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */
10
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
28
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
29
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
4
MDRP[11100]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
24
MDRP[11100]	/* MoveDirectRelPt */
NPUSHW[ ]	/* 5 values pushed */
58 24 74 24 2
DELTAP2[ ]	/* DeltaExceptionP2 */
NPUSHW[ ]	/* 21 values pushed */
105 24 121 24 137 24 153 24 169 24 185 24 201 24 217 24 233 24 249 24 10
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 7 values pushed */
9 24 25 24 41 24 3
DELTAP2[ ]	/* DeltaExceptionP2 */
PUSHW[ ]	/* 1 value pushed */
6
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
6
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
28
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
11
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
11
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
17
MDRP[11100]	/* MoveDirectRelPt */
NPUSHW[ ]	/* 21 values pushed */
102 17 118 17 134 17 150 17 166 17 182 17 198 17 214 17 230 17 246 17 10
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 7 values pushed */
6 17 22 17 38 17 3
DELTAP2[ ]	/* DeltaExceptionP2 */
NPUSHW[ ]	/* 5 values pushed */
53 17 69 17 2
DELTAP2[ ]	/* DeltaExceptionP2 */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
35
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
0
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
0 42
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
35
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
8
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
8 36
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
14
MDRP[11100]	/* MoveDirectRelPt */
NPUSHW[ ]	/* 5 values pushed */
57 14 73 14 2
DELTAP2[ ]	/* DeltaExceptionP2 */
NPUSHW[ ]	/* 21 values pushed */
104 14 120 14 136 14 152 14 168 14 184 14 200 14 216 14 232 14 248 14 10
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 7 values pushed */
8 14 24 14 40 14 3
DELTAP2[ ]	/* DeltaExceptionP2 */
PUSHW[ ]	/* 1 value pushed */
8
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
20
MDRP[11100]	/* MoveDirectRelPt */
NPUSHW[ ]	/* 21 values pushed */
103 20 119 20 135 20 151 20 167 20 183 20 199 20 215 20 231 20 247 20 10
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 7 values pushed */
7 20 23 20 39 20 3
DELTAP2[ ]	/* DeltaExceptionP2 */
NPUSHW[ ]	/* 5 values pushed */
54 20 70 20 2
DELTAP2[ ]	/* DeltaExceptionP2 */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 836;
}
);
note = O;
},
{
glyphname = a;
layers = (
{
layerId = m01;
width = 600;
}
);
unicode = 97;
},
{
glyphname = b;
layers = (
{
layerId = m01;
width = 600;
}
);
unicode = 98;
},
{
glyphname = c;
layers = (
{
layerId = m01;
width = 600;
}
);
unicode = 99;
},
{
glyphname = d;
layers = (
{
layerId = m01;
width = 600;
}
);
unicode = 100;
},
{
glyphname = e;
layers = (
{
layerId = m01;
width = 600;
}
);
unicode = 101;
},
{
glyphname = f;
layers = (
{
layerId = m01;
width = 600;
}
);
unicode = 102;
},
{
glyphname = g;
layers = (
{
layerId = m01;
width = 600;
}
);
unicode = 103;
},
{
glyphname = h;
layers = (
{
layerId = m01;
width = 600;
}
);
unicode = 104;
},
{
glyphname = i;
layers = (
{
layerId = m01;
width = 600;
}
);
unicode = 105;
},
{
glyphname = j;
layers = (
{
layerId = m01;
width = 600;
}
);
unicode = 106;
},
{
glyphname = k;
layers = (
{
layerId = m01;
width = 600;
}
);
unicode = 107;
},
{
glyphname = l;
layers = (
{
layerId = m01;
width = 600;
}
);
unicode = 108;
},
{
glyphname = m;
layers = (
{
layerId = m01;
width = 600;
}
);
unicode = 109;
},
{
glyphname = n;
layers = (
{
layerId = m01;
width = 600;
}
);
unicode = 110;
},
{
glyphname = o;
layers = (
{
layerId = m01;
width = 600;
}
);
unicode = 111;
},
{
glyphname = p;
layers = (
{
layerId = m01;
width = 600;
}
);
unicode = 112;
},
{
glyphname = q;
layers = (
{
layerId = m01;
width = 600;
}
);
unicode = 113;
},
{
glyphname = r;
layers = (
{
layerId = m01;
width = 600;
}
);
unicode = 114;
},
{
glyphname = s;
layers = (
{
layerId = m01;
width = 600;
}
);
unicode = 115;
},
{
glyphname = t;
layers = (
{
layerId = m01;
width = 600;
}
);
unicode = 116;
},
{
glyphname = u;
layers = (
{
layerId = m01;
width = 600;
}
);
unicode = 117;
},
{
glyphname = v;
layers = (
{
layerId = m01;
width = 600;
}
);
unicode = 118;
},
{
glyphname = w;
layers = (
{
layerId = m01;
width = 600;
}
);
unicode = 119;
},
{
glyphname = x;
layers = (
{
layerId = m01;
width = 600;
}
);
unicode = 120;
},
{
glyphname = y;
layers = (
{
layerId = m01;
width = 600;
}
);
unicode = 121;
},
{
glyphname = z;
layers = (
{
layerId = m01;
width = 600;
}
);
unicode = 122;
},
{
glyphname = a.001;
lastChange = "2025-01-13 19:00:14 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(127,147,o),
(159,164.333,o),
(227,187,cs),
(248.333,195,o),
(266.333,198,o),
(273,198,cs),
(281,198,o),
(285,196,o),
(285,184,cs),
(282,117,ls),
(282,93,o),
(281.333,77.667,o),
(268,63,cs),
(254.667,51,o),
(220.667,35,o),
(198,35,cs),
(141.689,35,o),
(127,83.549,o),
(127,103,cs)
);
},
{
closed = 1;
nodes = (
(60.667,160.667,o),
(40,132.667,o),
(40,90,cs),
(40,58,o),
(53.667,30,o),
(75,10,cs),
(94.333,-7.333,o),
(120.667,-16,o),
(154,-16,cs),
(186,-16,o),
(209.333,-1.333,o),
(236,12,cs),
(247.333,18.667,o),
(256.5,24.167,o),
(263.5,28.5,cs),
(270.5,32.833,o),
(276,35,o),
(280,35,cs),
(288,35,o),
(294,27,o),
(298,19,c),
(318,-6.333,o),
(344,-16,o),
(372,-16,cs),
(414.431,-16,o),
(467,21.121,o),
(467,34,cs),
(467,44,o),
(464.333,49,o),
(459,49,cs),
(457.667,49,o),
(455.667,48,o),
(453,46,cs),
(450.333,44,o),
(447.333,42.333,o),
(444,41,cs),
(437.333,38.333,o),
(428,34,o),
(416,34,cs),
(372,34,o),
(361.333,79.667,o),
(364,133,cs),
(371,330,ls),
(373.667,415.333,o),
(334.333,462,o),
(253,462,cs),
(174.562,462,o),
(42,383.753,o),
(42,323,cs),
(42,312.333,o),
(47.333,307,o),
(58,307,cs),
(74,307,o),
(106,315.667,o),
(122,329,cs),
(131.333,335.667,o),
(132.667,349.667,o),
(134,367,cs),
(136.667,401.667,o),
(174,418,o),
(206,418,cs),
(275.167,418,o),
(289,364.158,o),
(289,320,cs),
(288,268,ls),
(286.667,250.667,o),
(285,240.333,o),
(269,235,cs),
(134,186,l),
(134,186,l)
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */
87
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 4 values pushed */
50 2 24 4
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
50
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
87
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
83
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
83
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 2 values pushed */
0 2
MIRP[11100]	/* MoveIndirectRelPt */
NPUSHW[ ]	/* 19 values pushed */
6 0 22 0 38 0 54 0 70 0 86 0 102 0 118 0 134 0 9
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 5 values pushed */
149 0 165 0 2
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHW[ ]	/* 1 value pushed */
24
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
11
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
11
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
0
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
33
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
33
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
0
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
36
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
36
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
83
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
41
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
41
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
50
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
66
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
66
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
24
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
72
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
72
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
0
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
86
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
86
MDAP[1]	/* MoveDirectAbsPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
0
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
46
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
46 10
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
66
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
66 4
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
78
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
78 4
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 2 values pushed */
5 1
MIRP[11100]	/* MoveIndirectRelPt */
NPUSHW[ ]	/* 33 values pushed */
7 5 23 5 39 5 55 5 71 5 87 5 103 5 119 5 135 5 151 5 167 5 183 5 199 5 215 5 231 5 247 5 16
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 23 values pushed */
7 5 23 5 39 5 55 5 71 5 87 5 103 5 119 5 135 5 151 5 167 5 11
DELTAP2[ ]	/* DeltaExceptionP2 */
NPUSHW[ ]	/* 5 values pushed */
182 5 198 5 2
DELTAP2[ ]	/* DeltaExceptionP2 */
PUSHW[ ]	/* 1 value pushed */
46
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
30 1
MIRP[11100]	/* MoveIndirectRelPt */
NPUSHW[ ]	/* 5 values pushed */
185 30 201 30 2
DELTAP2[ ]	/* DeltaExceptionP2 */
NPUSHW[ ]	/* 33 values pushed */
8 30 24 30 40 30 56 30 72 30 88 30 104 30 120 30 136 30 152 30 168 30 184 30 200 30 216 30 232 30 248 30 16
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 23 values pushed */
8 30 24 30 40 30 56 30 72 30 88 30 104 30 120 30 136 30 152 30 168 30 11
DELTAP2[ ]	/* DeltaExceptionP2 */
PUSHW[ ]	/* 1 value pushed */
5
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
53
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
72
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
72
MDAP[1]	/* MoveDirectAbsPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 458;
}
);
note = a;
},
{
glyphname = a.002;
lastChange = "2025-01-13 19:00:14 +0000";
layers = (
{
hints = (
{
horizontal = 1;
place = (411,54);
type = Stem;
},
{
horizontal = 1;
place = (-7,54);
type = Stem;
},
{
place = (276,78);
type = Stem;
},
{
place = (40,83);
type = Stem;
}
);
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(417,61,l),
(380,42,l),
(360,56,l),
(350,122,l),
(355,305,l),
(351,369,l),
(337,412,l),
(310,440,l),
(259,461,l),
(222,462,l),
(198,450,l),
(167,432,l),
(136,413,l),
(101,389,l),
(77,371,l),
(61,344,l),
(57,323,l),
(68,309,l),
(112,324,l),
(122,346,l),
(130,372,l),
(188,405,l),
(212,410,l),
(246,396,l),
(264,369,l),
(276,326,l),
(276,249,l),
(151,203,l),
(83,174,l),
(49,139,l),
(40,98,l),
(46,55,l),
(67,21,l),
(98,-1,l),
(144,-7,l),
(191,-1,l),
(230,18,l),
(276,61,l),
(280,27,l),
(301,1,l),
(331,-10,l),
(364,-6,l),
(394,10,l),
(431,36,l),
(431,36,l)
);
},
{
closed = 1;
nodes = (
(276,97,l),
(245,72,l),
(216,55,l),
(184,47,l),
(160,51,l),
(141,64,l),
(128,84,l),
(123,109,l),
(129,133,l),
(141,153,l),
(169,174,l),
(222,196,l),
(274,216,l),
(274,216,l)
);
}
);
width = 442;
}
);
},
{
glyphname = a.003;
lastChange = "2025-01-13 19:00:14 +0000";
layers = (
{
hints = (
{
horizontal = 1;
place = (411,54);
type = Stem;
},
{
horizontal = 1;
place = (-7,54);
type = Stem;
},
{
place = (276,78);
type = Stem;
},
{
place = (40,83);
type = Stem;
}
);
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(417,61,l),
(380,42,l),
(360,56,l),
(350,122,l),
(355,305,l),
(351,369,l),
(337,412,l),
(310,440,l),
(259,461,l),
(222,462,l),
(198,450,l),
(167,432,l),
(136,413,l),
(101,389,l),
(77,371,l),
(61,344,l),
(57,323,l),
(68,309,l),
(112,324,l),
(122,346,l),
(130,372,l),
(188,405,l),
(212,410,l),
(246,396,l),
(264,369,l),
(276,326,l),
(276,249,l),
(151,203,l),
(83,174,l),
(49,139,l),
(40,98,l),
(46,55,l),
(67,21,l),
(98,-1,l),
(144,-7,l),
(191,-1,l),
(230,18,l),
(276,61,l),
(280,27,l),
(301,1,l),
(331,-10,l),
(364,-6,l),
(394,10,l),
(431,36,l),
(431,36,l)
);
},
{
closed = 1;
nodes = (
(276,97,l),
(245,72,l),
(216,55,l),
(184,47,l),
(160,51,l),
(141,64,l),
(128,84,l),
(123,109,l),
(129,133,l),
(141,153,l),
(169,174,l),
(222,196,l),
(274,216,l),
(274,216,l)
);
}
);
width = 442;
}
);
},
{
glyphname = a.004;
lastChange = "2025-01-13 19:00:14 +0000";
layers = (
{
hints = (
{
horizontal = 1;
place = (441,23);
type = Stem;
},
{
horizontal = 1;
place = (-6,60);
type = Stem;
},
{
place = (251,92);
type = Stem;
},
{
place = (17,100);
type = Stem;
}
);
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(220,51,l),
(241,66,l),
(262,40,l),
(284,9,l),
(308,-3,l),
(326,-6,l),
(359,0,l),
(388,19,l),
(420,50,l),
(423,58,l),
(416,70,l),
(397,59,l),
(373,52,l),
(357,56,l),
(346,66,l),
(334,113,l),
(337,166,l),
(340,299,l),
(341,351,l),
(343,386,l),
(339,414,l),
(322,438,l),
(287,455,l),
(228,462,l),
(151,453,l),
(97,433,l),
(48,392,l),
(18,344,l),
(15,329,l),
(18,316,l),
(35,308,l),
(65,316,l),
(94,329,l),
(111,358,l),
(124,389,l),
(160,429,l),
(197,440,l),
(228,430,l),
(244,413,l),
(248,369,l),
(251,303,l),
(241,263,l),
(217,250,l),
(174,232,l),
(95,193,l),
(59,167,l),
(33,133,l),
(17,75,l),
(21,40,l),
(35,17,l),
(75,-4,l),
(97,-7,l),
(140,3,l),
(201,38,l),
(201,38,l)
);
},
{
closed = 1;
nodes = (
(120,137,l),
(139,180,l),
(190,215,l),
(224,230,l),
(237,234,l),
(246,228,l),
(250,213,l),
(248,145,l),
(237,99,l),
(211,72,l),
(189,59,l),
(167,57,l),
(141,65,l),
(126,84,l),
(118,119,l),
(118,119,l)
);
}
);
width = 425;
}
);
},
{
glyphname = a.005;
lastChange = "2025-01-13 19:00:14 +0000";
layers = (
{
hints = (
{
horizontal = 1;
place = (398,65);
type = Stem;
},
{
horizontal = 1;
place = (-11,55);
type = Stem;
},
{
place = (260,73);
type = Stem;
},
{
place = (24,78);
type = Stem;
}
);
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(335,222,l),
(336,267,l),
(335,328,l),
(327,395,l),
(303,430,l),
(238,459,l),
(196,463,l),
(129,427,l),
(58,380,l),
(38,361,l),
(31,326,l),
(39,297,l),
(72,317,l),
(101,334,l),
(97,352,l),
(99,370,l),
(114,381,l),
(131,393,l),
(175,396,l),
(222,387,l),
(249,361,l),
(255,345,l),
(257,244,l),
(230,236,l),
(206,225,l),
(195,222,l),
(178,215,l),
(167,211,l),
(139,200,l),
(103,184,l),
(72,169,l),
(55,159,l),
(33,140,l),
(21,109,l),
(45,24,l),
(66,-1,l),
(109,-11,l),
(151,-6,l),
(180,11,l),
(261,80,l),
(264,33,l),
(287,4,l),
(329,-11,l),
(354,-6,l),
(378,5,l),
(414,66,l),
(415,78,l),
(398,86,l),
(380,61,l),
(360,54,l),
(336,69,l),
(329,159,l),
(331,187,l),
(331,187,l)
);
},
{
closed = 1;
nodes = (
(256,217,l),
(256,146,l),
(254,109,l),
(220,74,l),
(204,62,l),
(155,43,l),
(122,54,l),
(101,117,l),
(118,147,l),
(138,162,l),
(159,174,l),
(186,187,l),
(226,206,l),
(226,206,l)
);
}
);
width = 425;
}
);
},
{
glyphname = a.006;
lastChange = "2025-01-13 19:00:14 +0000";
layers = (
{
hints = (
{
horizontal = 1;
place = (421,37);
type = Stem;
},
{
horizontal = 1;
place = (-11,44);
type = Stem;
},
{
place = (246,72);
type = Stem;
},
{
place = (27,69);
type = Stem;
}
);
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(243,44,l),
(289,4,l),
(309,1,l),
(365,18,l),
(418,58,l),
(419,68,l),
(412,80,l),
(390,72,l),
(351,48,l),
(325,67,l),
(318,110,l),
(322,215,l),
(324,265,l),
(326,343,l),
(319,399,l),
(289,437,l),
(251,453,l),
(228,456,l),
(172,447,l),
(127,429,l),
(82,391,l),
(44,340,l),
(34,309,l),
(37,296,l),
(59,291,l),
(86,298,l),
(102,316,l),
(116,359,l),
(125,382,l),
(142,403,l),
(169,417,l),
(191,419,l),
(227,409,l),
(247,389,l),
(251,333,l),
(250,302,l),
(248,259,l),
(183,233,l),
(96,180,l),
(73,157,l),
(60,141,l),
(46,121,l),
(39,106,l),
(26,49,l),
(42,11,l),
(64,-7,l),
(107,-13,l),
(184,7,l),
(219,25,l),
(219,25,l)
);
},
{
closed = 1;
nodes = (
(230,215,l),
(240,211,l),
(245,202,l),
(244,174,l),
(235,79,l),
(206,49,l),
(145,29,l),
(124,35,l),
(104,58,l),
(96,92,l),
(99,112,l),
(114,138,l),
(156,184,l),
(156,184,l)
);
}
);
width = 421;
}
);
},
{
glyphname = a.007;
lastChange = "2025-01-13 19:00:14 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(280,267.667,o),
(276.333,262.333,o),
(255,253,cs),
(179,220.333,o),
(131,197.333,o),
(111,184,cs),
(68.333,154,o),
(47,117.667,o),
(47,75,cs),
(47,25.667,o),
(77.333,-9,o),
(124,-9,cs),
(161.333,-9,o),
(204,10.667,o),
(252,50,cs),
(265.333,60.667,o),
(272.667,66,o),
(274,66,cs),
(276.667,66,o),
(281.333,59.667,o),
(288,47,cs),
(306.667,11,o),
(329.667,-7,o),
(357,-7,cs),
(395.667,-7,o),
(459,36.333,o),
(459,63,cs),
(459,69,o),
(456.333,72,o),
(451,72,cs),
(447,72,o),
(441.333,69.333,o),
(434,64,cs),
(424.667,57.333,o),
(415,54,o),
(405,54,cs),
(384.333,54,o),
(374,72.667,o),
(374,110,cs),
(374,391,ls),
(374,439.667,o),
(335.333,464,o),
(258,464,cs),
(204,464,o),
(157.333,451.333,o),
(118,426,cs),
(78,402,o),
(43,354.333,o),
(43,325,cs),
(43,313,o),
(50.667,307,o),
(66,307,cs),
(77.333,307,o),
(93.333,312.333,o),
(114,323,cs),
(127.333,329.667,o),
(136.333,340.667,o),
(141,356,cs),
(160.333,412,o),
(190,440,o),
(230,440,cs),
(263.333,440,o),
(280,412,o),
(280,356,cs),
(280,289,l),
(280,289,l)
);
},
{
closed = 1;
nodes = (
(280,131.333,o),
(274.333,107.667,o),
(263,91,cs),
(245.667,67,o),
(223.333,55,o),
(196,55,cs),
(165.333,55,o),
(150,77,o),
(150,121,cs),
(150,163.667,o),
(164.667,185.333,o),
(214,212,cs),
(238.667,225.333,o),
(257.333,232,o),
(270,232,cs),
(276.667,232,o),
(280,228,o),
(280,220,cs),
(280,162,l),
(280,162,l)
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */
10
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
61
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
62
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
18
MDRP[11100]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
1
MDRP[11100]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
61
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
41
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
41
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
11
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
11
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
1
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
34
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
34
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
1
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
48
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
41
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
55
MDRP[11100]	/* MoveDirectRelPt */
NPUSHW[ ]	/* 21 values pushed */
102 55 118 55 134 55 150 55 166 55 182 55 198 55 214 55 230 55 246 55 10
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 7 values pushed */
6 55 22 55 38 55 3
DELTAP2[ ]	/* DeltaExceptionP2 */
NPUSHW[ ]	/* 5 values pushed */
53 55 69 55 2
DELTAP2[ ]	/* DeltaExceptionP2 */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
37
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
16
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
16 42
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
37
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
30
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
30 38
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
37
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
38
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
38 38
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
16
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
3
MDRP[11100]	/* MoveDirectRelPt */
NPUSHW[ ]	/* 5 values pushed */
57 3 73 3 2
DELTAP2[ ]	/* DeltaExceptionP2 */
NPUSHW[ ]	/* 21 values pushed */
104 3 120 3 136 3 152 3 168 3 184 3 200 3 216 3 232 3 248 3 10
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 7 values pushed */
8 3 24 3 40 3 3
DELTAP2[ ]	/* DeltaExceptionP2 */
PUSHW[ ]	/* 1 value pushed */
30
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
21
MDRP[11100]	/* MoveDirectRelPt */
NPUSHW[ ]	/* 21 values pushed */
103 21 119 21 135 21 151 21 167 21 183 21 199 21 215 21 231 21 247 21 10
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 7 values pushed */
7 21 23 21 39 21 3
DELTAP2[ ]	/* DeltaExceptionP2 */
NPUSHW[ ]	/* 5 values pushed */
54 21 70 21 2
DELTAP2[ ]	/* DeltaExceptionP2 */
PUSHW[ ]	/* 1 value pushed */
57
MDRP[10000]	/* MoveDirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 461;
}
);
note = a;
},
{
glyphname = a.008;
lastChange = "2025-01-13 19:00:14 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(371.333,384,o),
(360,411,o),
(336,431,cs),
(310,453.667,o),
(275.667,465,o),
(233,465,cs),
(217,465,o),
(175,442,o),
(107,396,cs),
(74.333,374,o),
(58,352.333,o),
(58,331,cs),
(58,308.333,o),
(62,297,o),
(70,297,cs),
(70.667,297,o),
(72.333,297.667,o),
(75,299,cs),
(85.667,305,o),
(94.667,310.333,o),
(102,315,cs),
(121.333,325.667,o),
(131,332.333,o),
(131,335,cs),
(130.333,338.333,o),
(129.667,340.667,o),
(129,342,cs),
(127.667,346,o),
(127,350.667,o),
(127,356,cs),
(127,380,o),
(163.667,398,o),
(209,398,cs),
(233,398,o),
(253.333,390.333,o),
(270,375,cs),
(284,361.667,o),
(291,337.667,o),
(291,303,cs),
(291,273.667,o),
(291.333,256.667,o),
(292,252,cs),
(292,249,ls),
(292,243.667,o),
(282,237.333,o),
(262,230,cs),
(162,194,o),
(51,164,o),
(51,104,cs),
(51,78.667,o),
(68.333,27,o),
(83,7,cs),
(95.667,-11,o),
(115,-20,o),
(141,-20,cs),
(181.667,-20,o),
(221.667,-0.333,o),
(261,39,cs),
(291,69,l),
(292.333,69,o),
(293,67.333,o),
(293,64,cs),
(295.667,34.667,o),
(301.333,15.667,o),
(310,7,cs),
(325.333,-9,o),
(345,-17,o),
(369,-17,cs),
(389.667,-17,o),
(407.333,-10.667,o),
(422,2,cs),
(434,14,o),
(454,55.333,o),
(454,70,cs),
(454,76,o),
(449,79,o),
(439,79,cs),
(436.333,79,o),
(434.333,77.333,o),
(433,74,c),
(422.333,58,o),
(411,50,o),
(399,50,cs),
(378.333,50,o),
(368,77.333,o),
(368,132,cs),
(368,213.333,o),
(368.333,261.333,o),
(369,276,cs),
(369.667,281.333,o),
(370,288,o),
(370,296,cs),
(370,304,ls),
(369.333,310,o),
(369,315.667,o),
(369,321,cs),
(370,350,l),
(370,350,l)
);
},
{
closed = 1;
nodes = (
(292.667,113.333,o),
(291.5,107,o),
(288.5,103,cs),
(285.5,99,o),
(275.333,89.333,o),
(258,74,cs),
(230,50,o),
(206.667,38,o),
(188,38,cs),
(171.333,38,o),
(158.667,43.667,o),
(150,55,cs),
(138.667,67.667,o),
(133,87.333,o),
(133,114,cs),
(133,132,o),
(146.667,147.667,o),
(174,161,cs),
(210,178,l),
(226,187,ls),
(239.333,194.333,o),
(250.667,199.667,o),
(260,203,cs),
(269.333,206.333,o),
(274.333,208,o),
(275,208,c),
(279,210.667,o),
(283,212,o),
(287,212,cs),
(289.667,212,o),
(291,210,o),
(291,206,cs),
(291,141,l),
(292,122,l),
(292,122,l)
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */
10
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 3 values pushed */
8 70 13
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
8
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
0
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
0
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
8
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
3
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
3
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
8
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
6
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
6
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
70
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
25
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
25
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
70
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
40
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
40
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
70
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
43
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
8
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
93
MDRP[11100]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
37
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
66
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
66 42
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
37
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
21
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
21 38
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
37
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
30
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
30 38
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 3 values pushed */
27 30 66
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHW[ ]	/* 1 value pushed */
66
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
47
MDRP[11100]	/* MoveDirectRelPt */
NPUSHW[ ]	/* 5 values pushed */
57 47 73 47 2
DELTAP2[ ]	/* DeltaExceptionP2 */
NPUSHW[ ]	/* 21 values pushed */
104 47 120 47 136 47 152 47 168 47 184 47 200 47 216 47 232 47 248 47 10
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 7 values pushed */
8 47 24 47 40 47 3
DELTAP2[ ]	/* DeltaExceptionP2 */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 467;
}
);
note = a;
},
{
glyphname = a.009;
lastChange = "2025-01-13 19:00:14 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(228.667,243.667,o),
(180.333,221.667,o),
(155,207,cs),
(81,165.667,o),
(44,120,o),
(44,70,cs),
(44,14,o),
(79.667,-19,o),
(137,-19,cs),
(193,-19,o),
(248.667,7.333,o),
(304,60,c),
(322.667,7.333,o),
(344.667,-19,o),
(370,-19,cs),
(400,-19,o),
(426.333,2,o),
(449,44,c),
(445.667,52,o),
(444,60.667,o),
(444,70,c),
(430,47.333,o),
(416,36,o),
(402,36,cs),
(383.333,36,o),
(374.333,63,o),
(375,117,cs),
(377,294,l),
(377,304,ls),
(377,352.667,o),
(373,388,o),
(365,410,cs),
(350.333,447.333,o),
(321,466,o),
(277,466,cs),
(178.333,466,o),
(49,369,o),
(49,297,cs),
(49,279,o),
(56,270,o),
(70,270,cs),
(91.333,270,o),
(108,275.667,o),
(120,287,cs),
(128.667,294.333,o),
(133.667,308.667,o),
(135,330,cs),
(137,360,o),
(144,381,o),
(156,393,cs),
(177.333,414.333,o),
(204.333,425,o),
(237,425,cs),
(260.333,425,o),
(276.667,415.5,o),
(286,396.5,cs),
(295.333,377.5,o),
(300,344.667,o),
(300,298,cs),
(300,273,l),
(300,273,l)
);
},
{
closed = 1;
nodes = (
(300,74.333,o),
(277.167,64.5,o),
(240.5,46.5,cs),
(222.167,37.5,o),
(206.333,33,o),
(193,33,cs),
(149.667,33,o),
(128,52.667,o),
(128,92,cs),
(128,117.333,o),
(141,141,o),
(167,163,cs),
(185.667,179,o),
(226.667,204.667,o),
(290,240,cs),
(300,246,l),
(300,161,l),
(300,161,l)
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */
10
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
54
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
55
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
22
MDRP[11100]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
1
MDRP[11100]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
54
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
38
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
38
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
47
MDRP[11100]	/* MoveDirectRelPt */
NPUSHW[ ]	/* 21 values pushed */
102 47 118 47 134 47 150 47 166 47 182 47 198 47 214 47 230 47 246 47 10
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 7 values pushed */
6 47 22 47 38 47 3
DELTAP2[ ]	/* DeltaExceptionP2 */
NPUSHW[ ]	/* 5 values pushed */
53 47 69 47 2
DELTAP2[ ]	/* DeltaExceptionP2 */
PUSHW[ ]	/* 1 value pushed */
8
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
8
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
47
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
10
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
10
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
38
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
14
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
14
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
22
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
31
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
31
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
1
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
33
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
33
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
1
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
42
MDRP[10000]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
33
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
17
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
17 38
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
33
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
31
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
31 34
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
33
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
35
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
35 34
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
17
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
4
MDRP[11100]	/* MoveDirectRelPt */
NPUSHW[ ]	/* 5 values pushed */
57 4 73 4 2
DELTAP2[ ]	/* DeltaExceptionP2 */
NPUSHW[ ]	/* 21 values pushed */
104 4 120 4 136 4 152 4 168 4 184 4 200 4 216 4 232 4 248 4 10
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 7 values pushed */
8 4 24 4 40 4 3
DELTAP2[ ]	/* DeltaExceptionP2 */
PUSHW[ ]	/* 1 value pushed */
31
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
25
MDRP[11100]	/* MoveDirectRelPt */
NPUSHW[ ]	/* 21 values pushed */
103 25 119 25 135 25 151 25 167 25 183 25 199 25 215 25 231 25 247 25 10
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 7 values pushed */
7 25 23 25 39 25 3
DELTAP2[ ]	/* DeltaExceptionP2 */
NPUSHW[ ]	/* 5 values pushed */
54 25 70 25 2
DELTAP2[ ]	/* DeltaExceptionP2 */
PUSHW[ ]	/* 3 values pushed */
27 31 17
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHW[ ]	/* 3 values pushed */
33 31 17
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHW[ ]	/* 3 values pushed */
42 31 17
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHW[ ]	/* 1 value pushed */
49
MDRP[10000]	/* MoveDirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 475;
}
);
note = a;
},
{
glyphname = a.010;
lastChange = "2025-01-13 19:00:14 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(79.92,175.674,o),
(41,159.877,o),
(41,95,cs),
(41,29.667,o),
(86.667,-9,o),
(144,-9,cs),
(215.252,-9,o),
(259.652,41.652,o),
(277,59,c),
(280.006,31.949,o),
(284.794,-10,o),
(333,-10,cs),
(363.667,-10,o),
(397,5.333,o),
(433,36,c),
(419,58,l),
(407,48.667,o),
(396.667,40,o),
(382,40,cs),
(352.667,40,o),
(351,74.667,o),
(351,120,cs),
(351,166.768,o),
(356,259.21,o),
(356,304,cs),
(356,372,o),
(350,404.333,o),
(318,435,cs),
(294,457.667,o),
(267.667,463,o),
(237,463,cs),
(222,463,l),
(171.333,436.333,o),
(122.333,406,o),
(85,378,cs),
(60.805,360.403,o),
(56,332.872,o),
(56,322,cs),
(56,316.667,o),
(57.333,309,o),
(68,309,cs),
(78.515,309,o),
(112.146,319.243,o),
(118,329,cs),
(119.333,331,o),
(120.667,335.333,o),
(122,342,cs),
(125.086,366.69,o),
(124.45,374.907,o),
(164,396,cs),
(172,400,o),
(189.333,409,o),
(212,409,cs),
(274.706,409,o),
(277,336.212,o),
(277,305,cs),
(277,248,l),
(151,202,l),
(151,202,l)
);
},
{
closed = 1;
nodes = (
(244,63,o),
(212,45,o),
(184,45,cs),
(145.333,45,o),
(124,74.667,o),
(124,108,cs),
(124,161.245,o),
(171.667,177.738,o),
(276,215,c),
(276,95,l),
(276,95,l)
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */
77 2 66 4
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 4 values pushed */
44 2 83 4
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
83
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
0
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
0
MDAP[1]	/* MoveDirectAbsPt */
NPUSHW[ ]	/* 17 values pushed */
6 77 22 77 38 77 54 77 70 77 86 77 102 77 118 77 8
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 5 values pushed */
133 77 149 77 2
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHW[ ]	/* 1 value pushed */
77
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
24 2
MIRP[11100]	/* MoveIndirectRelPt */
PUSHW[ ]	/* 1 value pushed */
44
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
39
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
39
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
83
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
58
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
58
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
44
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
85
MDRP[11100]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
0
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
32
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
32 14
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
53
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
53 4
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
63
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
63 4
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
32
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
6 1
MIRP[11100]	/* MoveIndirectRelPt */
NPUSHW[ ]	/* 5 values pushed */
153 6 169 6 2
DELTAP2[ ]	/* DeltaExceptionP2 */
NPUSHW[ ]	/* 33 values pushed */
8 6 24 6 40 6 56 6 72 6 88 6 104 6 120 6 136 6 152 6 168 6 184 6 200 6 216 6 232 6 248 6 16
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 19 values pushed */
8 6 24 6 40 6 56 6 72 6 88 6 104 6 120 6 136 6 9
DELTAP2[ ]	/* DeltaExceptionP2 */
PUSHW[ ]	/* 1 value pushed */
53
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
47 1
MIRP[11100]	/* MoveIndirectRelPt */
NPUSHW[ ]	/* 33 values pushed */
7 47 23 47 39 47 55 47 71 47 87 47 103 47 119 47 135 47 151 47 167 47 183 47 199 47 215 47 231 47 247 47 16
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 19 values pushed */
7 47 23 47 39 47 55 47 71 47 87 47 103 47 119 47 135 47 9
DELTAP2[ ]	/* DeltaExceptionP2 */
NPUSHW[ ]	/* 5 values pushed */
150 47 166 47 2
DELTAP2[ ]	/* DeltaExceptionP2 */
PUSHW[ ]	/* 3 values pushed */
58 53 32
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHW[ ]	/* 3 values pushed */
72 53 32
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHW[ ]	/* 1 value pushed */
80
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
80
MDAP[1]	/* MoveDirectAbsPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 444;
}
);
note = a;
},
{
glyphname = a.011;
lastChange = "2025-01-13 19:00:14 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(123,203,o),
(41,136.667,o),
(41,64,cs),
(41,16,o),
(76.667,-16,o),
(130,-16,cs),
(191.333,-16,o),
(242.667,7.333,o),
(284,54,c),
(284.667,9.333,o),
(304.667,-13,o),
(344,-13,cs),
(376,-13,o),
(403,-1.333,o),
(425,22,cs),
(445,43.333,o),
(455,62.333,o),
(455,79,cs),
(455,89,o),
(449.667,94,o),
(439,94,cs),
(431,94,o),
(425.667,91,o),
(423,85,cs),
(417,74,ls),
(407,56.667,o),
(396.667,48,o),
(386,48,cs),
(375.333,48,o),
(368.833,53.667,o),
(366.5,65,cs),
(364.167,76.333,o),
(363.333,101.333,o),
(364,140,cs),
(367,344,l),
(367,351,ls),
(367,429.667,o),
(338.333,458,o),
(257,458,cs),
(197.667,458,o),
(148.333,437.667,o),
(109,397,cs),
(83.667,370.333,o),
(60,326,o),
(60,306,cs),
(60,295.333,o),
(67.667,289.667,o),
(83,289,cs),
(98,288,l),
(102,288,ls),
(119.333,288,o),
(129.333,296.333,o),
(132,313,cs),
(135,330,ls),
(145.667,386,o),
(185.667,423,o),
(235,423,cs),
(271,423,o),
(288.667,396.333,o),
(288,343,cs),
(287,263,l),
(287,263,l)
);
},
{
closed = 1;
nodes = (
(284.333,107.333,o),
(273,89.667,o),
(251,73,cs),
(223.667,51.667,o),
(199,41,o),
(177,41,cs),
(151.667,41,o),
(131,62,o),
(131,90,cs),
(131,122,o),
(152.333,152.333,o),
(195,181,cs),
(217.667,196.333,o),
(248.333,212,o),
(287,228,c),
(285,126,l),
(285,126,l)
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */
10
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
58
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
59
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
23
MDRP[11100]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
46
MDRP[11100]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
0
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
0
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
58
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
44
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
44
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
51
MDRP[11100]	/* MoveDirectRelPt */
NPUSHW[ ]	/* 21 values pushed */
102 51 118 51 134 51 150 51 166 51 182 51 198 51 214 51 230 51 246 51 10
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 7 values pushed */
6 51 22 51 38 51 3
DELTAP2[ ]	/* DeltaExceptionP2 */
NPUSHW[ ]	/* 5 values pushed */
53 51 69 51 2
DELTAP2[ ]	/* DeltaExceptionP2 */
PUSHW[ ]	/* 1 value pushed */
6
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
6
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
23
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
21
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
21
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
46
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
39
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
39
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
51
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
41
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
41
MDAP[1]	/* MoveDirectAbsPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
35
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
18
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
18 40
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
35
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
37
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
37 36
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
35
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
41
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
41 36
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
18
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
3
MDRP[11100]	/* MoveDirectRelPt */
NPUSHW[ ]	/* 5 values pushed */
57 3 73 3 2
DELTAP2[ ]	/* DeltaExceptionP2 */
NPUSHW[ ]	/* 21 values pushed */
104 3 120 3 136 3 152 3 168 3 184 3 200 3 216 3 232 3 248 3 10
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 7 values pushed */
8 3 24 3 40 3 3
DELTAP2[ ]	/* DeltaExceptionP2 */
PUSHW[ ]	/* 3 values pushed */
39 41 18
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHW[ ]	/* 3 values pushed */
47 41 18
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 462;
}
);
note = a;
},
{
glyphname = b.001;
lastChange = "2025-01-13 19:00:14 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(169,353,o),
(169.667,368.333,o),
(171,377,cs),
(172.333,385.667,o),
(176,392,o),
(182,396,cs),
(199.333,406.667,o),
(225.333,414,o),
(260,414,cs),
(371.188,414,o),
(432,322.288,o),
(432,206,cs),
(432,109.106,o),
(388.82,18,o),
(283,18,cs),
(246.333,18,o),
(217.667,30.667,o),
(197,56,cs),
(177,80,o),
(169,115.333,o),
(169,154,cs),
(169,331,l),
(169,331,l)
);
},
{
closed = 1;
nodes = (
(85,69,o),
(84.833,47.5,o),
(84.5,34.5,cs),
(84.167,21.5,o),
(83.667,10.667,o),
(83,2,c),
(85,-2.667,o),
(88.667,-5,o),
(94,-5,cs),
(96,-5,o),
(97.667,-4.333,o),
(99,-3,cs),
(104.333,3.667,o),
(114,14,o),
(122,14,cs),
(126.667,14,o),
(132.833,12.5,o),
(140.5,9.5,cs),
(148.167,6.5,o),
(158,3,o),
(170,-1,cs),
(192.667,-9,o),
(224.667,-16,o),
(266,-16,cs),
(417.482,-16,o),
(527,88.619,o),
(527,240,cs),
(527,362.513,o),
(441.513,462,o),
(311,462,cs),
(255,462,o),
(210.667,442.333,o),
(180,425,c),
(176.667,425,o),
(174,426.5,o),
(172,429.5,cs),
(170,432.5,o),
(169,439,o),
(169,449,cs),
(169,663,ls),
(169,713.667,o),
(170.333,764,o),
(173,804,c),
(171,808,o),
(167.333,810,o),
(162,810,c),
(133.211,793.806,o),
(50.01,766.303,o),
(39,763,cs),
(35.667,761.667,o),
(34,758,o),
(34,752,cs),
(34,745.333,o),
(35.667,741.333,o),
(39,740,c),
(50,733,ls),
(84.792,709.806,o),
(85,708.91,o),
(85,639,cs),
(85,99,l),
(85,99,l)
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */
77
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 4 values pushed */
42 2 22 4
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
42
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
0
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
77
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
54
MDRP[11100]	/* MoveDirectRelPt */
PUSHW[ ]	/* 2 values pushed */
10 3
MIRP[11100]	/* MoveIndirectRelPt */
NPUSHW[ ]	/* 5 values pushed */
154 10 170 10 2
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 19 values pushed */
9 10 25 10 41 10 57 10 73 10 89 10 105 10 121 10 137 10 9
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHW[ ]	/* 1 value pushed */
42
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
37
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
37
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
42
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
39
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
39
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
42
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
62
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
62
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
22
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
72
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
72
MDAP[1]	/* MoveDirectAbsPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
0
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
37
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
37 16
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
39
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
39 16
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
49
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
49 10
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
59
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
59 4
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
62
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
62 4
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
68
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
68 4
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
70
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
70 4
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
72
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
72 4
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
59
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
5 1
MIRP[11100]	/* MoveIndirectRelPt */
NPUSHW[ ]	/* 33 values pushed */
7 5 23 5 39 5 55 5 71 5 87 5 103 5 119 5 135 5 151 5 167 5 183 5 199 5 215 5 231 5 247 5 16
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 23 values pushed */
7 5 23 5 39 5 55 5 71 5 87 5 103 5 119 5 135 5 151 5 167 5 11
DELTAP2[ ]	/* DeltaExceptionP2 */
NPUSHW[ ]	/* 5 values pushed */
182 5 198 5 2
DELTAP2[ ]	/* DeltaExceptionP2 */
PUSHW[ ]	/* 1 value pushed */
49
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
15 1
MIRP[11100]	/* MoveIndirectRelPt */
NPUSHW[ ]	/* 5 values pushed */
185 15 201 15 2
DELTAP2[ ]	/* DeltaExceptionP2 */
NPUSHW[ ]	/* 33 values pushed */
8 15 24 15 40 15 56 15 72 15 88 15 104 15 120 15 136 15 152 15 168 15 184 15 200 15 216 15 232 15 248 15 16
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 23 values pushed */
8 15 24 15 40 15 56 15 72 15 88 15 104 15 120 15 136 15 152 15 168 15 11
DELTAP2[ ]	/* DeltaExceptionP2 */
PUSHW[ ]	/* 1 value pushed */
5
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
65
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
65
MDAP[1]	/* MoveDirectAbsPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 567;
}
);
note = b;
},
{
glyphname = b.002;
lastChange = "2025-01-13 19:00:14 +0000";
layers = (
{
hints = (
{
horizontal = 1;
place = (396,62);
type = Stem;
},
{
horizontal = 1;
place = (-8,43);
type = Stem;
},
{
place = (424,81);
type = Stem;
},
{
place = (80,77);
type = Stem;
}
);
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(147,768,l),
(23,710,l),
(21,681,l),
(66,671,l),
(75,655,l),
(80,628,l),
(80,157,l),
(78,-5,l),
(142,3,l),
(261,-10,l),
(305,-8,l),
(364,9,l),
(425,49,l),
(453,77,l),
(478,120,l),
(501,188,l),
(505,238,l),
(499,298,l),
(476,355,l),
(441,405,l),
(387,442,l),
(312,458,l),
(267,454,l),
(230,441,l),
(158,397,l),
(157,556,l),
(166,758,l),
(166,758,l)
);
},
{
closed = 1;
nodes = (
(158,363,l),
(196,381,l),
(264,396,l),
(313,387,l),
(360,365,l),
(393,325,l),
(412,282,l),
(424,218,l),
(407,130,l),
(376,80,l),
(347,57,l),
(319,42,l),
(272,35,l),
(220,46,l),
(189,66,l),
(165,104,l),
(158,156,l),
(158,156,l)
);
}
);
width = 548;
}
);
},
{
glyphname = b.003;
lastChange = "2025-01-13 19:00:14 +0000";
layers = (
{
hints = (
{
horizontal = 1;
place = (396,62);
type = Stem;
},
{
horizontal = 1;
place = (-8,43);
type = Stem;
},
{
place = (424,81);
type = Stem;
},
{
place = (80,77);
type = Stem;
}
);
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(147,768,l),
(23,710,l),
(21,681,l),
(66,671,l),
(75,655,l),
(80,628,l),
(80,157,l),
(78,-5,l),
(142,3,l),
(261,-10,l),
(305,-8,l),
(364,9,l),
(425,49,l),
(453,77,l),
(478,120,l),
(501,188,l),
(505,238,l),
(499,298,l),
(476,355,l),
(441,405,l),
(387,442,l),
(312,458,l),
(267,454,l),
(230,441,l),
(158,397,l),
(157,556,l),
(166,758,l),
(166,758,l)
);
},
{
closed = 1;
nodes = (
(158,363,l),
(196,381,l),
(264,396,l),
(313,387,l),
(360,365,l),
(393,325,l),
(412,282,l),
(424,218,l),
(407,130,l),
(376,80,l),
(347,57,l),
(319,42,l),
(272,35,l),
(220,46,l),
(189,66,l),
(165,104,l),
(158,156,l),
(158,156,l)
);
}
);
width = 548;
}
);
},
{
glyphname = b.004;
lastChange = "2025-01-13 19:00:14 +0000";
layers = (
{
hints = (
{
horizontal = 1;
place = (405,53);
type = Stem;
},
{
horizontal = 1;
place = (-16,28);
type = Stem;
},
{
place = (405,102);
type = Stem;
},
{
place = (64,93);
type = Stem;
}
);
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(157,535,l),
(157,613,l),
(158,632,l),
(159,648,l),
(155,661,l),
(144,665,l),
(121,658,l),
(50,633,l),
(15,622,l),
(2,610,l),
(11,597,l),
(23,596,l),
(29,596,l),
(43,593,l),
(60,574,l),
(65,539,l),
(66,482,l),
(66,392,l),
(65,268,l),
(65,64,l),
(61,24,l),
(58,-7,l),
(59,-20,l),
(69,-24,l),
(80,-18,l),
(102,20,l),
(110,26,l),
(113,27,l),
(168,5,l),
(213,-10,l),
(260,-11,l),
(318,-7,l),
(365,9,l),
(429,48,l),
(464,87,l),
(491,139,l),
(502,180,l),
(508,229,l),
(499,296,l),
(472,359,l),
(430,408,l),
(371,444,l),
(305,456,l),
(252,448,l),
(217,436,l),
(198,425,l),
(167,414,l),
(161,417,l),
(158,435,l),
(158,435,l)
);
},
{
closed = 1;
nodes = (
(158,105,l),
(158,347,l),
(165,383,l),
(198,398,l),
(237,404,l),
(285,395,l),
(329,374,l),
(365,340,l),
(392,294,l),
(407,198,l),
(400,142,l),
(388,103,l),
(365,62,l),
(335,35,l),
(305,19,l),
(260,11,l),
(206,22,l),
(183,35,l),
(166,55,l),
(166,55,l)
);
}
);
width = 535;
}
);
},
{
glyphname = b.005;
lastChange = "2025-01-13 19:00:14 +0000";
layers = (
{
hints = (
{
horizontal = 1;
place = (408,54);
type = Stem;
},
{
horizontal = 1;
place = (-10,41);
type = Stem;
},
{
horizontal = 1;
place = (782,21);
target = up;
type = BottomGhost;
},
{
place = (394,90);
type = Stem;
},
{
place = (59,77);
type = Stem;
}
);
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(73,-10,l),
(87,4,l),
(109,22,l),
(162,3,l),
(237,-11,l),
(294,-5,l),
(333,11,l),
(372,32,l),
(387,44,l),
(427,79,l),
(444,105,l),
(465,142,l),
(484,240,l),
(465,325,l),
(434,379,l),
(405,408,l),
(364,437,l),
(328,452,l),
(277,458,l),
(205,444,l),
(135,397,l),
(135,448,l),
(136,492,l),
(134,539,l),
(134,640,l),
(133,688,l),
(134,704,l),
(133,722,l),
(134,746,l),
(135,775,l),
(137,792,l),
(131,800,l),
(116,792,l),
(109,789,l),
(79,775,l),
(57,764,l),
(25,748,l),
(6,738,l),
(2,733,l),
(14,721,l),
(56,688,l),
(61,649,l),
(60,585,l),
(61,535,l),
(60,500,l),
(61,474,l),
(60,454,l),
(61,420,l),
(60,404,l),
(60,374,l),
(59,291,l),
(60,225,l),
(60,7,l),
(63,-13,l),
(63,-13,l)
);
},
{
closed = 1;
nodes = (
(136,371,l),
(173,390,l),
(232,405,l),
(276,397,l),
(322,377,l),
(344,354,l),
(357,338,l),
(379,294,l),
(393,209,l),
(392,165,l),
(367,100,l),
(337,58,l),
(285,31,l),
(263,29,l),
(222,35,l),
(181,57,l),
(161,77,l),
(140,124,l),
(135,200,l),
(135,200,l)
);
}
);
width = 509;
}
);
},
{
glyphname = b.006;
lastChange = "2025-01-13 19:00:14 +0000";
layers = (
{
hints = (
{
horizontal = 1;
place = (408,50);
type = Stem;
},
{
horizontal = 1;
place = (-20,43);
type = Stem;
},
{
place = (407,73);
type = Stem;
},
{
place = (68,71);
type = Stem;
}
);
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(64,33,l),
(63,10,l),
(62,-18,l),
(66,-32,l),
(76,-34,l),
(95,-22,l),
(100,-12,l),
(123,19,l),
(132,22,l),
(149,16,l),
(184,3,l),
(255,-9,l),
(304,-8,l),
(341,5,l),
(402,45,l),
(440,90,l),
(458,124,l),
(471,160,l),
(479,219,l),
(469,287,l),
(452,333,l),
(420,385,l),
(396,409,l),
(362,435,l),
(314,451,l),
(280,454,l),
(234,448,l),
(187,432,l),
(156,415,l),
(142,413,l),
(144,465,l),
(143,599,l),
(142,669,l),
(143,718,l),
(142,736,l),
(140,751,l),
(121,764,l),
(46,731,l),
(11,704,l),
(19,696,l),
(30,692,l),
(56,680,l),
(71,649,l),
(71,603,l),
(69,384,l),
(68,313,l),
(68,292,l),
(67,273,l),
(67,261,l),
(66,212,l),
(67,149,l),
(64,89,l),
(64,89,l)
);
},
{
closed = 1;
nodes = (
(138,233,l),
(141,379,l),
(171,394,l),
(217,405,l),
(265,396,l),
(301,384,l),
(335,361,l),
(381,307,l),
(400,264,l),
(407,213,l),
(395,148,l),
(379,103,l),
(357,71,l),
(329,43,l),
(300,27,l),
(256,20,l),
(208,34,l),
(176,56,l),
(148,90,l),
(138,129,l),
(138,129,l)
);
}
);
width = 526;
}
);
},
{
glyphname = b.007;
lastChange = "2025-01-13 19:00:14 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(183,565.667,o),
(183.667,589,o),
(185,617,cs),
(186.333,635,o),
(187,648.333,o),
(187,657,cs),
(187,669,o),
(183,675,o),
(175,675,cs),
(171,675,o),
(166.667,673.667,o),
(162,671,c),
(114,651.667,o),
(72.333,638,o),
(37,630,cs),
(25.667,627.333,o),
(20,622.333,o),
(20,615,cs),
(20,607,o),
(26,602.667,o),
(38,602,cs),
(58,601.333,o),
(70.667,595,o),
(76,583,cs),
(80,575.667,o),
(82,560.333,o),
(82,537,cs),
(82,88,ls),
(82,56.667,o),
(80.667,35,o),
(78,23,cs),
(74.667,7,o),
(73,-4,o),
(73,-10,cs),
(73,-20.667,o),
(78,-26,o),
(88,-26,cs),
(94,-26,o),
(99.333,-21,o),
(104,-11,cs),
(119.333,17.667,o),
(129.333,32,o),
(134,32,cs),
(136.667,32,o),
(140.333,30.667,o),
(145,28,cs),
(192.333,3.333,o),
(239.667,-9,o),
(287,-9,cs),
(348.333,-9,o),
(403.333,10.333,o),
(452,49,cs),
(509.333,95,o),
(538,156.333,o),
(538,233,cs),
(538,361,o),
(444.667,464,o),
(330,464,cs),
(294,464,o),
(279.667,460.333,o),
(221,431,cs),
(205.667,423.667,o),
(195.333,420,o),
(190,420,cs),
(186.667,420,o),
(184.667,421.5,o),
(184,424.5,cs),
(183.333,427.5,o),
(183,437.667,o),
(183,455,cs),
(183,547,l),
(183,547,l)
);
},
{
closed = 1;
nodes = (
(179,371.333,o),
(181,383.333,o),
(185,388,cs),
(200.333,402.667,o),
(225.333,410,o),
(260,410,cs),
(361.333,410,o),
(431,327.333,o),
(431,206,cs),
(431,91.333,o),
(369,13,o),
(281,13,cs),
(253.667,13,o),
(230.667,20.667,o),
(212,36,cs),
(190,53.333,o),
(179,84,o),
(179,128,cs),
(179,352,l),
(179,352,l)
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */
10
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
64
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
65
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
64
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
30
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
30
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
50
MDRP[11100]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
0
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
0
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
65
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
12
MDRP[11100]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
30
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
24
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
24
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
30
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
28
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
28
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
30
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
33
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
33
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
50
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
43
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
43
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
50
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
47
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
47
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
12
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
57
MDRP[11100]	/* MoveDirectRelPt */
NPUSHW[ ]	/* 5 values pushed */
58 57 74 57 2
DELTAP2[ ]	/* DeltaExceptionP2 */
NPUSHW[ ]	/* 21 values pushed */
105 57 121 57 137 57 153 57 169 57 185 57 201 57 217 57 233 57 249 57 10
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 7 values pushed */
9 57 25 57 41 57 3
DELTAP2[ ]	/* DeltaExceptionP2 */
PUSHW[ ]	/* 1 value pushed */
50
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
62
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
62
MDAP[1]	/* MoveDirectAbsPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
41
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
43
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
24
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
37
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
9
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
9 42
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
37
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
16
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
16 38
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
37
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
22
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
22 38
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
37
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
26
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
26 38
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
16
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
54
MDRP[11100]	/* MoveDirectRelPt */
NPUSHW[ ]	/* 21 values pushed */
103 54 119 54 135 54 151 54 167 54 183 54 199 54 215 54 231 54 247 54 10
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 7 values pushed */
7 54 23 54 39 54 3
DELTAP2[ ]	/* DeltaExceptionP2 */
NPUSHW[ ]	/* 5 values pushed */
54 54 70 54 2
DELTAP2[ ]	/* DeltaExceptionP2 */
PUSHW[ ]	/* 1 value pushed */
9
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
60
MDRP[11100]	/* MoveDirectRelPt */
NPUSHW[ ]	/* 5 values pushed */
57 60 73 60 2
DELTAP2[ ]	/* DeltaExceptionP2 */
NPUSHW[ ]	/* 21 values pushed */
104 60 120 60 136 60 152 60 168 60 184 60 200 60 216 60 232 60 248 60 10
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 7 values pushed */
8 60 24 60 40 60 3
DELTAP2[ ]	/* DeltaExceptionP2 */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 575;
}
);
note = b;
},
{
glyphname = b.008;
lastChange = "2025-01-13 19:00:14 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(86,10.667,o),
(85,-0.333,o),
(85,-5,cs),
(85,-15,o),
(89,-20,o),
(97,-20,cs),
(104.333,-20,o),
(110.333,-15.667,o),
(115,-7,cs),
(121.667,7,o),
(129.667,14,o),
(139,14,cs),
(141.667,14,o),
(145.333,13,o),
(150,11,cs),
(195.333,-10.333,o),
(236.333,-21,o),
(273,-21,cs),
(313.667,-21,o),
(356.333,-7.667,o),
(401,19,cs),
(451.667,48.333,o),
(487.667,89.333,o),
(509,142,cs),
(521.667,172.667,o),
(528,206,o),
(528,242,cs),
(528,302,o),
(491.333,376,o),
(442,416,cs),
(404.667,447.333,o),
(364,463,o),
(320,463,cs),
(278.667,463,o),
(236.667,449.667,o),
(194,423,c),
(184.667,415.667,o),
(178,411.333,o),
(174,410,c),
(172,408.667,o),
(170,407,o),
(168,405,cs),
(167,404,l),
(163.667,404,o),
(162,421.667,o),
(162,457,cs),
(162,461,o),
(162.333,467.167,o),
(163,475.5,cs),
(163.667,483.833,o),
(164,491,o),
(164,497,cs),
(162,552,l),
(162,570,ls),
(162,583.333,o),
(161,608,o),
(159,644,cs),
(158.333,662.667,o),
(158,679.333,o),
(158,694,cs),
(158,704.667,o),
(158.333,717.333,o),
(159,732,cs),
(161,754,ls),
(162.333,782.667,o),
(163,798.333,o),
(163,801,cs),
(163,809,o),
(160,813,o),
(154,813,cs),
(152.667,813,o),
(150.167,812,o),
(146.5,810,cs),
(142.833,808,o),
(139,806,o),
(135,804,cs),
(124.333,798.667,o),
(116.333,794.667,o),
(111,792,cs),
(93,782.667,o),
(82.667,777,o),
(80,775,c),
(66.667,768.333,o),
(56.333,763,o),
(49,759,cs),
(32.333,749.667,o),
(24,743,o),
(24,739,cs),
(24,734.333,o),
(30,729.333,o),
(42,724,cs),
(60.667,715.333,o),
(73.333,704.667,o),
(80,692,cs),
(84.667,682.667,o),
(86,654.667,o),
(84,608,cs),
(83,581,l),
(85,544,ls),
(85.667,534.667,o),
(85.333,515.667,o),
(84,487,cs),
(83.333,471,o),
(83.333,431,o),
(84,367,cs),
(85,272,l),
(87,197,l),
(87,85,l),
(88,28,l),
(88,28,l)
);
},
{
closed = 1;
nodes = (
(165.667,308.333,o),
(165.5,319.5,o),
(164.5,326.5,cs),
(163.5,333.5,o),
(163,336.667,o),
(163,336,cs),
(163,356,o),
(163.667,368,o),
(165,372,c),
(172.333,377.333,o),
(179,381.333,o),
(185,384,cs),
(211.667,399.333,o),
(238.667,407,o),
(266,407,cs),
(316.667,407,o),
(359,387,o),
(393,347,cs),
(422.333,313,o),
(437,269.333,o),
(437,216,cs),
(437,174.667,o),
(428.667,136.667,o),
(412,102,cs),
(387.333,50,o),
(349.333,24,o),
(298,24,cs),
(243.333,24,o),
(192.333,58.667,o),
(175,108,cs),
(169.667,122.667,o),
(163.667,190.667,o),
(165,212,cs),
(166,226,l),
(164,250,l),
(165,293,l),
(165,293,l)
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */
10
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
101
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
102
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
101
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
4
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
4
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
0
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
0
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
4
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
2
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
2
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
4
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
6
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
4
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
8
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
8
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
4
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
10
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
4
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
12
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
12
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
4
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
20
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
20
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
4
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
96
MDRP[11100]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
29
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
29
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
96
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
31
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
31
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
96
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
34
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
34
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
96
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
36
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
36
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
96
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
38
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
38
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
96
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
40
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
40
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
96
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
43
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
43
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
96
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
45
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
45
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
102
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
57
MDRP[11100]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
88
MDRP[11100]	/* MoveDirectRelPt */
NPUSHW[ ]	/* 5 values pushed */
58 88 74 88 2
DELTAP2[ ]	/* DeltaExceptionP2 */
NPUSHW[ ]	/* 21 values pushed */
105 88 121 88 137 88 153 88 169 88 185 88 201 88 217 88 233 88 249 88 10
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 7 values pushed */
9 88 25 88 41 88 3
DELTAP2[ ]	/* DeltaExceptionP2 */
PUSHW[ ]	/* 1 value pushed */
54
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
54
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
4
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
73
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
73
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
96
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
75
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
96
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
77
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
77
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
96
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
98
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
98
MDAP[1]	/* MoveDirectAbsPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
27
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
37
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
43
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
43 42
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
37
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
52
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
52 42
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
37
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
63
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
63 38
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
37
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
71
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
71 38
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
43
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
45
MDRP[11100]	/* MoveDirectRelPt */
NPUSHW[ ]	/* 5 values pushed */
57 45 73 45 2
DELTAP2[ ]	/* DeltaExceptionP2 */
NPUSHW[ ]	/* 21 values pushed */
104 45 120 45 136 45 152 45 168 45 184 45 200 45 216 45 232 45 248 45 10
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 7 values pushed */
8 45 24 45 40 45 3
DELTAP2[ ]	/* DeltaExceptionP2 */
PUSHW[ ]	/* 1 value pushed */
63
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
84
MDRP[11100]	/* MoveDirectRelPt */
NPUSHW[ ]	/* 21 values pushed */
103 84 119 84 135 84 151 84 167 84 183 84 199 84 215 84 231 84 247 84 10
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 7 values pushed */
7 84 23 84 39 84 3
DELTAP2[ ]	/* DeltaExceptionP2 */
NPUSHW[ ]	/* 5 values pushed */
54 84 70 84 2
DELTAP2[ ]	/* DeltaExceptionP2 */
PUSHW[ ]	/* 1 value pushed */
45
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
92
MDRP[10000]	/* MoveDirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 564;
}
);
note = b;
},
{
glyphname = b.009;
lastChange = "2025-01-13 19:00:14 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(168,586,o),
(171.667,707,o),
(179,815,c),
(173.667,811.667,o),
(169,810,o),
(165,810,cs),
(162.333,810,o),
(158.333,811.667,o),
(153,815,c),
(109.667,789,o),
(64.333,771.667,o),
(17,763,c),
(19,757.667,o),
(20,753.333,o),
(20,750,cs),
(20,747.333,o),
(19,743.667,o),
(17,739,c),
(45,737,ls),
(67,735.667,o),
(79.667,728.667,o),
(83,716,cs),
(89.667,692,o),
(93,604,o),
(93,452,cs),
(93,240,ls),
(93,180,o),
(90,94.667,o),
(84,-16,c),
(94,-16,l),
(141,22,l),
(192.333,-6,o),
(242.333,-20,o),
(291,-20,cs),
(444.333,-20,o),
(547,80.333,o),
(547,227,cs),
(547,359,o),
(460.667,452,o),
(338,452,cs),
(278.667,452,o),
(222,430.333,o),
(168,387,c),
(168,452,l),
(168,452,l)
);
},
{
closed = 1;
nodes = (
(210,385,o),
(250.667,400,o),
(290,400,cs),
(391.333,400,o),
(469,309.333,o),
(469,188,cs),
(469,85.333,o),
(397.667,9,o),
(303,9,cs),
(263,9,o),
(230,21.333,o),
(204,46,cs),
(176,72.667,o),
(162,115.667,o),
(162,175,cs),
(162,176.333,o),
(162.333,184.333,o),
(163,199,cs),
(163.667,213.667,o),
(164,226.333,o),
(164,237,cs),
(168,355,l),
(168,355,l)
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */
10
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 3 values pushed */
29 13 13
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
29
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 3 values pushed */
6 44 13
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
6
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
29
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
0
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
0
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 3 values pushed */
1 13 6
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHW[ ]	/* 1 value pushed */
29
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
16
MDRP[11100]	/* MoveDirectRelPt */
PUSHW[ ]	/* 3 values pushed */
31 13 6
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHW[ ]	/* 1 value pushed */
29
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
33
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
33
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
29
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
37
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
37
MDAP[1]	/* MoveDirectAbsPt */
NPUSHW[ ]	/* 5 values pushed */
58 44 74 44 2
DELTAP2[ ]	/* DeltaExceptionP2 */
NPUSHW[ ]	/* 21 values pushed */
105 44 121 44 137 44 153 44 169 44 185 44 201 44 217 44 233 44 249 44 10
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 7 values pushed */
9 44 25 44 41 44 3
DELTAP2[ ]	/* DeltaExceptionP2 */
PUSHW[ ]	/* 1 value pushed */
6
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
50
MDRP[11100]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
27
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
29
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
31
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
33
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
0
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
0 38
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
33
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
3
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
3 38
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
33
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
16
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
16 38
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
33
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
9
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
9 34
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
33
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
12
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
12 34
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 3 values pushed */
1 9 27
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHW[ ]	/* 3 values pushed */
21 9 27
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHW[ ]	/* 1 value pushed */
9
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
41
MDRP[11100]	/* MoveDirectRelPt */
NPUSHW[ ]	/* 21 values pushed */
103 41 119 41 135 41 151 41 167 41 183 41 199 41 215 41 231 41 247 41 10
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 7 values pushed */
7 41 23 41 39 41 3
DELTAP2[ ]	/* DeltaExceptionP2 */
NPUSHW[ ]	/* 5 values pushed */
54 41 70 41 2
DELTAP2[ ]	/* DeltaExceptionP2 */
PUSHW[ ]	/* 1 value pushed */
3
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
47
MDRP[11100]	/* MoveDirectRelPt */
NPUSHW[ ]	/* 5 values pushed */
57 47 73 47 2
DELTAP2[ ]	/* DeltaExceptionP2 */
NPUSHW[ ]	/* 21 values pushed */
104 47 120 47 136 47 152 47 168 47 184 47 200 47 216 47 232 47 248 47 10
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 7 values pushed */
8 47 24 47 40 47 3
DELTAP2[ ]	/* DeltaExceptionP2 */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 592;
}
);
note = b;
},
{
glyphname = b.010;
lastChange = "2025-01-13 19:00:14 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(81.114,683,o),
(80,667.211,o),
(80,566,cs),
(80,156,l),
(79,-6,l),
(103,-0.667,o),
(118.333,2,o),
(141,2,cs),
(145.667,2,o),
(150.333,2,o),
(155,2,cs),
(159.667,2,o),
(164.333,1.667,o),
(169,1,cs),
(183,-0.333,o),
(197.167,-2.167,o),
(211.5,-4.5,cs),
(225.833,-6.833,o),
(239.667,-8.333,o),
(253,-9,cs),
(264,-9,ls),
(411.92,-9,o),
(507,98.996,o),
(507,239,cs),
(507,359.68,o),
(429.68,459,o),
(312,459,cs),
(246.667,459,o),
(202.333,429,o),
(157,397,c),
(157,557,ls),
(157,659.673,o),
(162.05,718.925,o),
(167,761,c),
(147,770,l),
(95.783,739.27,o),
(70.572,727.773,o),
(21,712,c),
(21,683,l),
(21,683,l)
);
},
{
closed = 1;
nodes = (
(181,377.333,o),
(215.667,397,o),
(265,397,cs),
(358.861,397,o),
(426,328.465,o),
(426,217,cs),
(426,127.369,o),
(378.226,35,o),
(273,35,cs),
(241.301,35,o),
(192.766,45.468,o),
(169,93,cs),
(157,115.667,o),
(158.333,133.667,o),
(157,155,c),
(157,364,l),
(157,364,l)
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */
65
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
66
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
65
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
36
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
36
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 2 values pushed */
43 2
MIRP[11100]	/* MoveIndirectRelPt */
PUSHW[ ]	/* 1 value pushed */
11
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
66
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
20
MDRP[11100]	/* MoveDirectRelPt */
PUSHW[ ]	/* 3 values pushed */
12 36 20
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHW[ ]	/* 2 values pushed */
56 2
MIRP[11100]	/* MoveIndirectRelPt */
NPUSHW[ ]	/* 5 values pushed */
138 56 154 56 2
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 17 values pushed */
9 56 25 56 41 56 57 56 73 56 89 56 105 56 121 56 8
DELTAP1[ ]	/* DeltaExceptionP1 */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
0
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
5
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
5 20
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
6
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
6 20
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
15
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
15 14
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
25
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
25 4
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
29
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
29 4
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
35
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
35 4
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 3 values pushed */
12 25 5
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHW[ ]	/* 1 value pushed */
25
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
51 1
MIRP[11100]	/* MoveIndirectRelPt */
NPUSHW[ ]	/* 33 values pushed */
7 51 23 51 39 51 55 51 71 51 87 51 103 51 119 51 135 51 151 51 167 51 183 51 199 51 215 51 231 51 247 51 16
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 19 values pushed */
7 51 23 51 39 51 55 51 71 51 87 51 103 51 119 51 135 51 9
DELTAP2[ ]	/* DeltaExceptionP2 */
NPUSHW[ ]	/* 5 values pushed */
150 51 166 51 2
DELTAP2[ ]	/* DeltaExceptionP2 */
PUSHW[ ]	/* 1 value pushed */
15
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
61 1
MIRP[11100]	/* MoveIndirectRelPt */
NPUSHW[ ]	/* 5 values pushed */
153 61 169 61 2
DELTAP2[ ]	/* DeltaExceptionP2 */
NPUSHW[ ]	/* 33 values pushed */
8 61 24 61 40 61 56 61 72 61 88 61 104 61 120 61 136 61 152 61 168 61 184 61 200 61 216 61 232 61 248 61 16
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 19 values pushed */
8 61 24 61 40 61 56 61 72 61 88 61 104 61 120 61 136 61 9
DELTAP2[ ]	/* DeltaExceptionP2 */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 551;
}
);
note = b;
},
{
glyphname = b.011;
lastChange = "2025-01-13 19:00:14 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(165,721.333,o),
(160.333,733,o),
(151,733,cs),
(148.333,733,o),
(144,731,o),
(138,727,cs),
(123,717,ls),
(97.667,701,o),
(72.333,690.667,o),
(47,686,cs),
(34,684,ls),
(22.667,682,o),
(17,676.667,o),
(17,668,cs),
(17,658,o),
(24.667,653,o),
(40,653,cs),
(52,652,ls),
(80,649.333,o),
(84,646,o),
(84,622,cs),
(85,-19,ls),
(85,-29.667,o),
(90,-35,o),
(100,-35,cs),
(106,-35,o),
(112,-30.333,o),
(118,-21,cs),
(139,12,l),
(167.667,-11.333,o),
(212,-23,o),
(272,-23,cs),
(420,-23,o),
(508,74.667,o),
(508,236,cs),
(508,366.667,o),
(428.667,453,o),
(314,453,cs),
(255.333,453,o),
(204.667,433.667,o),
(162,395,c),
(165,698,l),
(165,698,l)
);
},
{
closed = 1;
nodes = (
(197,381.667,o),
(233.333,396,o),
(274,396,cs),
(359.333,396,o),
(416,321.333,o),
(416,208,cs),
(416,90.667,o),
(360,11,o),
(276,11,cs),
(238.667,11,o),
(209.667,23,o),
(189,47,cs),
(173,65,o),
(165,97.667,o),
(165,145,cs),
(165,353,l),
(165,353,l)
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */
10
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
46
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
47
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
46
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
17
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
17
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
1
MDRP[11100]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
47
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
6
MDRP[11100]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
1
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
33
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
33
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
6
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
41
MDRP[11100]	/* MoveDirectRelPt */
NPUSHW[ ]	/* 5 values pushed */
58 41 74 41 2
DELTAP2[ ]	/* DeltaExceptionP2 */
NPUSHW[ ]	/* 21 values pushed */
105 41 121 41 137 41 153 41 169 41 185 41 201 41 217 41 233 41 249 41 10
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 7 values pushed */
9 41 25 41 41 41 3
DELTAP2[ ]	/* DeltaExceptionP2 */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
14
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
35
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
29
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
29 42
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
35
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
31
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
31 42
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
35
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
3
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
3 40
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
35
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
9
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
9 36
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
35
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
12
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
12 36
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
35
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
16
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
16 36
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 3 values pushed */
1 14 31
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHW[ ]	/* 1 value pushed */
9
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
38
MDRP[11100]	/* MoveDirectRelPt */
NPUSHW[ ]	/* 21 values pushed */
103 38 119 38 135 38 151 38 167 38 183 38 199 38 215 38 231 38 247 38 10
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 7 values pushed */
7 38 23 38 39 38 3
DELTAP2[ ]	/* DeltaExceptionP2 */
NPUSHW[ ]	/* 5 values pushed */
54 38 70 38 2
DELTAP2[ ]	/* DeltaExceptionP2 */
PUSHW[ ]	/* 1 value pushed */
3
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
44
MDRP[11100]	/* MoveDirectRelPt */
NPUSHW[ ]	/* 5 values pushed */
57 44 73 44 2
DELTAP2[ ]	/* DeltaExceptionP2 */
NPUSHW[ ]	/* 21 values pushed */
104 44 120 44 136 44 152 44 168 44 184 44 200 44 216 44 232 44 248 44 10
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 7 values pushed */
8 44 24 44 40 44 3
DELTAP2[ ]	/* DeltaExceptionP2 */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 556;
}
);
note = b;
},
{
glyphname = e.001;
lastChange = "2025-01-13 19:00:14 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(133,324,o),
(130.667,324.667,o),
(130,326,cs),
(129.333,327.333,o),
(129,328.667,o),
(129,330,cs),
(129,365.776,o),
(188.589,428,o),
(255,428,cs),
(327.677,428,o),
(342,381.305,o),
(342,357,cs),
(342,349.667,o),
(341.333,344.667,o),
(340,342,cs),
(338.667,339.333,o),
(337.333,337.333,o),
(336,336,cs),
(331.333,332,o),
(320.833,329,o),
(304.5,327,cs),
(288.167,325,o),
(259.333,324,o),
(218,324,cs),
(137,324,l),
(137,324,l)
);
},
{
closed = 1;
nodes = (
(381,290,o),
(397.833,290.333,o),
(407.5,291,cs),
(417.167,291.667,o),
(422.667,294,o),
(424,298,cs),
(425.333,300.667,o),
(426.333,304.167,o),
(427,308.5,cs),
(427.667,312.833,o),
(428,319.333,o),
(428,328,cs),
(428,398,o),
(363.837,462,o),
(268,462,cs),
(126.911,462,o),
(40,340.875,o),
(40,206,cs),
(40,156.667,o),
(52.333,103,o),
(87,59,cs),
(120.333,15,o),
(177.333,-16,o),
(252,-16,cs),
(310.553,-16,o),
(394.045,12.953,o),
(430,90,c),
(427.333,99.333,o),
(421,105.667,o),
(409,103,c),
(374.333,59,o),
(342.333,48,o),
(305,48,cs),
(184.722,48,o),
(117,143.062,o),
(117,260,cs),
(117,288,o),
(117.667,290,o),
(147,290,cs),
(357,290,l),
(357,290,l)
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */
62
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
63
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
55
MDRP[11100]	/* MoveDirectRelPt */
PUSHW[ ]	/* 2 values pushed */
6 2
MIRP[11100]	/* MoveIndirectRelPt */
NPUSHW[ ]	/* 5 values pushed */
154 6 170 6 2
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 19 values pushed */
9 6 25 6 41 6 57 6 73 6 89 6 105 6 121 6 137 6 9
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHW[ ]	/* 1 value pushed */
3
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
3
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
62
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
45
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
45
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 2 values pushed */
23 2
MIRP[11100]	/* MoveIndirectRelPt */
NPUSHW[ ]	/* 19 values pushed */
6 23 22 23 38 23 54 23 70 23 86 23 102 23 118 23 134 23 9
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 5 values pushed */
149 23 165 23 2
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHW[ ]	/* 3 values pushed */
16 23 45
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHW[ ]	/* 1 value pushed */
55
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
34
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
34
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
55
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
58
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
58
MDAP[1]	/* MoveDirectAbsPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
0
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
50
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
50 10
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
39
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
39 4
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 3 values pushed */
0 50 39
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHW[ ]	/* 1 value pushed */
0
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
50
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
11 1
MIRP[11100]	/* MoveIndirectRelPt */
NPUSHW[ ]	/* 5 values pushed */
185 11 201 11 2
DELTAP2[ ]	/* DeltaExceptionP2 */
NPUSHW[ ]	/* 33 values pushed */
8 11 24 11 40 11 56 11 72 11 88 11 104 11 120 11 136 11 152 11 168 11 184 11 200 11 216 11 232 11 248 11 16
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 23 values pushed */
8 11 24 11 40 11 56 11 72 11 88 11 104 11 120 11 136 11 152 11 168 11 11
DELTAP2[ ]	/* DeltaExceptionP2 */
PUSHW[ ]	/* 1 value pushed */
0
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
20 1
MIRP[11100]	/* MoveIndirectRelPt */
PUSHW[ ]	/* 1 value pushed */
39
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
28 1
MIRP[11100]	/* MoveIndirectRelPt */
NPUSHW[ ]	/* 33 values pushed */
7 28 23 28 39 28 55 28 71 28 87 28 103 28 119 28 135 28 151 28 167 28 183 28 199 28 215 28 231 28 247 28 16
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 23 values pushed */
7 28 23 28 39 28 55 28 71 28 87 28 103 28 119 28 135 28 151 28 167 28 11
DELTAP2[ ]	/* DeltaExceptionP2 */
NPUSHW[ ]	/* 5 values pushed */
182 28 198 28 2
DELTAP2[ ]	/* DeltaExceptionP2 */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 449;
}
);
note = e;
},
{
glyphname = e.002;
lastChange = "2025-01-13 19:00:14 +0000";
layers = (
{
hints = (
{
horizontal = 1;
place = (415,41);
type = Stem;
},
{
horizontal = 1;
place = (276,39);
type = Stem;
},
{
horizontal = 1;
place = (-9,65);
type = Stem;
},
{
place = (325,74);
type = Stem;
},
{
place = (39,74);
type = Stem;
}
);
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(387,91,l),
(363,76,l),
(331,64,l),
(279,56,l),
(241,61,l),
(189,83,l),
(160,107,l),
(133,148,l),
(115,202,l),
(113,276,l),
(350,276,l),
(383,279,l),
(393,291,l),
(398,325,l),
(393,364,l),
(378,395,l),
(342,431,l),
(308,447,l),
(251,456,l),
(190,447,l),
(151,430,l),
(109,396,l),
(74,352,l),
(44,270,l),
(39,212,l),
(50,133,l),
(78,73,l),
(115,31,l),
(154,9,l),
(200,-10,l),
(236,-9,l),
(281,-8,l),
(319,6,l),
(370,36,l),
(403,67,l),
(403,67,l)
);
},
{
closed = 1;
nodes = (
(122,314,l),
(132,341,l),
(169,385,l),
(201,407,l),
(242,414,l),
(270,410,l),
(307,387,l),
(325,342,l),
(318,323,l),
(298,314,l),
(298,314,l)
);
}
);
width = 442;
}
);
},
{
glyphname = e.003;
lastChange = "2025-01-13 19:00:14 +0000";
layers = (
{
hints = (
{
horizontal = 1;
place = (415,41);
type = Stem;
},
{
horizontal = 1;
place = (276,39);
type = Stem;
},
{
horizontal = 1;
place = (-9,65);
type = Stem;
},
{
place = (325,74);
type = Stem;
},
{
place = (39,74);
type = Stem;
}
);
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(387,91,l),
(363,76,l),
(331,64,l),
(279,56,l),
(241,61,l),
(189,83,l),
(160,107,l),
(133,148,l),
(115,202,l),
(113,276,l),
(350,276,l),
(383,279,l),
(393,291,l),
(398,325,l),
(393,364,l),
(378,395,l),
(342,431,l),
(308,447,l),
(251,456,l),
(190,447,l),
(151,430,l),
(109,396,l),
(74,352,l),
(44,270,l),
(39,212,l),
(50,133,l),
(78,73,l),
(115,31,l),
(154,9,l),
(200,-10,l),
(236,-9,l),
(281,-8,l),
(319,6,l),
(370,36,l),
(403,67,l),
(403,67,l)
);
},
{
closed = 1;
nodes = (
(122,314,l),
(132,341,l),
(169,385,l),
(201,407,l),
(242,414,l),
(270,410,l),
(307,387,l),
(325,342,l),
(318,323,l),
(298,314,l),
(298,314,l)
);
}
);
width = 442;
}
);
},
{
glyphname = e.004;
lastChange = "2025-01-13 19:00:14 +0000";
layers = (
{
hints = (
{
horizontal = 1;
place = (441,22);
type = Stem;
},
{
horizontal = 1;
place = (297,26);
type = Stem;
},
{
horizontal = 1;
place = (-13,53);
type = Stem;
},
{
place = (25,110);
type = Stem;
}
);
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(25,230,l),
(25,180,l),
(36,131,l),
(58,86,l),
(91,49,l),
(125,21,l),
(166,2,l),
(211,-12,l),
(259,-12,l),
(306,-12,l),
(350,2,l),
(391,24,l),
(430,57,l),
(449,78,l),
(452,87,l),
(445,96,l),
(399,66,l),
(348,43,l),
(312,39,l),
(263,47,l),
(219,68,l),
(180,102,l),
(151,147,l),
(141,183,l),
(135,237,l),
(137,271,l),
(144,291,l),
(166,297,l),
(259,297,l),
(394,295,l),
(441,296,l),
(451,302,l),
(453,315,l),
(442,361,l),
(424,389,l),
(383,428,l),
(342,449,l),
(274,460,l),
(231,457,l),
(173,441,l),
(111,406,l),
(81,378,l),
(57,341,l),
(36,299,l),
(36,299,l)
);
},
{
closed = 1;
nodes = (
(149,347,l),
(159,373,l),
(179,395,l),
(232,431,l),
(272,439,l),
(322,423,l),
(347,399,l),
(352,378,l),
(345,355,l),
(332,342,l),
(310,328,l),
(259,322,l),
(163,322,l),
(151,326,l),
(151,326,l)
);
}
);
width = 461;
}
);
},
{
glyphname = e.005;
lastChange = "2025-01-13 19:00:14 +0000";
layers = (
{
hints = (
{
horizontal = 1;
place = (434,29);
type = Stem;
},
{
horizontal = 1;
place = (278,29);
type = Stem;
},
{
horizontal = 1;
place = (-10,66);
type = Stem;
},
{
place = (316,87);
type = Stem;
},
{
place = (32,76);
type = Stem;
}
);
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(111,277,l),
(149,279,l),
(232,277,l),
(332,278,l),
(386,275,l),
(401,279,l),
(402,285,l),
(403,310,l),
(390,370,l),
(380,394,l),
(327,442,l),
(306,455,l),
(244,461,l),
(172,448,l),
(120,409,l),
(104,395,l),
(79,360,l),
(52,307,l),
(35,257,l),
(33,207,l),
(41,128,l),
(66,75,l),
(97,37,l),
(115,23,l),
(181,-10,l),
(226,-12,l),
(261,-11,l),
(314,14,l),
(348,35,l),
(399,89,l),
(404,98,l),
(387,112,l),
(363,91,l),
(310,61,l),
(274,54,l),
(237,57,l),
(180,86,l),
(148,121,l),
(127,153,l),
(112,213,l),
(110,251,l),
(110,251,l)
);
},
{
closed = 1;
nodes = (
(228,432,l),
(269,423,l),
(296,401,l),
(317,342,l),
(310,322,l),
(296,311,l),
(259,307,l),
(201,306,l),
(152,304,l),
(134,305,l),
(117,307,l),
(120,324,l),
(158,392,l),
(186,418,l),
(208,429,l),
(208,429,l)
);
}
);
width = 425;
}
);
},
{
glyphname = e.006;
lastChange = "2025-01-13 19:00:14 +0000";
layers = (
{
hints = (
{
horizontal = 1;
place = (429,31);
type = Stem;
},
{
horizontal = 1;
place = (284,28);
type = Stem;
},
{
horizontal = 1;
place = (-14,63);
type = Stem;
},
{
place = (337,79);
type = Stem;
},
{
place = (27,80);
type = Stem;
}
);
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(226,284,l),
(302,285,l),
(406,288,l),
(415,305,l),
(393,371,l),
(346,428,l),
(305,450,l),
(244,460,l),
(188,454,l),
(140,436,l),
(104,411,l),
(78,379,l),
(51,335,l),
(29,252,l),
(27,226,l),
(29,182,l),
(40,132,l),
(66,83,l),
(84,59,l),
(113,30,l),
(135,14,l),
(186,-9,l),
(222,-12,l),
(274,-7,l),
(323,12,l),
(389,60,l),
(411,89,l),
(400,101,l),
(350,72,l),
(307,53,l),
(276,49,l),
(203,64,l),
(156,93,l),
(134,124,l),
(112,177,l),
(106,240,l),
(112,287,l),
(161,285,l),
(161,285,l)
);
},
{
closed = 1;
nodes = (
(246,430,l),
(280,425,l),
(303,411,l),
(328,386,l),
(337,353,l),
(330,330,l),
(317,320,l),
(294,319,l),
(265,317,l),
(205,316,l),
(160,315,l),
(132,314,l),
(120,320,l),
(121,332,l),
(125,344,l),
(162,395,l),
(182,408,l),
(182,408,l)
);
}
);
width = 441;
}
);
},
{
glyphname = e.007;
lastChange = "2025-01-13 19:00:14 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(461,301,o),
(470,307.333,o),
(470,320,cs),
(470,348.667,o),
(458,377.333,o),
(434,406,cs),
(401.333,444.667,o),
(352,464,o),
(286,464,cs),
(142,464,o),
(37,361.667,o),
(37,219,cs),
(37,84.333,o),
(132.667,-9,o),
(270,-9,cs),
(336,-9,o),
(393.333,13.333,o),
(442,58,cs),
(459.333,74,o),
(468,86,o),
(468,94,cs),
(468,100.667,o),
(465,104,o),
(459,104,cs),
(455,104,o),
(447.667,98.667,o),
(437,88,cs),
(409,60.667,o),
(371.667,47,o),
(325,47,cs),
(222.333,47,o),
(147,132,o),
(147,248,cs),
(147,266,o),
(147.667,277.333,o),
(149,282,cs),
(151.667,294.667,o),
(159.667,301,o),
(173,301,cs),
(443,301,l),
(443,301,l)
);
},
{
closed = 1;
nodes = (
(175.333,332,o),
(167.667,332.5,o),
(165,333.5,cs),
(162.333,334.5,o),
(161,337.667,o),
(161,343,cs),
(161,353.667,o),
(166.667,367.333,o),
(178,384,cs),
(203.333,422.667,o),
(238.667,442,o),
(284,442,cs),
(334.667,442,o),
(367,418.333,o),
(367,381,cs),
(367,348.333,o),
(344,332,o),
(298,332,cs),
(188,332,l),
(188,332,l)
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */
10
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
43
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
44
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
43
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
21
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
21
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
5
MDRP[11100]	/* MoveDirectRelPt */
NPUSHW[ ]	/* 21 values pushed */
102 5 118 5 134 5 150 5 166 5 182 5 198 5 214 5 230 5 246 5 10
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 7 values pushed */
6 5 22 5 38 5 3
DELTAP2[ ]	/* DeltaExceptionP2 */
NPUSHW[ ]	/* 5 values pushed */
53 5 69 5 2
DELTAP2[ ]	/* DeltaExceptionP2 */
PUSHW[ ]	/* 1 value pushed */
3
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
3
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
44
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
28
MDRP[11100]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
14
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
14
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
28
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
33
MDRP[11100]	/* MoveDirectRelPt */
NPUSHW[ ]	/* 5 values pushed */
58 33 74 33 2
DELTAP2[ ]	/* DeltaExceptionP2 */
NPUSHW[ ]	/* 21 values pushed */
105 33 121 33 137 33 153 33 169 33 185 33 201 33 217 33 233 33 249 33 10
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 7 values pushed */
9 33 25 33 41 33 3
DELTAP2[ ]	/* DeltaExceptionP2 */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
37
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
24
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
24 42
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
37
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
18
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
18 38
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 3 values pushed */
31 1 13
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
31
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
18
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
8
MDRP[11100]	/* MoveDirectRelPt */
NPUSHW[ ]	/* 21 values pushed */
103 8 119 8 135 8 151 8 167 8 183 8 199 8 215 8 231 8 247 8 10
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 7 values pushed */
7 8 23 8 39 8 3
DELTAP2[ ]	/* DeltaExceptionP2 */
NPUSHW[ ]	/* 5 values pushed */
54 8 70 8 2
DELTAP2[ ]	/* DeltaExceptionP2 */
PUSHW[ ]	/* 1 value pushed */
24
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
36
MDRP[11100]	/* MoveDirectRelPt */
NPUSHW[ ]	/* 5 values pushed */
57 36 73 36 2
DELTAP2[ ]	/* DeltaExceptionP2 */
NPUSHW[ ]	/* 21 values pushed */
104 36 120 36 136 36 152 36 168 36 184 36 200 36 216 36 232 36 248 36 10
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 7 values pushed */
8 36 24 36 40 36 3
DELTAP2[ ]	/* DeltaExceptionP2 */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 502;
}
);
note = e;
},
{
glyphname = e.008;
lastChange = "2025-01-13 19:00:14 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(413.333,273.667,o),
(416,284.333,o),
(416,305,cs),
(416,347,o),
(404.333,381.333,o),
(381,408,cs),
(349,445.333,o),
(306.667,464,o),
(254,464,cs),
(195.333,464,o),
(146.333,441.333,o),
(107,396,cs),
(59.667,342,o),
(36,275.667,o),
(36,197,cs),
(36,151,o),
(48.667,106.667,o),
(74,64,cs),
(104.667,14.667,o),
(169,-19,o),
(233,-19,cs),
(283,-19,o),
(327.667,-1,o),
(367,35,cs),
(401,65.667,o),
(418,85.667,o),
(418,95,cs),
(418,99,o),
(406,109,o),
(402,109,cs),
(400,109,o),
(397.667,107.667,o),
(395,105,cs),
(385.667,94.333,o),
(336,50,o),
(284,50,cs),
(233.333,50,o),
(190.667,71.667,o),
(156,115,cs),
(128.667,149.667,o),
(115,191.667,o),
(115,241,cs),
(115,256.333,o),
(115.5,265.333,o),
(116.5,268,cs),
(117.5,270.667,o),
(120.667,272,o),
(126,272,cs),
(138,272,ls),
(142.667,272,o),
(150.333,272.333,o),
(161,273,cs),
(169.667,273,o),
(180,273,o),
(192,273,cs),
(300,272,l),
(378,273,l),
(408,273,l),
(408,273,l)
);
},
{
closed = 1;
nodes = (
(132.667,305,o),
(123,307,o),
(123,311,cs),
(123,330.333,o),
(132,351.667,o),
(150,375,cs),
(178.667,414.333,o),
(209,434,o),
(241,434,cs),
(286.333,434,o),
(325,392,o),
(325,344,cs),
(325,325.333,o),
(318.5,314.167,o),
(305.5,310.5,cs),
(292.5,306.833,o),
(251.333,305,o),
(182,305,cs),
(152,305,l),
(152,305,l)
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */
10
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
55
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
56
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
40
MDRP[11100]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
0
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
0
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
55
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
32
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
32
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
11
MDRP[11100]	/* MoveDirectRelPt */
NPUSHW[ ]	/* 21 values pushed */
102 11 118 11 134 11 150 11 166 11 182 11 198 11 214 11 230 11 246 11 10
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 7 values pushed */
6 11 22 11 38 11 3
DELTAP2[ ]	/* DeltaExceptionP2 */
NPUSHW[ ]	/* 5 values pushed */
53 11 69 11 2
DELTAP2[ ]	/* DeltaExceptionP2 */
PUSHW[ ]	/* 1 value pushed */
40
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
23
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
23
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
11
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
34
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
34
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
40
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
46
MDRP[11100]	/* MoveDirectRelPt */
NPUSHW[ ]	/* 5 values pushed */
58 46 74 46 2
DELTAP2[ ]	/* DeltaExceptionP2 */
NPUSHW[ ]	/* 21 values pushed */
105 46 121 46 137 46 153 46 169 46 185 46 201 46 217 46 233 46 249 46 10
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 7 values pushed */
9 46 25 46 41 46 3
DELTAP2[ ]	/* DeltaExceptionP2 */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
37
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
36
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
36 42
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
37
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
27
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
27 38
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 3 values pushed */
40 2 13
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
40
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
2
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
0
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
0
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
2
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
5
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
5
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
2
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
7
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
27
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
15
MDRP[11100]	/* MoveDirectRelPt */
NPUSHW[ ]	/* 21 values pushed */
103 15 119 15 135 15 151 15 167 15 183 15 199 15 215 15 231 15 247 15 10
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 7 values pushed */
7 15 23 15 39 15 3
DELTAP2[ ]	/* DeltaExceptionP2 */
NPUSHW[ ]	/* 5 values pushed */
54 15 70 15 2
DELTAP2[ ]	/* DeltaExceptionP2 */
PUSHW[ ]	/* 1 value pushed */
40
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
42
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
36
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
49
MDRP[11100]	/* MoveDirectRelPt */
NPUSHW[ ]	/* 5 values pushed */
57 49 73 49 2
DELTAP2[ ]	/* DeltaExceptionP2 */
NPUSHW[ ]	/* 21 values pushed */
104 49 120 49 136 49 152 49 168 49 184 49 200 49 216 49 232 49 248 49 10
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 7 values pushed */
8 49 24 49 40 49 3
DELTAP2[ ]	/* DeltaExceptionP2 */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 454;
}
);
note = e;
},
{
glyphname = e.009;
lastChange = "2025-01-13 19:00:14 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(369.333,284.333,o),
(411.333,283,o),
(458,279,c),
(454.667,317.667,o),
(452,340,o),
(450,346,cs),
(426,419.333,o),
(356,466,o),
(268,466,cs),
(137.333,466,o),
(44,363.667,o),
(44,221,cs),
(44,82.333,o),
(138.333,-19,o),
(269,-19,cs),
(339.667,-19,o),
(398.333,6.667,o),
(445,58,cs),
(458,71,l),
(448,75.667,o),
(441.667,83.667,o),
(439,95,c),
(399.667,58.333,o),
(357.333,40,o),
(312,40,cs),
(202.667,40,o),
(120,132.333,o),
(120,255,cs),
(120,266.333,o),
(120.333,275.333,o),
(121,282,c),
(239,282,l),
(332,283,l),
(332,283,l)
);
},
{
closed = 1;
nodes = (
(132,311,o),
(127,314.667,o),
(127,322,cs),
(127,378,o),
(201,436,o),
(269,436,cs),
(322.333,436,o),
(367,397,o),
(367,349,cs),
(367,325,o),
(357,322.333,o),
(329,321,cs),
(148,311,l),
(142,311,l),
(142,311,l)
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */
10
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 3 values pushed */
3 16 13
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
3
SRP0[ ]	/* SetRefPoint0 */
NPUSHW[ ]	/* 21 values pushed */
102 3 118 3 134 3 150 3 166 3 182 3 198 3 214 3 230 3 246 3 10
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 7 values pushed */
6 3 22 3 38 3 3
DELTAP2[ ]	/* DeltaExceptionP2 */
NPUSHW[ ]	/* 5 values pushed */
53 3 69 3 2
DELTAP2[ ]	/* DeltaExceptionP2 */
PUSHW[ ]	/* 1 value pushed */
37
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
37
MDAP[1]	/* MoveDirectAbsPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
33
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
19
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
19 38
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
33
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
13
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
13 34
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
6
MDRP[11100]	/* MoveDirectRelPt */
NPUSHW[ ]	/* 21 values pushed */
103 6 119 6 135 6 151 6 167 6 183 6 199 6 215 6 231 6 247 6 10
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 7 values pushed */
7 6 23 6 39 6 3
DELTAP2[ ]	/* DeltaExceptionP2 */
NPUSHW[ ]	/* 5 values pushed */
54 6 70 6 2
DELTAP2[ ]	/* DeltaExceptionP2 */
PUSHW[ ]	/* 3 values pushed */
8 13 19
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHW[ ]	/* 3 values pushed */
10 13 19
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHW[ ]	/* 1 value pushed */
19
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
34
MDRP[11100]	/* MoveDirectRelPt */
NPUSHW[ ]	/* 5 values pushed */
57 34 73 34 2
DELTAP2[ ]	/* DeltaExceptionP2 */
NPUSHW[ ]	/* 21 values pushed */
104 34 120 34 136 34 152 34 168 34 184 34 200 34 216 34 232 34 248 34 10
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 7 values pushed */
8 34 24 34 40 34 3
DELTAP2[ ]	/* DeltaExceptionP2 */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 490;
}
);
note = e;
},
{
glyphname = e.010;
lastChange = "2025-01-13 19:00:14 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(383.738,276,o),
(400,278.319,o),
(400,326,cs),
(400,405.882,o),
(334.405,457,o),
(253,457,cs),
(133.407,457,o),
(41,358.52,o),
(41,212,cs),
(41,82.862,o),
(126.203,-10,o),
(238,-10,cs),
(270,-10,o),
(310.667,-2.333,o),
(348,19,cs),
(376,35,o),
(390,49.667,o),
(406,67,c),
(389,90,l),
(370.333,76.667,o),
(340,55,o),
(280,55,cs),
(212,55,o),
(156.667,96,o),
(130,152,cs),
(116.667,182.667,o),
(113,207.667,o),
(113,245,cs),
(113,251.667,o),
(113,256.833,o),
(113,260.5,cs),
(113,264.167,o),
(113.667,269.333,o),
(115,276,c),
(351,276,l),
(351,276,l)
);
},
{
closed = 1;
nodes = (
(142.667,380,o),
(186.667,415,o),
(244,415,cs),
(306.093,415,o),
(326,374.378,o),
(326,343,cs),
(326,320.333,o),
(314.667,317.333,o),
(300,316,c),
(124,316,l),
(124,316,l)
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */
52
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
53
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
52
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
24
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
24
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 2 values pushed */
3 2
MIRP[11100]	/* MoveIndirectRelPt */
NPUSHW[ ]	/* 17 values pushed */
6 3 22 3 38 3 54 3 70 3 86 3 102 3 118 3 8
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 5 values pushed */
133 3 149 3 2
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHW[ ]	/* 1 value pushed */
0
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
0
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
53
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
34
MDRP[11100]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
13
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
13
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
34
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
43 2
MIRP[11100]	/* MoveIndirectRelPt */
NPUSHW[ ]	/* 5 values pushed */
138 43 154 43 2
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 17 values pushed */
9 43 25 43 41 43 57 43 73 43 89 43 105 43 121 43 8
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHW[ ]	/* 3 values pushed */
51 24 13
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
0
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
29
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
29 14
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
19
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
19 4
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 4 values pushed */
51 1 0 4
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
19
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
9 1
MIRP[11100]	/* MoveIndirectRelPt */
NPUSHW[ ]	/* 33 values pushed */
7 9 23 9 39 9 55 9 71 9 87 9 103 9 119 9 135 9 151 9 167 9 183 9 199 9 215 9 231 9 247 9 16
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 19 values pushed */
7 9 23 9 39 9 55 9 71 9 87 9 103 9 119 9 135 9 9
DELTAP2[ ]	/* DeltaExceptionP2 */
NPUSHW[ ]	/* 5 values pushed */
150 9 166 9 2
DELTAP2[ ]	/* DeltaExceptionP2 */
PUSHW[ ]	/* 1 value pushed */
29
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
48 1
MIRP[11100]	/* MoveIndirectRelPt */
NPUSHW[ ]	/* 5 values pushed */
153 48 169 48 2
DELTAP2[ ]	/* DeltaExceptionP2 */
NPUSHW[ ]	/* 33 values pushed */
8 48 24 48 40 48 56 48 72 48 88 48 104 48 120 48 136 48 152 48 168 48 184 48 200 48 216 48 232 48 248 48 16
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 19 values pushed */
8 48 24 48 40 48 56 48 72 48 88 48 104 48 120 48 136 48 9
DELTAP2[ ]	/* DeltaExceptionP2 */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 444;
}
);
note = e;
},
{
glyphname = e.011;
lastChange = "2025-01-13 19:00:14 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(447.333,306,o),
(456,314.333,o),
(456,331,cs),
(456,405.667,o),
(379.667,464,o),
(281,464,cs),
(143.667,464,o),
(49,360,o),
(49,212,cs),
(49,68,o),
(133,-23,o),
(269,-23,cs),
(337,-23,o),
(389.667,-1.667,o),
(427,41,cs),
(449.667,67.667,o),
(461,87.667,o),
(461,101,cs),
(461,111,o),
(457,116,o),
(449,116,cs),
(442.333,116,o),
(437,113.667,o),
(433,109,cs),
(423,95,ls),
(398.333,63,o),
(360.333,47,o),
(309,47,cs),
(198.333,47,o),
(132,114,o),
(132,226,cs),
(132,252.667,o),
(136,281,o),
(144,311,c),
(398,306,l),
(430,306,l),
(430,306,l)
);
},
{
closed = 1;
nodes = (
(194.333,402.667,o),
(235.333,432,o),
(282,432,cs),
(327.333,432,o),
(361,407.667,o),
(361,373,cs),
(361,357.667,o),
(353,348.667,o),
(337,346,cs),
(335,345.333,o),
(320.333,345,o),
(293,345,cs),
(281,345,o),
(268.667,344.667,o),
(256,344,cs),
(245.333,344,o),
(240.333,344,o),
(241,344,cs),
(159,344,l),
(159,344,l)
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */
10
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 3 values pushed */
3 20 13
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
3
SRP0[ ]	/* SetRefPoint0 */
NPUSHW[ ]	/* 21 values pushed */
102 3 118 3 134 3 150 3 166 3 182 3 198 3 214 3 230 3 246 3 10
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 7 values pushed */
6 3 22 3 38 3 3
DELTAP2[ ]	/* DeltaExceptionP2 */
NPUSHW[ ]	/* 5 values pushed */
53 3 69 3 2
DELTAP2[ ]	/* DeltaExceptionP2 */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
35
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
23
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
23 40
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
35
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
17
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
17 36
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 3 values pushed */
34 0 13
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
34
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
17
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
6
MDRP[11100]	/* MoveDirectRelPt */
NPUSHW[ ]	/* 21 values pushed */
103 6 119 6 135 6 151 6 167 6 183 6 199 6 215 6 231 6 247 6 10
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 7 values pushed */
7 6 23 6 39 6 3
DELTAP2[ ]	/* DeltaExceptionP2 */
NPUSHW[ ]	/* 5 values pushed */
54 6 70 6 2
DELTAP2[ ]	/* DeltaExceptionP2 */
PUSHW[ ]	/* 1 value pushed */
34
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
29
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
29
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
34
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
32
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
32
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
34
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
36
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
36
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
23
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
41
MDRP[11100]	/* MoveDirectRelPt */
NPUSHW[ ]	/* 5 values pushed */
57 41 73 41 2
DELTAP2[ ]	/* DeltaExceptionP2 */
NPUSHW[ ]	/* 21 values pushed */
104 41 120 41 136 41 152 41 168 41 184 41 200 41 216 41 232 41 248 41 10
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 7 values pushed */
8 41 24 41 40 41 3
DELTAP2[ ]	/* DeltaExceptionP2 */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 498;
}
);
note = e;
},
{
glyphname = f.001;
lastChange = "2025-01-13 19:00:14 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(342.014,401.003,o),
(353.541,433.459,o),
(340,447,c),
(211,447,ls),
(191,447,o),
(192,448.667,o),
(192,478,cs),
(192,511,ls),
(192,567.618,o),
(195.939,648.547,o),
(216,703,cs),
(234,744.333,o),
(261,765,o),
(297,765,cs),
(334.333,765,o),
(366.667,741.667,o),
(388,715,cs),
(395.333,706.333,o),
(404.333,702,o),
(415,702,cs),
(436.333,702,o),
(458,719.333,o),
(458,742,cs),
(458,783.333,o),
(407,810,o),
(347,810,cs),
(236.798,810,o),
(170.46,731.904,o),
(143,666,cs),
(115,603.333,o),
(108,533.667,o),
(108,467,cs),
(108,455,o),
(99,449.333,o),
(91,444,c),
(42,421,l),
(38,413,o),
(38.333,403,o),
(45,399,c),
(85,399,ls),
(107.667,399,o),
(108,396.667,o),
(108,366,cs),
(108,127,ls),
(108,46.216,o),
(108.126,36.625,o),
(65,28,c),
(39,25,l),
(31,18.333,o),
(33,-0.333,o),
(41,-3,c),
(75.667,-0.333,o),
(108.667,0,o),
(150,0,cs),
(188.667,0,o),
(222.333,-0.333,o),
(273,-3,c),
(281,-0.333,o),
(283,18.333,o),
(275,25,c),
(235,28,ls),
(193.957,30.565,o),
(192,44.288,o),
(192,127,cs),
(192,366,ls),
(192,396.667,o),
(191,399,o),
(211,399,cs),
(332,399,l),
(332,399,l)
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */
4 2 28 4
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
4
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
28
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
40
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
4
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
66
MDRP[10000]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
0
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
48
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
48 16
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
37
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
37 10
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
70
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
70 10
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
13
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
13 4
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
16
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
16 4
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
19
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
19 4
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
70
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
0 1
MIRP[11100]	/* MoveIndirectRelPt */
PUSHW[ ]	/* 1 value pushed */
13
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
9 1
MIRP[11100]	/* MoveIndirectRelPt */
PUSHW[ ]	/* 1 value pushed */
0
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
32
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
33
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
48
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
59 1
MIRP[11100]	/* MoveIndirectRelPt */
NPUSHW[ ]	/* 5 values pushed */
185 59 201 59 2
DELTAP2[ ]	/* DeltaExceptionP2 */
NPUSHW[ ]	/* 33 values pushed */
8 59 24 59 40 59 56 59 72 59 88 59 104 59 120 59 136 59 152 59 168 59 184 59 200 59 216 59 232 59 248 59 16
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 23 values pushed */
8 59 24 59 40 59 56 59 72 59 88 59 104 59 120 59 136 59 152 59 168 59 11
DELTAP2[ ]	/* DeltaExceptionP2 */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 329;
}
);
note = f;
},
{
glyphname = f.002;
lastChange = "2025-01-13 19:00:14 +0000";
layers = (
{
hints = (
{
horizontal = 1;
place = (718,39);
type = Stem;
},
{
horizontal = 1;
place = (383,47);
type = Stem;
},
{
horizontal = 1;
place = (-4,33);
type = Stem;
},
{
place = (102,79);
type = Stem;
}
);
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(180,477,l),
(189,585,l),
(200,631,l),
(222,674,l),
(252,700,l),
(298,718,l),
(337,706,l),
(363,688,l),
(394,663,l),
(436,689,l),
(447,710,l),
(444,724,l),
(425,741,l),
(350,757,l),
(272,745,l),
(220,717,l),
(183,688,l),
(150,643,l),
(123,581,l),
(107,493,l),
(100,454,l),
(82,432,l),
(46,424,l),
(33,384,l),
(103,384,l),
(102,110,l),
(97,46,l),
(72,33,l),
(36,32,l),
(35,-4,l),
(145,2,l),
(267,-5,l),
(267,30,l),
(203,34,l),
(189,52,l),
(185,72,l),
(182,123,l),
(182,384,l),
(314,384,l),
(330,431,l),
(181,431,l),
(181,431,l)
);
}
);
width = 317;
}
);
},
{
glyphname = f.003;
lastChange = "2025-01-13 19:00:14 +0000";
layers = (
{
hints = (
{
horizontal = 1;
place = (718,39);
type = Stem;
},
{
horizontal = 1;
place = (383,47);
type = Stem;
},
{
horizontal = 1;
place = (-4,33);
type = Stem;
},
{
place = (102,79);
type = Stem;
}
);
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(180,477,l),
(189,585,l),
(200,631,l),
(222,674,l),
(252,700,l),
(298,718,l),
(337,706,l),
(363,688,l),
(394,663,l),
(436,689,l),
(447,710,l),
(444,724,l),
(425,741,l),
(350,757,l),
(272,745,l),
(220,717,l),
(183,688,l),
(150,643,l),
(123,581,l),
(107,493,l),
(100,454,l),
(82,432,l),
(46,424,l),
(33,384,l),
(103,384,l),
(102,110,l),
(97,46,l),
(72,33,l),
(36,32,l),
(35,-4,l),
(145,2,l),
(267,-5,l),
(267,30,l),
(203,34,l),
(189,52,l),
(185,72,l),
(182,123,l),
(182,384,l),
(314,384,l),
(330,431,l),
(181,431,l),
(181,431,l)
);
}
);
width = 317;
}
);
},
{
glyphname = f.004;
lastChange = "2025-01-13 19:00:14 +0000";
layers = (
{
hints = (
{
horizontal = 1;
place = (638,32);
type = Stem;
},
{
horizontal = 1;
place = (411,45);
type = Stem;
},
{
horizontal = 1;
place = (0,30);
type = Stem;
},
{
place = (86,92);
type = Stem;
}
);
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(86,226,l),
(84,159,l),
(83,73,l),
(66,42,l),
(45,31,l),
(22,28,l),
(9,20,l),
(8,17,l),
(13,4,l),
(26,3,l),
(42,4,l),
(131,8,l),
(202,5,l),
(248,2,l),
(262,5,l),
(268,14,l),
(261,27,l),
(242,30,l),
(215,33,l),
(192,46,l),
(180,68,l),
(177,99,l),
(177,173,l),
(178,338,l),
(179,366,l),
(178,384,l),
(185,402,l),
(205,409,l),
(237,411,l),
(267,409,l),
(289,408,l),
(299,408,l),
(307,429,l),
(300,446,l),
(289,448,l),
(268,447,l),
(229,447,l),
(203,447,l),
(182,457,l),
(179,473,l),
(187,564,l),
(198,598,l),
(219,628,l),
(243,637,l),
(264,628,l),
(289,604,l),
(308,578,l),
(329,568,l),
(348,576,l),
(357,589,l),
(373,623,l),
(368,641,l),
(353,655,l),
(284,668,l),
(217,654,l),
(157,617,l),
(109,557,l),
(91,510,l),
(78,455,l),
(43,442,l),
(27,437,l),
(22,425,l),
(21,417,l),
(28,413,l),
(55,415,l),
(74,409,l),
(83,400,l),
(85,382,l),
(85,382,l)
);
}
);
width = 295;
}
);
},
{
glyphname = f.005;
lastChange = "2025-01-13 19:00:14 +0000";
layers = (
{
hints = (
{
horizontal = 1;
place = (715,88);
type = Stem;
},
{
horizontal = 1;
place = (0,32);
type = Stem;
},
{
horizontal = 1;
place = (436,21);
target = up;
type = BottomGhost;
},
{
place = (89,74);
type = Stem;
}
);
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(246,440,l),
(164,442,l),
(163,569,l),
(163,627,l),
(165,685,l),
(182,727,l),
(208,741,l),
(225,746,l),
(263,729,l),
(300,715,l),
(321,724,l),
(333,739,l),
(336,753,l),
(328,780,l),
(307,793,l),
(274,798,l),
(207,782,l),
(183,768,l),
(167,753,l),
(134,711,l),
(102,635,l),
(95,583,l),
(90,546,l),
(89,514,l),
(88,470,l),
(88,442,l),
(17,442,l),
(6,438,l),
(5,428,l),
(8,396,l),
(16,395,l),
(37,395,l),
(88,396,l),
(89,330,l),
(87,191,l),
(86,134,l),
(78,49,l),
(58,38,l),
(26,33,l),
(12,32,l),
(10,21,l),
(10,3,l),
(17,1,l),
(29,2,l),
(69,4,l),
(135,6,l),
(198,3,l),
(213,2,l),
(224,0,l),
(231,1,l),
(239,4,l),
(241,16,l),
(239,26,l),
(219,33,l),
(172,42,l),
(164,82,l),
(162,112,l),
(165,205,l),
(163,248,l),
(165,317,l),
(164,393,l),
(270,395,l),
(278,392,l),
(290,399,l),
(290,409,l),
(288,440,l),
(278,441,l),
(278,441,l)
);
}
);
width = 276;
}
);
},
{
glyphname = f.006;
lastChange = "2025-01-13 19:00:14 +0000";
layers = (
{
hints = (
{
horizontal = 1;
place = (720,51);
type = Stem;
},
{
horizontal = 1;
place = (398,61);
type = Stem;
},
{
horizontal = 1;
place = (-1,30);
type = Stem;
},
{
place = (90,76);
type = Stem;
}
);
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(166,303,l),
(171,386,l),
(231,398,l),
(260,398,l),
(280,411,l),
(288,433,l),
(274,451,l),
(261,450,l),
(184,444,l),
(176,446,l),
(171,463,l),
(168,518,l),
(173,586,l),
(187,659,l),
(221,699,l),
(267,720,l),
(311,706,l),
(351,686,l),
(381,698,l),
(399,730,l),
(386,754,l),
(348,768,l),
(317,772,l),
(248,755,l),
(206,729,l),
(161,686,l),
(114,609,l),
(103,551,l),
(95,505,l),
(82,442,l),
(59,430,l),
(31,419,l),
(21,400,l),
(22,390,l),
(36,385,l),
(48,386,l),
(64,387,l),
(77,389,l),
(84,386,l),
(89,373,l),
(90,360,l),
(91,324,l),
(93,278,l),
(91,196,l),
(92,153,l),
(91,98,l),
(85,48,l),
(43,33,l),
(28,29,l),
(19,16,l),
(27,2,l),
(40,1,l),
(69,3,l),
(121,5,l),
(183,3,l),
(226,-1,l),
(253,3,l),
(259,9,l),
(239,29,l),
(211,35,l),
(181,51,l),
(173,76,l),
(171,128,l),
(169,150,l),
(169,182,l),
(168,226,l),
(168,226,l)
);
}
);
width = 295;
}
);
},
{
glyphname = f.007;
lastChange = "2025-01-13 19:00:14 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(201,401.667,o),
(204.667,408,o),
(222,408,cs),
(308,408,ls),
(324,408,o),
(328,411.333,o),
(328,426,cs),
(328,444.667,o),
(324.333,445,o),
(299,445,cs),
(220,445,ls),
(200,445,o),
(199,450.333,o),
(199,473,cs),
(199,507.667,o),
(202.333,540,o),
(209,570,cs),
(218.333,611.333,o),
(236,632,o),
(262,632,cs),
(275.333,632,o),
(287.667,624.333,o),
(299,609,cs),
(315.667,587,o),
(326.667,573.5,o),
(332,568.5,cs),
(337.333,563.5,o),
(343.667,561,o),
(351,561,cs),
(364.333,561,o),
(394,602,o),
(394,622,cs),
(394,647.333,o),
(357,666,o),
(309,666,cs),
(258.333,666,o),
(211.667,646,o),
(169,606,cs),
(136.333,576,o),
(116.333,537.667,o),
(109,491,cs),
(102.333,449.667,o),
(100.667,446,o),
(78,442,cs),
(52.667,436.667,o),
(40,429,o),
(40,419,cs),
(40,410.333,o),
(45.333,406,o),
(56,406,cs),
(60,406,ls),
(64.667,406,o),
(69.833,406.333,o),
(75.5,407,cs),
(81.167,407.667,o),
(84.667,408,o),
(86,408,cs),
(98,408,o),
(104,396,o),
(104,372,cs),
(104,100,ls),
(104,72,o),
(101.333,54.333,o),
(96,47,cs),
(88.667,36.333,o),
(74.667,30,o),
(54,28,cs),
(30,26,o),
(18,20.333,o),
(18,11,cs),
(18,1.667,o),
(24.667,-3,o),
(38,-3,cs),
(45.333,-3,o),
(51.333,-2.667,o),
(56,-2,cs),
(102.667,0,o),
(134.667,1,o),
(152,1,cs),
(172,1,o),
(188.333,0.667,o),
(201,0,cs),
(241.667,-2,o),
(263.333,-3,o),
(266,-3,cs),
(280,-3,o),
(287,1.667,o),
(287,11,cs),
(287,20.333,o),
(275,26,o),
(251,28,cs),
(229.667,30,o),
(215.333,36.333,o),
(208,47,cs),
(203.333,54.333,o),
(201,72,o),
(201,100,cs),
(201,383,l),
(201,383,l)
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */
10
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 3 values pushed */
1 25 13
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
1
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
25
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
39
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
39
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
1
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
58
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
58
MDAP[1]	/* MoveDirectAbsPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
43
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
37
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
9
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
9 38
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
37
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
11
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
11 38
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
37
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
13
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
13 38
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
37
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
15
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
15 38
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
37
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
17
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
17 38
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 3 values pushed */
61 69 13
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
61
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
9
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
5
MDRP[11100]	/* MoveDirectRelPt */
NPUSHW[ ]	/* 21 values pushed */
103 5 119 5 135 5 151 5 167 5 183 5 199 5 215 5 231 5 247 5 10
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 7 values pushed */
7 5 23 5 39 5 3
DELTAP2[ ]	/* DeltaExceptionP2 */
NPUSHW[ ]	/* 5 values pushed */
54 5 70 5 2
DELTAP2[ ]	/* DeltaExceptionP2 */
PUSHW[ ]	/* 1 value pushed */
21
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
69
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
28
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
69
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
31
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
31
MDAP[1]	/* MoveDirectAbsPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 336;
}
);
note = f;
},
{
glyphname = f.008;
lastChange = "2025-01-13 19:00:14 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(186.333,659.333,o),
(189.667,702.667,o),
(197,720,cs),
(207,743.333,o),
(223.667,755,o),
(247,755,cs),
(257.667,755,o),
(270.333,749.5,o),
(285,738.5,cs),
(299.667,727.5,o),
(312.667,722,o),
(324,722,cs),
(345.333,722,o),
(364,742.333,o),
(364,765,cs),
(364,787,o),
(353,801,o),
(331,807,cs),
(309,811,o),
(296,813,o),
(292,813,cs),
(256.667,813,o),
(224,799,o),
(194,771,cs),
(166,744.333,o),
(130.333,676,o),
(121,632,cs),
(113.667,592.667,o),
(110,554.667,o),
(110,518,cs),
(110,472.667,o),
(109.5,449.333,o),
(108.5,448,cs),
(107.5,446.667,o),
(101.333,446,o),
(90,446,cs),
(54.667,446,o),
(36,445.667,o),
(34,445,cs),
(28,443,o),
(25,433.667,o),
(25,417,cs),
(25,401.667,o),
(31.333,394,o),
(44,394,cs),
(70.667,394,o),
(90.333,394.667,o),
(103,396,cs),
(111,397.333,o),
(114,377.667,o),
(112,337,cs),
(110,285,l),
(111,258,l),
(110,190,l),
(112,105,ls),
(113.333,67.667,o),
(107.667,45.333,o),
(95,38,cs),
(91,35.333,o),
(58.667,25.667,o),
(52,27,cs),
(36,29,l),
(31.333,30.333,o),
(27.667,24,o),
(25,10,c),
(27,-1.333,o),
(31,-7,o),
(37,-7,cs),
(43,-7,o),
(49,-6.333,o),
(55,-5,cs),
(81.667,-2.333,o),
(111.333,-0.333,o),
(144,1,cs),
(157.333,1,o),
(241.333,-0.667,o),
(244,-2,c),
(260,-3.333,o),
(268.667,-4,o),
(270,-4,cs),
(278.667,-4,o),
(283,1.667,o),
(283,13,cs),
(283,19,o),
(281.5,23.5,o),
(278.5,26.5,cs),
(275.5,29.5,o),
(264.667,31.333,o),
(246,32,cs),
(203.333,33.333,o),
(194.667,40,o),
(192,72,cs),
(188.667,113.333,o),
(187.667,160,o),
(189,212,cs),
(190,253,l),
(189,324,ls),
(188.333,359.333,o),
(188.5,380.167,o),
(189.5,386.5,cs),
(190.5,392.833,o),
(193.667,396,o),
(199,396,cs),
(207,396,o),
(214,395.667,o),
(220,395,c),
(294,395,ls),
(309.333,395,o),
(317,400.333,o),
(317,411,cs),
(317,419,ls),
(317.667,425,o),
(318,428.667,o),
(318,430,cs),
(318,438.667,o),
(314,443,o),
(306,443,c),
(301.333,444.333,o),
(297.667,445,o),
(295,445,cs),
(287.667,445.667,o),
(281.667,446,o),
(277,446,cs),
(271.667,446,o),
(266.333,445.667,o),
(261,445,cs),
(235,443,ls),
(228.333,443,o),
(222,443.667,o),
(216,445,cs),
(214,445.667,o),
(211.667,446,o),
(209,446,cs),
(193,445,ls),
(189.667,445,o),
(188,454,o),
(188,472,cs),
(187,590,l),
(187,590,l)
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */
10
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 3 values pushed */
0 76 13
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
28
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
28
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
0
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
30
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
30
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
0
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
32
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
32
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
76
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
59
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
59
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
76
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
61
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
61
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
76
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
63
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
63
MDAP[1]	/* MoveDirectAbsPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
83
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
85
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
37
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
40
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
40 38
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
37
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
42
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
42 38
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
37
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
45
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
45 38
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
37
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
47
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
47 38
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
37
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
49
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
49 38
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 3 values pushed */
73 67 13
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
73
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
3
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
3
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
73
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
6
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
6
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
73
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
8
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
8
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
73
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
11
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
73
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
13
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
13
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
73
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
15
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
15
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
67
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
22
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
22
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
67
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
25
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
25
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
42
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
35
MDRP[11100]	/* MoveDirectRelPt */
NPUSHW[ ]	/* 21 values pushed */
103 35 119 35 135 35 151 35 167 35 183 35 199 35 215 35 231 35 247 35 10
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 7 values pushed */
7 35 23 35 39 35 3
DELTAP2[ ]	/* DeltaExceptionP2 */
NPUSHW[ ]	/* 5 values pushed */
54 35 70 35 2
DELTAP2[ ]	/* DeltaExceptionP2 */
PUSHW[ ]	/* 1 value pushed */
54
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
54
MDAP[1]	/* MoveDirectAbsPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 353;
}
);
note = f;
},
{
glyphname = f.009;
lastChange = "2025-01-13 19:00:14 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(185.333,468.667,o),
(185,496.333,o),
(185,525,cs),
(185,595.667,o),
(187.333,644.667,o),
(192,672,cs),
(202,738,o),
(229.667,771,o),
(275,771,cs),
(294.333,771,o),
(310,764,o),
(322,750,cs),
(334,736,o),
(344.667,729,o),
(354,729,cs),
(376.667,729,o),
(396,749.667,o),
(396,775,cs),
(396,797.667,o),
(370.333,815,o),
(337,815,cs),
(271,815,o),
(218.333,791.333,o),
(179,744,cs),
(133.667,688.667,o),
(111,599,o),
(111,475,cs),
(111,436,l),
(25,431,l),
(27.667,425.667,o),
(29,421,o),
(29,417,cs),
(29,416.333,o),
(28.333,413,o),
(27,407,c),
(111,407,l),
(111,197,ls),
(111,135.667,o),
(109.667,90.667,o),
(107,62,cs),
(103,34,o),
(99.667,29.667,o),
(61,27,cs),
(25,24,l),
(27.667,18,o),
(29,13,o),
(29,9,cs),
(29,7,o),
(28,3,o),
(26,-3,c),
(62,-2,ls),
(87.333,-1.333,o),
(108,-0.333,o),
(124,1,cs),
(136,1.667,o),
(144,2,o),
(148,2,cs),
(153.333,2,o),
(163.667,1.667,o),
(179,1,cs),
(197.667,-0.333,o),
(222.667,-1.333,o),
(254,-2,cs),
(303,-3,l),
(300.333,3,o),
(299,7,o),
(299,9,cs),
(299,13,o),
(300.667,18,o),
(304,24,c),
(252,27,ls),
(224,28.333,o),
(207.333,30.333,o),
(202,33,cs),
(196.667,35.667,o),
(193.333,43.667,o),
(192,57,cs),
(188,83,o),
(186,129.667,o),
(186,197,cs),
(186,407,l),
(334,407,l),
(331.333,419,o),
(330,425.667,o),
(330,427,cs),
(330,434.333,o),
(331.333,442,o),
(334,450,c),
(186,442,l),
(186,442,l)
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */
10
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 3 values pushed */
62 45 13
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
62
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
0
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
0
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
62
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
6
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
6
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
45
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
35
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
35
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
45
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
37
MDRP[10000]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
33
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
17
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
17 34
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
33
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
20
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
20 34
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
33
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
22
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
22 34
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
33
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
24
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
24 34
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
33
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
26
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
26 34
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 3 values pushed */
49 58 13
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
49
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 3 values pushed */
0 6 13
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
0
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 3 values pushed */
43 39 13
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
43
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
17
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
12
MDRP[11100]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
31
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
31
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
32
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
6
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
38
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
0
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
44
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
44
MDAP[1]	/* MoveDirectAbsPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 324;
}
);
note = f;
},
{
glyphname = f.010;
lastChange = "2025-01-13 19:00:14 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(103,385,l),
(103,109,ls),
(103,41.607,o),
(107.205,29,o),
(35,29,c),
(35,-5,l),
(69.667,-2.333,o),
(102.667,0,o),
(144,0,cs),
(181.333,0,o),
(217.667,-2.333,o),
(267,-5,c),
(267,29,l),
(180.614,29,o),
(184.368,42.499,o),
(182,123,cs),
(182,384,l),
(315,384,l),
(330,431,l),
(181,431,l),
(181,477,ls),
(181,523.817,o),
(181.008,606.68,o),
(213,660,cs),
(229.908,690.434,o),
(261.739,720,o),
(300,720,cs),
(332,720,o),
(349,703.667,o),
(365,689,cs),
(367,687,o),
(369.667,684.5,o),
(373,681.5,cs),
(376.333,678.5,o),
(379.667,675,o),
(383,671,cs),
(387,667,o),
(391.333,665,o),
(396,665,cs),
(410.991,665,o),
(448,690.423,o),
(448,714,cs),
(448,744.068,o),
(397.943,760,o),
(349,760,cs),
(251.733,760,o),
(174.72,698.628,o),
(141,626,cs),
(117,572.667,o),
(110.667,519.667,o),
(108,501,cs),
(103.121,449.766,o),
(103.631,444.815,o),
(84,435,cs),
(74.667,429.667,o),
(58.667,427.667,o),
(44,425,c),
(34,385,l),
(34,385,l)
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */
49 2 67 4
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
67
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
8
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
8
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
49
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
44
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
44
MDAP[1]	/* MoveDirectAbsPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
0
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
16
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
16 20
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
55
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
55 4
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
58
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
58 4
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
61
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
61 4
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 4 values pushed */
0 1 69 4
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
16
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
34 1
MIRP[11100]	/* MoveIndirectRelPt */
NPUSHW[ ]	/* 5 values pushed */
153 34 169 34 2
DELTAP2[ ]	/* DeltaExceptionP2 */
NPUSHW[ ]	/* 33 values pushed */
8 34 24 34 40 34 56 34 72 34 88 34 104 34 120 34 136 34 152 34 168 34 184 34 200 34 216 34 232 34 248 34 16
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 19 values pushed */
8 34 24 34 40 34 56 34 72 34 88 34 104 34 120 34 136 34 9
DELTAP2[ ]	/* DeltaExceptionP2 */
PUSHW[ ]	/* 1 value pushed */
0
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
45
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
45
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
69
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
47
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
47
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 2 values pushed */
46 1
MIRP[11100]	/* MoveIndirectRelPt */
PUSHW[ ]	/* 1 value pushed */
55
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
54 1
MIRP[11100]	/* MoveIndirectRelPt */
PUSHW[ ]	/* 1 value pushed */
62
MDRP[10000]	/* MoveDirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 318;
}
);
note = f;
},
{
glyphname = f.011;
lastChange = "2025-01-13 19:00:14 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(330,410,l),
(193,410,l),
(193,479,ls),
(193,614.333,o),
(216,682,o),
(262,682,cs),
(269.333,682,o),
(279.667,679,o),
(293,673,c),
(305,670,ls),
(309.667,668.667,o),
(315.667,668,o),
(323,668,cs),
(359,668,o),
(377,681.333,o),
(377,708,cs),
(377,730.667,o),
(353.333,749,o),
(328,749,cs),
(276,749,o),
(211.333,711.333,o),
(170,658,cs),
(136,614.667,o),
(117.333,555.333,o),
(114,480,cs),
(113,457,ls),
(111.667,417,o),
(109.667,413.667,o),
(87,403,c),
(69,398,ls),
(54.333,394,o),
(47,387,o),
(47,377,cs),
(47,368.333,o),
(57,364,o),
(77,364,cs),
(114,364,l),
(114,143,ls),
(114,90.333,o),
(111.833,60.5,o),
(107.5,53.5,cs),
(103.167,46.5,o),
(91.333,41,o),
(72,37,cs),
(47,33,ls),
(30.333,30.333,o),
(22,23.333,o),
(22,12,cs),
(22,2.667,o),
(27.667,-2.667,o),
(39,-4,cs),
(48,-4,l),
(73,-2,ls),
(97.667,0,o),
(128.667,1,o),
(166,1,cs),
(188.667,1,o),
(217.667,0,o),
(253,-2,cs),
(271,-3,ls),
(288.333,-3.667,o),
(297,2.333,o),
(297,15,cs),
(297,26.333,o),
(286.333,32.667,o),
(265,34,cs),
(251,35,ls),
(193.667,39,o),
(195,50.333,o),
(195,141,cs),
(195,364,l),
(330,364,l),
(330,364,l)
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */
10
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 3 values pushed */
53 25 13
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
53
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
0
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
0
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
25
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
34
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
34
MDAP[1]	/* MoveDirectAbsPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
40
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
35
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
9
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
9 36
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
35
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
12
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
12 36
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
35
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
15
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
15 36
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 3 values pushed */
53 0 13
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
53
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
9
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
4
MDRP[11100]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
0
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
25
MDRP[10000]	/* MoveDirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 343;
}
);
note = f;
},
{
glyphname = g.001;
lastChange = "2025-01-13 19:00:14 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(190.961,170,o),
(143,222.671,o),
(143,303,cs),
(143,379,o),
(183.333,430,o),
(238,430,cs),
(306.669,430,o),
(339,363.702,o),
(339,288,cs),
(339,218.667,o),
(307.333,170,o),
(246,170,cs)
);
},
{
closed = 1;
nodes = (
(388.333,-36,o),
(436,-65.667,o),
(436,-135,cs),
(436,-201.495,o),
(369.162,-256,o),
(269,-256,cs),
(166.333,-256,o),
(117,-205.333,o),
(117,-144,cs),
(117,-100,o),
(144.333,-65,o),
(171,-49,cs),
(188.333,-38.333,o),
(231.667,-36,o),
(269,-36,cs),
(307,-36,l),
(307,-36,l)
);
},
{
closed = 1;
nodes = (
(387.697,422,o),
(382.028,422.91,o),
(345,440,cs),
(318.333,452,o),
(280,462,o),
(236,462,cs),
(134.844,462,o),
(51,389.436,o),
(51,291,cs),
(51,220.726,o),
(96.827,174.893,o),
(136,154,c),
(136,148.667,o),
(130.333,139.667,o),
(125,133,cs),
(105,111.667,o),
(83.667,93.333,o),
(65,80,cs),
(53.667,72,o),
(48,65.667,o),
(48,61,cs),
(48,22.333,o),
(86,-16,o),
(130,-28,c),
(140.667,-36,o),
(131.667,-45.333,o),
(121,-56,cs),
(108.333,-68.667,o),
(94.833,-81.833,o),
(80.5,-95.5,cs),
(66.167,-109.167,o),
(54,-121,o),
(44,-131,cs),
(36,-141,o),
(32,-155,o),
(32,-173,cs),
(32,-237.276,o),
(87.048,-305,o),
(220,-305,cs),
(367.606,-305,o),
(502,-213.932,o),
(502,-91,cs),
(502,20.97,o),
(408.564,34,o),
(343,34,cs),
(318.333,34,o),
(294.667,33.5,o),
(272,32.5,cs),
(249.333,31.5,o),
(228.333,31,o),
(209,31,cs),
(155.667,31,o),
(129,52.667,o),
(129,78,cs),
(129,111.172,o),
(164.678,131.452,o),
(179,141,c),
(192.333,138.333,o),
(207.667,137,o),
(229,137,cs),
(372.238,137,o),
(419,237.343,o),
(419,317,cs),
(419,327,o),
(419,336.667,o),
(419,346,cs),
(419,355.333,o),
(418.333,365,o),
(417,375,c),
(499,375,l),
(516.036,377.434,o),
(515.774,414.67,o),
(506,422,c),
(414,422,l),
(414,422,l)
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */
11 3 102 4
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
11
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 4 values pushed */
68 2 30 4
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
68
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 4 values pushed */
44 2 3 4
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
44
SRP0[ ]	/* SetRefPoint0 */
NPUSHW[ ]	/* 5 values pushed */
154 3 170 3 2
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 19 values pushed */
9 3 25 3 41 3 57 3 73 3 89 3 105 3 121 3 137 3 9
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 19 values pushed */
6 11 22 11 38 11 54 11 70 11 86 11 102 11 118 11 134 11 9
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 5 values pushed */
149 11 165 11 2
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHW[ ]	/* 3 values pushed */
22 102 11
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHW[ ]	/* 1 value pushed */
22
MDAP[1]	/* MoveDirectAbsPt */
NPUSHW[ ]	/* 5 values pushed */
154 30 170 30 2
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 19 values pushed */
9 30 25 30 41 30 57 30 73 30 89 30 105 30 121 30 137 30 9
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHW[ ]	/* 1 value pushed */
44
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
42
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
102
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
57 2
MIRP[11100]	/* MoveIndirectRelPt */
PUSHW[ ]	/* 1 value pushed */
22
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
78 2
MIRP[11100]	/* MoveIndirectRelPt */
PUSHW[ ]	/* 1 value pushed */
102
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
89
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
89
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
11
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
97
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
97
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
68
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
117
MDRP[11100]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
0
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
107
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
107 10
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
73
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
73 6
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 4 values pushed */
63 1 33 4
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
63
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 4 values pushed */
0 1 49 4
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
0
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
107
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
8 1
MIRP[11100]	/* MoveIndirectRelPt */
NPUSHW[ ]	/* 5 values pushed */
185 8 201 8 2
DELTAP2[ ]	/* DeltaExceptionP2 */
NPUSHW[ ]	/* 33 values pushed */
8 8 24 8 40 8 56 8 72 8 88 8 104 8 120 8 136 8 152 8 168 8 184 8 200 8 216 8 232 8 248 8 16
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 23 values pushed */
8 8 24 8 40 8 56 8 72 8 88 8 104 8 120 8 136 8 152 8 168 8 11
DELTAP2[ ]	/* DeltaExceptionP2 */
PUSHW[ ]	/* 1 value pushed */
73
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
25 1
MIRP[11100]	/* MoveIndirectRelPt */
NPUSHW[ ]	/* 33 values pushed */
7 25 23 25 39 25 55 25 71 25 87 25 103 25 119 25 135 25 151 25 167 25 183 25 199 25 215 25 231 25 247 25 16
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 23 values pushed */
7 25 23 25 39 25 55 25 71 25 87 25 103 25 119 25 135 25 151 25 167 25 11
DELTAP2[ ]	/* DeltaExceptionP2 */
NPUSHW[ ]	/* 5 values pushed */
182 25 198 25 2
DELTAP2[ ]	/* DeltaExceptionP2 */
PUSHW[ ]	/* 1 value pushed */
8
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
34
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
34
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 2 values pushed */
39 1
MIRP[11100]	/* MoveIndirectRelPt */
PUSHW[ ]	/* 1 value pushed */
49
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
52
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
52
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
63
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
60
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
60
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
34
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
115
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
115
MDAP[1]	/* MoveDirectAbsPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 506;
}
);
note = g;
},
{
glyphname = g.002;
lastChange = "2025-01-13 19:00:14 +0000";
layers = (
{
hints = (
{
horizontal = 1;
place = (427,31);
type = Stem;
},
{
horizontal = 1;
place = (166,34);
type = Stem;
},
{
horizontal = 1;
place = (-9,80);
type = Stem;
},
{
horizontal = 1;
place = (-238,54);
type = Stem;
},
{
place = (300,79);
type = Stem;
},
{
place = (58,79);
type = Stem;
}
);
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(337,416,l),
(312,435,l),
(266,453,l),
(224,458,l),
(176,452,l),
(132,435,l),
(95,408,l),
(69,366,l),
(58,309,l),
(68,250,l),
(90,217,l),
(156,172,l),
(73,94,l),
(71,81,l),
(84,42,l),
(104,21,l),
(83,-1,l),
(33,-61,l),
(26,-103,l),
(34,-153,l),
(54,-181,l),
(89,-215,l),
(130,-234,l),
(193,-238,l),
(260,-232,l),
(314,-212,l),
(383,-162,l),
(416,-126,l),
(437,-91,l),
(451,-26,l),
(445,10,l),
(426,39,l),
(395,58,l),
(358,67,l),
(311,71,l),
(174,79,l),
(164,86,l),
(155,105,l),
(169,134,l),
(202,166,l),
(271,171,l),
(315,190,l),
(357,234,l),
(375,277,l),
(379,310,l),
(373,352,l),
(361,378,l),
(463,377,l),
(463,416,l),
(463,416,l)
);
},
{
closed = 1;
nodes = (
(212,427,l),
(234,424,l),
(266,407,l),
(289,368,l),
(300,301,l),
(295,263,l),
(284,238,l),
(265,214,l),
(221,200,l),
(180,212,l),
(160,233,l),
(144,268,l),
(137,325,l),
(145,372,l),
(162,403,l),
(178,416,l),
(178,416,l)
);
},
{
closed = 1;
nodes = (
(131,7,l),
(155,0,l),
(248,-10,l),
(311,-16,l),
(354,-27,l),
(373,-53,l),
(382,-82,l),
(370,-122,l),
(356,-144,l),
(315,-170,l),
(245,-183,l),
(182,-175,l),
(143,-155,l),
(118,-133,l),
(100,-75,l),
(110,-35,l),
(110,-35,l)
);
}
);
width = 463;
}
);
},
{
glyphname = g.003;
lastChange = "2025-01-13 19:00:14 +0000";
layers = (
{
hints = (
{
horizontal = 1;
place = (427,31);
type = Stem;
},
{
horizontal = 1;
place = (166,34);
type = Stem;
},
{
horizontal = 1;
place = (-9,80);
type = Stem;
},
{
horizontal = 1;
place = (-238,54);
type = Stem;
},
{
place = (300,79);
type = Stem;
},
{
place = (58,79);
type = Stem;
}
);
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(337,416,l),
(312,435,l),
(266,453,l),
(224,458,l),
(176,452,l),
(132,435,l),
(95,408,l),
(69,366,l),
(58,309,l),
(68,250,l),
(90,217,l),
(156,172,l),
(73,94,l),
(71,81,l),
(84,42,l),
(104,21,l),
(83,-1,l),
(33,-61,l),
(26,-103,l),
(34,-153,l),
(54,-181,l),
(89,-215,l),
(130,-234,l),
(193,-238,l),
(260,-232,l),
(314,-212,l),
(383,-162,l),
(416,-126,l),
(437,-91,l),
(451,-26,l),
(445,10,l),
(426,39,l),
(395,58,l),
(358,67,l),
(311,71,l),
(174,79,l),
(164,86,l),
(155,105,l),
(169,134,l),
(202,166,l),
(271,171,l),
(315,190,l),
(357,234,l),
(375,277,l),
(379,310,l),
(373,352,l),
(361,378,l),
(463,377,l),
(463,416,l),
(463,416,l)
);
},
{
closed = 1;
nodes = (
(212,427,l),
(234,424,l),
(266,407,l),
(289,368,l),
(300,301,l),
(295,263,l),
(284,238,l),
(265,214,l),
(221,200,l),
(180,212,l),
(160,233,l),
(144,268,l),
(137,325,l),
(145,372,l),
(162,403,l),
(178,416,l),
(178,416,l)
);
},
{
closed = 1;
nodes = (
(131,7,l),
(155,0,l),
(248,-10,l),
(311,-16,l),
(354,-27,l),
(373,-53,l),
(382,-82,l),
(370,-122,l),
(356,-144,l),
(315,-170,l),
(245,-183,l),
(182,-175,l),
(143,-155,l),
(118,-133,l),
(100,-75,l),
(110,-35,l),
(110,-35,l)
);
}
);
width = 463;
}
);
},
{
glyphname = g.004;
lastChange = "2025-01-13 19:00:14 +0000";
layers = (
{
hints = (
{
horizontal = 1;
place = (440,22);
type = Stem;
},
{
horizontal = 1;
place = (383,42);
type = Stem;
},
{
horizontal = 1;
place = (141,22);
type = Stem;
},
{
horizontal = 1;
place = (-18,86);
type = Stem;
},
{
horizontal = 1;
place = (-233,29);
type = Stem;
},
{
place = (317,104);
type = Stem;
},
{
place = (29,108);
type = Stem;
}
);
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(213,67,l),
(179,68,l),
(147,82,l),
(138,101,l),
(142,113,l),
(156,128,l),
(220,142,l),
(293,150,l),
(328,161,l),
(362,185,l),
(392,214,l),
(410,246,l),
(421,300,l),
(415,341,l),
(406,364,l),
(405,370,l),
(408,377,l),
(421,382,l),
(434,383,l),
(477,383,l),
(470,414,l),
(453,425,l),
(424,423,l),
(383,423,l),
(351,426,l),
(323,439,l),
(287,454,l),
(228,461,l),
(173,455,l),
(122,439,l),
(78,408,l),
(46,363,l),
(32,330,l),
(28,293,l),
(32,255,l),
(63,205,l),
(113,164,l),
(136,146,l),
(123,137,l),
(77,120,l),
(38,100,l),
(33,85,l),
(44,55,l),
(70,30,l),
(90,12,l),
(112,-12,l),
(100,-23,l),
(39,-61,l),
(9,-97,l),
(4,-125,l),
(11,-156,l),
(27,-186,l),
(52,-206,l),
(115,-229,l),
(198,-235,l),
(274,-230,l),
(334,-214,l),
(416,-161,l),
(460,-115,l),
(472,-87,l),
(478,-49,l),
(475,-22,l),
(454,18,l),
(423,43,l),
(388,57,l),
(309,66,l),
(309,66,l)
);
},
{
closed = 1;
nodes = (
(97,-92,l),
(116,-50,l),
(138,-25,l),
(156,-21,l),
(183,-24,l),
(335,-34,l),
(368,-50,l),
(384,-71,l),
(393,-101,l),
(385,-136,l),
(362,-163,l),
(302,-197,l),
(238,-208,l),
(199,-206,l),
(163,-194,l),
(131,-175,l),
(106,-144,l),
(106,-144,l)
);
},
{
closed = 1;
nodes = (
(137,298,l),
(146,364,l),
(160,393,l),
(183,420,l),
(206,433,l),
(227,437,l),
(255,429,l),
(276,415,l),
(301,385,l),
(315,330,l),
(317,291,l),
(311,241,l),
(299,207,l),
(273,175,l),
(231,161,l),
(209,164,l),
(181,178,l),
(151,219,l),
(151,219,l)
);
}
);
width = 480;
}
);
},
{
glyphname = g.005;
lastChange = "2025-01-13 19:00:14 +0000";
layers = (
{
hints = (
{
horizontal = 1;
place = (435,27);
type = Stem;
},
{
horizontal = 1;
place = (376,45);
type = Stem;
},
{
horizontal = 1;
place = (159,24);
type = Stem;
},
{
horizontal = 1;
place = (-31,78);
type = Stem;
},
{
horizontal = 1;
place = (-270,32);
type = Stem;
},
{
place = (323,75);
type = Stem;
},
{
place = (46,76);
type = Stem;
}
);
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(416,421,l),
(359,421,l),
(285,452,l),
(219,462,l),
(168,454,l),
(133,438,l),
(96,408,l),
(62,367,l),
(50,338,l),
(48,300,l),
(50,278,l),
(71,229,l),
(114,186,l),
(139,175,l),
(158,168,l),
(135,149,l),
(109,131,l),
(83,111,l),
(61,97,l),
(54,75,l),
(57,56,l),
(76,10,l),
(92,-6,l),
(126,-25,l),
(146,-35,l),
(132,-44,l),
(102,-68,l),
(45,-110,l),
(39,-139,l),
(44,-162,l),
(49,-183,l),
(60,-201,l),
(99,-238,l),
(134,-258,l),
(189,-269,l),
(240,-274,l),
(290,-271,l),
(342,-254,l),
(407,-218,l),
(435,-190,l),
(467,-135,l),
(472,-97,l),
(469,-70,l),
(463,-42,l),
(430,4,l),
(381,36,l),
(329,43,l),
(278,42,l),
(263,41,l),
(246,40,l),
(226,38,l),
(200,38,l),
(166,44,l),
(133,64,l),
(125,90,l),
(149,124,l),
(185,152,l),
(201,154,l),
(229,154,l),
(279,163,l),
(326,185,l),
(355,214,l),
(392,267,l),
(398,324,l),
(392,369,l),
(447,371,l),
(469,371,l),
(473,399,l),
(473,412,l),
(465,416,l),
(465,416,l)
);
},
{
closed = 1;
nodes = (
(213,430,l),
(261,418,l),
(289,397,l),
(319,340,l),
(324,300,l),
(320,265,l),
(300,217,l),
(281,194,l),
(244,180,l),
(232,178,l),
(190,185,l),
(166,202,l),
(151,224,l),
(136,251,l),
(125,310,l),
(123,326,l),
(130,371,l),
(134,380,l),
(143,394,l),
(168,415,l),
(168,415,l)
);
},
{
closed = 1;
nodes = (
(271,-36,l),
(293,-38,l),
(365,-52,l),
(386,-72,l),
(403,-123,l),
(392,-176,l),
(380,-192,l),
(363,-214,l),
(340,-226,l),
(310,-242,l),
(265,-248,l),
(192,-238,l),
(164,-226,l),
(130,-191,l),
(116,-161,l),
(113,-140,l),
(128,-91,l),
(181,-52,l),
(212,-47,l),
(245,-47,l),
(245,-47,l)
);
}
);
width = 466;
}
);
},
{
glyphname = g.006;
lastChange = "2025-01-13 19:00:14 +0000";
layers = (
{
hints = (
{
horizontal = 1;
place = (441,26);
type = Stem;
},
{
horizontal = 1;
place = (363,50);
type = Stem;
},
{
horizontal = 1;
place = (123,28);
type = Stem;
},
{
horizontal = 1;
place = (-32,71);
type = Stem;
},
{
horizontal = 1;
place = (-278,36);
type = Stem;
},
{
place = (314,71);
type = Stem;
},
{
place = (50,79);
type = Stem;
},
{
place = (-36,73);
type = Stem;
}
);
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(88,-25,l),
(36,-54,l),
(3,-84,l),
(-31,-141,l),
(-36,-177,l),
(-27,-219,l),
(-2,-242,l),
(51,-271,l),
(141,-278,l),
(192,-276,l),
(303,-249,l),
(363,-219,l),
(412,-172,l),
(426,-144,l),
(436,-97,l),
(427,-54,l),
(409,-23,l),
(367,9,l),
(338,21,l),
(287,31,l),
(243,35,l),
(186,35,l),
(119,43,l),
(101,74,l),
(111,102,l),
(131,117,l),
(151,121,l),
(212,121,l),
(293,137,l),
(345,181,l),
(359,206,l),
(381,273,l),
(383,311,l),
(385,332,l),
(398,354,l),
(444,361,l),
(479,366,l),
(484,377,l),
(484,385,l),
(462,409,l),
(432,412,l),
(362,416,l),
(339,430,l),
(312,444,l),
(286,455,l),
(225,465,l),
(186,461,l),
(122,432,l),
(97,408,l),
(65,364,l),
(50,294,l),
(55,245,l),
(79,197,l),
(123,143,l),
(36,102,l),
(18,80,l),
(32,47,l),
(60,2,l),
(60,2,l)
);
},
{
closed = 1;
nodes = (
(209,440,l),
(254,432,l),
(281,408,l),
(290,394,l),
(304,354,l),
(314,292,l),
(309,245,l),
(296,198,l),
(270,167,l),
(247,153,l),
(223,150,l),
(194,155,l),
(168,175,l),
(143,212,l),
(129,297,l),
(133,349,l),
(138,377,l),
(168,423,l),
(168,423,l)
);
},
{
closed = 1;
nodes = (
(161,-33,l),
(264,-44,l),
(333,-59,l),
(368,-77,l),
(384,-116,l),
(374,-150,l),
(360,-172,l),
(341,-190,l),
(324,-203,l),
(269,-228,l),
(218,-239,l),
(153,-244,l),
(103,-240,l),
(65,-221,l),
(41,-188,l),
(36,-161,l),
(42,-130,l),
(74,-81,l),
(105,-51,l),
(105,-51,l)
);
}
);
width = 483;
}
);
},
{
glyphname = g.007;
lastChange = "2025-01-13 19:00:14 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(495.333,388,o),
(501,391.667,o),
(501,399,cs),
(501,411,o),
(498.333,419.667,o),
(493,425,cs),
(491,427,o),
(484,428,o),
(472,428,cs),
(401,428,ls),
(388.333,428,o),
(374,432.333,o),
(358,441,cs),
(327.333,456.333,o),
(292,464,o),
(252,464,cs),
(140,464,o),
(53,394.667,o),
(53,304,cs),
(53,250,o),
(82,209.333,o),
(140,182,cs),
(155.333,174.667,o),
(163,170,o),
(163,168,cs),
(163,165.333,o),
(158,162,o),
(148,158,cs),
(78,134,ls),
(63.333,128.667,o),
(56,120,o),
(56,108,cs),
(56,88,o),
(74.667,65,o),
(112,39,cs),
(128,27.667,o),
(136,20.667,o),
(136,18,cs),
(136,14.667,o),
(129.333,9.333,o),
(116,2,cs),
(84.667,-14.667,o),
(64.667,-26.667,o),
(56,-34,cs),
(36.667,-50,o),
(27,-70,o),
(27,-94,cs),
(27,-155.333,o),
(102.333,-197,o),
(217,-197,cs),
(373,-197,o),
(505,-113.333,o),
(505,-16,cs),
(505,50.667,o),
(439,92,o),
(335,92,cs),
(211,92,ls),
(179.667,92,o),
(164,102,o),
(164,122,cs),
(164,137.333,o),
(178,147.667,o),
(206,153,cs),
(237.333,158.333,o),
(268.667,163.333,o),
(300,168,cs),
(342,176,o),
(374.333,189.667,o),
(397,209,cs),
(431.667,237.667,o),
(449,270.667,o),
(449,308,cs),
(449,330.667,o),
(444,352,o),
(434,372,cs),
(432,375.333,o),
(431,378.333,o),
(431,381,cs),
(431,385.667,o),
(437,388,o),
(449,388,cs),
(484,388,l),
(484,388,l)
);
},
{
closed = 1;
nodes = (
(306.333,442,o),
(343,387.667,o),
(343,309,cs),
(343,231.667,o),
(308,182,o),
(256,182,cs),
(198.667,182,o),
(159,233.667,o),
(159,311,cs),
(159,387,o),
(198.333,442,o),
(253,442,cs)
);
},
{
closed = 1;
nodes = (
(375.667,6.333,o),
(419,-18,o),
(419,-68,cs),
(419,-122.667,o),
(349.333,-168,o),
(260,-168,cs),
(180,-168,o),
(122,-126.333,o),
(122,-69,cs),
(122,-33,o),
(152.667,8,o),
(178,8,cs),
(183.333,8,o),
(192.333,7.333,o),
(205,6,cs),
(217.667,4.667,o),
(227,4,o),
(233,4,cs),
(289,5,l),
(289,5,l)
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */
10
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 3 values pushed */
79 27 13
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
79
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 3 values pushed */
7 69 13
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
7
SRP0[ ]	/* SetRefPoint0 */
NPUSHW[ ]	/* 21 values pushed */
102 79 118 79 134 79 150 79 166 79 182 79 198 79 214 79 230 79 246 79 10
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 7 values pushed */
6 79 22 79 38 79 3
DELTAP2[ ]	/* DeltaExceptionP2 */
NPUSHW[ ]	/* 5 values pushed */
53 79 69 79 2
DELTAP2[ ]	/* DeltaExceptionP2 */
PUSHW[ ]	/* 3 values pushed */
46 27 79
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHW[ ]	/* 1 value pushed */
46
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
63
MDRP[11100]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
15
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
15
MDAP[1]	/* MoveDirectAbsPt */
NPUSHW[ ]	/* 5 values pushed */
58 69 74 69 2
DELTAP2[ ]	/* DeltaExceptionP2 */
NPUSHW[ ]	/* 21 values pushed */
105 69 121 69 137 69 153 69 169 69 185 69 201 69 217 69 233 69 249 69 10
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 7 values pushed */
9 69 25 69 41 69 3
DELTAP2[ ]	/* DeltaExceptionP2 */
PUSHW[ ]	/* 3 values pushed */
85 69 7
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHW[ ]	/* 1 value pushed */
85
MDAP[1]	/* MoveDirectAbsPt */
NPUSHW[ ]	/* 5 values pushed */
58 85 74 85 2
DELTAP2[ ]	/* DeltaExceptionP2 */
NPUSHW[ ]	/* 21 values pushed */
105 85 121 85 137 85 153 85 169 85 185 85 201 85 217 85 233 85 249 85 10
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 7 values pushed */
9 85 25 85 41 85 3
DELTAP2[ ]	/* DeltaExceptionP2 */
PUSHW[ ]	/* 1 value pushed */
21
MDRP[11100]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
46
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
37
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
37
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
63
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
42
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
42
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
21
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
58
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
58
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
21
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
88
MDRP[11100]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
37
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
49
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
49 42
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 3 values pushed */
82 24 13
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
82
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 3 values pushed */
54 0 13
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
54
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 3 values pushed */
66 72 13
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
66
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
72
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
18
MDRP[11100]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
49
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
60
MDRP[11100]	/* MoveDirectRelPt */
NPUSHW[ ]	/* 5 values pushed */
57 60 73 60 2
DELTAP2[ ]	/* DeltaExceptionP2 */
NPUSHW[ ]	/* 21 values pushed */
104 60 120 60 136 60 152 60 168 60 184 60 200 60 216 60 232 60 248 60 10
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 7 values pushed */
8 60 24 60 40 60 3
DELTAP2[ ]	/* DeltaExceptionP2 */
PUSHW[ ]	/* 1 value pushed */
72
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
76
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
76
MDAP[1]	/* MoveDirectAbsPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 522;
}
);
note = g;
},
{
glyphname = g.008;
lastChange = "2025-01-13 19:00:14 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(139,-44.667,o),
(117.333,-60,o),
(74,-86,cs),
(48,-102,o),
(35,-119.667,o),
(35,-139,cs),
(35,-158.333,o),
(39,-175.333,o),
(47,-190,cs),
(80.333,-250,o),
(134.333,-280,o),
(245,-280,cs),
(370.333,-280,o),
(478,-197.333,o),
(478,-100,cs),
(478,-77.333,o),
(475,-57.333,o),
(469,-40,cs),
(456.333,-7.333,o),
(431.333,17.333,o),
(394,34,cs),
(376.667,42,o),
(346.333,46,o),
(303,46,cs),
(293,46,o),
(278.833,44.833,o),
(260.5,42.5,cs),
(242.167,40.167,o),
(223.667,38.333,o),
(205,37,cs),
(182.333,37,o),
(162,43,o),
(144,55,cs),
(131.333,63.667,o),
(125,75.667,o),
(125,91,cs),
(125,112.333,o),
(174.667,157,o),
(200,157,cs),
(202.667,157,o),
(206.333,156.667,o),
(211,156,cs),
(215.667,155.333,o),
(219.667,155,o),
(223,155,cs),
(261.667,155,o),
(296.667,166.667,o),
(328,190,cs),
(378,227.333,o),
(403,270.333,o),
(403,319,cs),
(403,343.667,o),
(401.667,359,o),
(399,365,c),
(397,367,o),
(396,368.667,o),
(396,370,cs),
(396,374,o),
(405,375.667,o),
(423,375,cs),
(449,374,ls),
(466.333,372.667,o),
(476.333,372.667,o),
(479,374,cs),
(485.667,376.667,o),
(489,384.667,o),
(489,398,cs),
(489,410,o),
(485.833,417.167,o),
(479.5,419.5,cs),
(473.167,421.833,o),
(452,423,o),
(416,423,c),
(399,420,ls),
(393,419.333,o),
(385.333,419,o),
(376,419,cs),
(369.333,419,o),
(362,421.333,o),
(354,426,cs),
(305.333,452.667,o),
(259.667,466,o),
(217,466,cs),
(131.667,466,o),
(40,383.667,o),
(40,305,cs),
(40,258.333,o),
(73.667,198.333,o),
(111,181,cs),
(151,164,l),
(151,163,l),
(148.333,159.667,o),
(139.667,152.667,o),
(125,142,cs),
(92.333,119.333,o),
(71.5,103.667,o),
(62.5,95,cs),
(53.5,86.333,o),
(49,77.667,o),
(49,69,cs),
(49,44.333,o),
(57,22,o),
(73,2,cs),
(85.667,-13.333,o),
(105.667,-26,o),
(133,-36,cs),
(137,-38,o),
(139,-39.333,o),
(139,-40,cs)
);
},
{
closed = 1;
nodes = (
(284.667,-38,o),
(290.667,-37.667,o),
(298,-37,cs),
(305,-37,ls),
(366.333,-37,o),
(406,-71.333,o),
(406,-126,cs),
(406,-191.333,o),
(342.667,-246,o),
(264,-246,cs),
(174.667,-246,o),
(109,-198.667,o),
(109,-132,cs),
(109,-107.333,o),
(124.667,-83.667,o),
(156,-61,cs),
(175.333,-47,o),
(190.667,-40,o),
(202,-40,cs),
(216.667,-40,o),
(229,-39.667,o),
(239,-39,cs),
(249,-38.333,o),
(257.333,-38,o),
(264,-38,cs),
(280,-38,l),
(280,-38,l)
);
},
{
closed = 1;
nodes = (
(278.333,435,o),
(323,381,o),
(323,305,cs),
(323,277,o),
(319,254.667,o),
(311,238,cs),
(293,200,o),
(264.667,181,o),
(226,181,cs),
(199.333,181,o),
(176.667,191,o),
(158,211,cs),
(139.333,231,o),
(120,286,o),
(120,322,cs),
(120,397.333,o),
(152.333,435,o),
(217,435,cs)
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */
10
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 3 values pushed */
83 16 13
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
83
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 3 values pushed */
40 106 13
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
40
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
16
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
71
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
71
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
40
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
63
MDRP[11100]	/* MoveDirectRelPt */
PUSHW[ ]	/* 3 values pushed */
12 71 63
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHW[ ]	/* 1 value pushed */
40
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
36
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
36
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
16
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
97
MDRP[11100]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
50
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
50
MDAP[1]	/* MoveDirectAbsPt */
NPUSHW[ ]	/* 21 values pushed */
102 83 118 83 134 83 150 83 166 83 182 83 198 83 214 83 230 83 246 83 10
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 7 values pushed */
6 83 22 83 38 83 3
DELTAP2[ ]	/* DeltaExceptionP2 */
NPUSHW[ ]	/* 5 values pushed */
53 83 69 83 2
DELTAP2[ ]	/* DeltaExceptionP2 */
PUSHW[ ]	/* 1 value pushed */
40
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
89
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
89
MDAP[1]	/* MoveDirectAbsPt */
NPUSHW[ ]	/* 5 values pushed */
58 106 74 106 2
DELTAP2[ ]	/* DeltaExceptionP2 */
NPUSHW[ ]	/* 21 values pushed */
105 106 121 106 137 106 153 106 169 106 185 106 201 106 217 106 233 106 249 106 10
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 7 values pushed */
9 106 25 106 41 106 3
DELTAP2[ ]	/* DeltaExceptionP2 */
PUSHW[ ]	/* 1 value pushed */
40
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
110
MDRP[11100]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
37
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
19
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
19 42
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 3 values pushed */
86 66 13
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
86
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 3 values pushed */
57 92 13
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
57
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 3 values pushed */
102 44 13
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
102
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 3 values pushed */
12 44 102
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHW[ ]	/* 1 value pushed */
44
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
47
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
47
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
92
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
54
MDRP[11100]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
92
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
75
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
75
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
93
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
76
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
76
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
92
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
79
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
79
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
19
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
95
MDRP[11100]	/* MoveDirectRelPt */
NPUSHW[ ]	/* 5 values pushed */
57 95 73 95 2
DELTAP2[ ]	/* DeltaExceptionP2 */
NPUSHW[ ]	/* 21 values pushed */
104 95 120 95 136 95 152 95 168 95 184 95 200 95 216 95 232 95 248 95 10
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 7 values pushed */
8 95 24 95 40 95 3
DELTAP2[ ]	/* DeltaExceptionP2 */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 489;
}
);
note = g;
},
{
glyphname = g.009;
lastChange = "2025-01-13 19:00:14 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(468.333,380.667,o),
(473.667,380,o),
(477,380,cs),
(488.333,380,o),
(494,386.333,o),
(494,399,cs),
(494,414,ls),
(494,424.667,o),
(489.667,430,o),
(481,430,cs),
(372,424,l),
(336.667,452,o),
(296.333,466,o),
(251,466,cs),
(149.667,466,o),
(74,392.333,o),
(74,295,cs),
(74,226.333,o),
(103.667,175.667,o),
(163,143,c),
(107,114,ls),
(67.667,94.667,o),
(48,75.333,o),
(48,56,cs),
(48,17.333,o),
(80,-7.667,o),
(144,-19,c),
(58.667,-60.333,o),
(31,-89.667,o),
(31,-135,cs),
(31,-196.333,o),
(104.333,-238,o),
(219,-238,cs),
(371,-238,o),
(479,-162.333,o),
(479,-57,cs),
(479,9.667,o),
(430.333,50,o),
(349,50,c),
(202,43,l),
(193,43,ls),
(145,43,o),
(121,53.667,o),
(121,75,cs),
(121,83.667,o),
(131.333,95,o),
(152,109,cs),
(186,131,l),
(206,126.333,o),
(224,124,o),
(240,124,cs),
(348,124,o),
(426,197,o),
(426,297,cs),
(426,331,o),
(416.667,364.333,o),
(398,397,c),
(461,382,l),
(461,382,l)
);
},
{
closed = 1;
nodes = (
(301.667,442,o),
(351,363,o),
(351,263,cs),
(351,195,o),
(318.667,153,o),
(268,153,cs),
(240.667,153,o),
(218.333,163.333,o),
(201,184,cs),
(165.667,225.333,o),
(148,276.667,o),
(148,338,cs),
(148,399.333,o),
(185.667,442,o),
(239,442,cs)
);
},
{
closed = 1;
nodes = (
(391,-18,o),
(428,-41,o),
(428,-87,cs),
(428,-153.667,o),
(348,-210,o),
(248,-210,cs),
(169.333,-210,o),
(103,-165,o),
(103,-113,cs),
(103,-77,o),
(130.667,-47,o),
(186,-23,c),
(296,-18,l),
(317,-18,l),
(317,-18,l)
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */
10
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 3 values pushed */
63 24 13
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
63
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 3 values pushed */
3 57 13
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
3
SRP0[ ]	/* SetRefPoint0 */
NPUSHW[ ]	/* 5 values pushed */
58 57 74 57 2
DELTAP2[ ]	/* DeltaExceptionP2 */
NPUSHW[ ]	/* 21 values pushed */
105 57 121 57 137 57 153 57 169 57 185 57 201 57 217 57 233 57 249 57 10
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 7 values pushed */
9 57 25 57 41 57 3
DELTAP2[ ]	/* DeltaExceptionP2 */
PUSHW[ ]	/* 3 values pushed */
1 57 3
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHW[ ]	/* 1 value pushed */
18
MDRP[11100]	/* MoveDirectRelPt */
NPUSHW[ ]	/* 21 values pushed */
102 63 118 63 134 63 150 63 166 63 182 63 198 63 214 63 230 63 246 63 10
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 7 values pushed */
6 63 22 63 38 63 3
DELTAP2[ ]	/* DeltaExceptionP2 */
NPUSHW[ ]	/* 5 values pushed */
53 63 69 63 2
DELTAP2[ ]	/* DeltaExceptionP2 */
PUSHW[ ]	/* 3 values pushed */
34 24 63
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHW[ ]	/* 1 value pushed */
34
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
50
MDRP[11100]	/* MoveDirectRelPt */
PUSHW[ ]	/* 3 values pushed */
27 34 50
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHW[ ]	/* 3 values pushed */
32 24 18
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHW[ ]	/* 1 value pushed */
3
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
69
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
69
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
3
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
73
MDRP[11100]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
33
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
37
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
37 38
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
33
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
21
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
21 36
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
33
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
27
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
27 34
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
33
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
60
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
60 34
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 3 values pushed */
54 6 13
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
54
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 3 values pushed */
1 21 37
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHW[ ]	/* 1 value pushed */
27
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
13
MDRP[11100]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
15
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
15
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 3 values pushed */
32 6 54
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHW[ ]	/* 1 value pushed */
37
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
47
MDRP[11100]	/* MoveDirectRelPt */
NPUSHW[ ]	/* 5 values pushed */
57 47 73 47 2
DELTAP2[ ]	/* DeltaExceptionP2 */
NPUSHW[ ]	/* 21 values pushed */
104 47 120 47 136 47 152 47 168 47 184 47 200 47 216 47 232 47 248 47 10
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 7 values pushed */
8 47 24 47 40 47 3
DELTAP2[ ]	/* DeltaExceptionP2 */
PUSHW[ ]	/* 1 value pushed */
21
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
66
MDRP[11100]	/* MoveDirectRelPt */
NPUSHW[ ]	/* 21 values pushed */
103 66 119 66 135 66 151 66 167 66 183 66 199 66 215 66 231 66 247 66 10
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 7 values pushed */
7 66 23 66 39 66 3
DELTAP2[ ]	/* DeltaExceptionP2 */
NPUSHW[ ]	/* 5 values pushed */
54 66 70 66 2
DELTAP2[ ]	/* DeltaExceptionP2 */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 516;
}
);
note = g;
},
{
glyphname = g.010;
lastChange = "2025-01-13 19:00:14 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(338,417,l),
(320.667,434.333,o),
(290,459,o),
(226,459,cs),
(126.895,459,o),
(57,393.217,o),
(57,310,cs),
(57,221.002,o),
(123.639,186.383,o),
(156,172,c),
(74,93,l),
(72.667,87.667,o),
(72,84.333,o),
(72,79,cs),
(72,51,o),
(90,34.333,o),
(106,21,c),
(84,-1,ls),
(56.855,-30.407,o),
(55.446,-33.405,o),
(34,-62,c),
(28.667,-76.667,o),
(26,-88,o),
(26,-104,cs),
(26,-176.61,o),
(88.389,-239,o),
(195,-239,cs),
(340.222,-239,o),
(453,-120.221,o),
(453,-27,cs),
(453,63.449,o),
(358.87,66.313,o),
(332,69,cs),
(341.886,67.902,o),
(199.086,68.392,o),
(179,77,c),
(163,81.667,o),
(155,91,o),
(155,105,cs),
(155,122.948,o),
(167.088,131.549,o),
(204,166,c),
(234.667,166,o),
(283.333,166,o),
(326,198,cs),
(359.333,223.333,o),
(381,265.333,o),
(381,312,cs),
(381,342.667,o),
(372.333,361.333,o),
(363,380,c),
(465,379,l),
(465,417,l),
(465,417,l)
);
},
{
closed = 1;
nodes = (
(260.849,431.815,o),
(302,388.001,o),
(302,302,cs),
(302,247.333,o),
(276.667,200,o),
(222,200,cs),
(163.52,200,o),
(136,261.518,o),
(136,326,cs),
(136,391.333,o),
(170.333,426.333,o),
(213,429,cs)
);
},
{
closed = 1;
nodes = (
(163.667,-3.667,o),
(195.667,-5.333,o),
(229,-8,cs),
(239.667,-9.333,o),
(250.167,-10,o),
(260.5,-10,cs),
(270.833,-10,o),
(281.667,-10.667,o),
(293,-12,cs),
(327.667,-14.667,o),
(361.333,-19.667,o),
(376,-53,cs),
(379.333,-60.333,o),
(381.333,-66.667,o),
(382,-72,cs),
(382.667,-77.333,o),
(383,-81,o),
(383,-83,cs),
(383,-146.134,o),
(317.478,-185,o),
(246,-185,cs),
(154,-185,o),
(101,-138,o),
(101,-74,cs),
(101,-36.667,o),
(118.333,-13,o),
(133,7,c)
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */
71 2 58 4
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 4 values pushed */
4 2 79 4
CALL[ ]	/* CallFunction */
NPUSHW[ ]	/* 5 values pushed */
138 79 154 79 2
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 17 values pushed */
9 79 25 79 41 79 57 79 73 79 89 79 105 79 121 79 8
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHW[ ]	/* 3 values pushed */
1 79 4
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
NPUSHW[ ]	/* 17 values pushed */
6 71 22 71 38 71 54 71 70 71 86 71 102 71 118 71 8
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 5 values pushed */
133 71 149 71 2
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHW[ ]	/* 3 values pushed */
49 58 71
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHW[ ]	/* 1 value pushed */
49
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 2 values pushed */
15 2
MIRP[11100]	/* MoveIndirectRelPt */
PUSHW[ ]	/* 1 value pushed */
4
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
27 2
MIRP[11100]	/* MoveIndirectRelPt */
PUSHW[ ]	/* 3 values pushed */
87 58 71
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHW[ ]	/* 1 value pushed */
87
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 2 values pushed */
37 2
MIRP[11100]	/* MoveIndirectRelPt */
PUSHW[ ]	/* 3 values pushed */
53 37 27
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHW[ ]	/* 1 value pushed */
4
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
95
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
95
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
4
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
108
MDRP[11100]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
0
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
63
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
63 14
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
32
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
32 6
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
101
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
101 4
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
104
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
104 4
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
45
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
45 4
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 4 values pushed */
67 1 0 4
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 4 values pushed */
76 1 10 4
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 3 values pushed */
53 10 76
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHW[ ]	/* 1 value pushed */
63
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
68 1
MIRP[11100]	/* MoveIndirectRelPt */
NPUSHW[ ]	/* 5 values pushed */
153 68 169 68 2
DELTAP2[ ]	/* DeltaExceptionP2 */
NPUSHW[ ]	/* 33 values pushed */
8 68 24 68 40 68 56 68 72 68 88 68 104 68 120 68 136 68 152 68 168 68 184 68 200 68 216 68 232 68 248 68 16
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 19 values pushed */
8 68 24 68 40 68 56 68 72 68 88 68 104 68 120 68 136 68 9
DELTAP2[ ]	/* DeltaExceptionP2 */
PUSHW[ ]	/* 1 value pushed */
32
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
90 1
MIRP[11100]	/* MoveIndirectRelPt */
NPUSHW[ ]	/* 33 values pushed */
7 90 23 90 39 90 55 90 71 90 87 90 103 90 119 90 135 90 151 90 167 90 183 90 199 90 215 90 231 90 247 90 16
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 19 values pushed */
7 90 23 90 39 90 55 90 71 90 87 90 103 90 119 90 135 90 9
DELTAP2[ ]	/* DeltaExceptionP2 */
NPUSHW[ ]	/* 5 values pushed */
150 90 166 90 2
DELTAP2[ ]	/* DeltaExceptionP2 */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 465;
}
);
note = g;
},
{
glyphname = g.011;
lastChange = "2025-01-13 19:00:14 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(392,407,l),
(360.667,444.333,o),
(315.667,463,o),
(257,463,cs),
(149,463,o),
(69,388.667,o),
(69,286,cs),
(69,226,o),
(95.333,178.333,o),
(148,143,c),
(133.333,137,o),
(123,132.667,o),
(117,130,cs),
(101.667,123.333,o),
(88.333,118,o),
(77,114,cs),
(56.333,107.333,o),
(46,92,o),
(46,68,cs),
(46,29.333,o),
(70.667,1.667,o),
(120,-15,c),
(41.333,-45.667,o),
(15,-73.667,o),
(15,-123,cs),
(15,-200.333,o),
(89,-248,o),
(213,-248,cs),
(373,-248,o),
(489,-175,o),
(489,-75,cs),
(489,-38.333,o),
(476.333,-10,o),
(451,10,cs),
(428.333,28,o),
(377,38.333,o),
(297,41,cs),
(235,44,ls),
(167,46,o),
(133,59.333,o),
(133,84,cs),
(133,90,o),
(135.667,95.333,o),
(141,100,cs),
(162.333,115.333,o),
(184.333,122.333,o),
(207,121,cs),
(214,120,l),
(228,120,ls),
(233.333,119.333,o),
(240.333,119,o),
(249,119,cs),
(357,119,o),
(428,190,o),
(428,294,cs),
(428,312.667,o),
(423.667,334.333,o),
(415,359,c),
(499,359,l),
(499,407,l),
(499,407,l)
);
},
{
closed = 1;
nodes = (
(311.667,431,o),
(342,385.333,o),
(342,294,cs),
(342,198.667,o),
(311.667,151,o),
(251,151,cs),
(192.333,151,o),
(157,203.667,o),
(157,285,cs),
(157,378.333,o),
(191,431,o),
(251,431,cs)
);
},
{
closed = 1;
nodes = (
(202.667,-23.667,o),
(332.667,-33.667,o),
(362,-39,cs),
(399.333,-46.333,o),
(418,-63.667,o),
(418,-91,cs),
(418,-131.667,o),
(395,-164.333,o),
(349,-189,cs),
(319.667,-205,o),
(277.333,-213,o),
(222,-213,cs),
(139.333,-213,o),
(82,-175.667,o),
(82,-121,cs),
(82,-77,o),
(133.333,-29,o),
(188,-25,cs)
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */
10
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 3 values pushed */
60 27 13
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
60
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 3 values pushed */
21 67 13
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
21
SRP0[ ]	/* SetRefPoint0 */
NPUSHW[ ]	/* 5 values pushed */
58 67 74 67 2
DELTAP2[ ]	/* DeltaExceptionP2 */
NPUSHW[ ]	/* 21 values pushed */
105 67 121 67 137 67 153 67 169 67 185 67 201 67 217 67 233 67 249 67 10
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 7 values pushed */
9 67 25 67 41 67 3
DELTAP2[ ]	/* DeltaExceptionP2 */
PUSHW[ ]	/* 3 values pushed */
3 67 21
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHW[ ]	/* 1 value pushed */
3
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
55
MDRP[11100]	/* MoveDirectRelPt */
NPUSHW[ ]	/* 5 values pushed */
58 55 74 55 2
DELTAP2[ ]	/* DeltaExceptionP2 */
NPUSHW[ ]	/* 21 values pushed */
105 55 121 55 137 55 153 55 169 55 185 55 201 55 217 55 233 55 249 55 10
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 7 values pushed */
9 55 25 55 41 55 3
DELTAP2[ ]	/* DeltaExceptionP2 */
PUSHW[ ]	/* 3 values pushed */
1 3 55
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
NPUSHW[ ]	/* 21 values pushed */
102 60 118 60 134 60 150 60 166 60 182 60 198 60 214 60 230 60 246 60 10
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 7 values pushed */
6 60 22 60 38 60 3
DELTAP2[ ]	/* DeltaExceptionP2 */
NPUSHW[ ]	/* 5 values pushed */
53 60 69 60 2
DELTAP2[ ]	/* DeltaExceptionP2 */
PUSHW[ ]	/* 3 values pushed */
40 27 60
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHW[ ]	/* 1 value pushed */
40
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
50
MDRP[11100]	/* MoveDirectRelPt */
PUSHW[ ]	/* 3 values pushed */
30 40 50
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHW[ ]	/* 3 values pushed */
38 40 50
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHW[ ]	/* 1 value pushed */
21
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
73
MDRP[11100]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
35
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
43
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
43 40
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
35
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
24
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
24 38
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 3 values pushed */
46 0 13
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
46
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 3 values pushed */
53 6 13
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
53
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
6
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
8
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
8
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
6
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
10
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
10
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 3 values pushed */
30 24 43
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHW[ ]	/* 3 values pushed */
38 6 53
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHW[ ]	/* 1 value pushed */
43
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
47
MDRP[11100]	/* MoveDirectRelPt */
NPUSHW[ ]	/* 5 values pushed */
57 47 73 47 2
DELTAP2[ ]	/* DeltaExceptionP2 */
NPUSHW[ ]	/* 21 values pushed */
104 47 120 47 136 47 152 47 168 47 184 47 200 47 216 47 232 47 248 47 10
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 7 values pushed */
8 47 24 47 40 47 3
DELTAP2[ ]	/* DeltaExceptionP2 */
PUSHW[ ]	/* 1 value pushed */
24
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
63
MDRP[11100]	/* MoveDirectRelPt */
NPUSHW[ ]	/* 21 values pushed */
103 63 119 63 135 63 151 63 167 63 183 63 199 63 215 63 231 63 247 63 10
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 7 values pushed */
7 63 23 63 39 63 3
DELTAP2[ ]	/* DeltaExceptionP2 */
NPUSHW[ ]	/* 5 values pushed */
54 63 70 63 2
DELTAP2[ ]	/* DeltaExceptionP2 */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 509;
}
);
note = g;
},
{
glyphname = i.001;
lastChange = "2025-01-13 19:00:14 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(116,750,o),
(87,728.667,o),
(87,690,cs),
(87,660.667,o),
(110.333,635,o),
(145,635,cs),
(175.667,635,o),
(204,653,o),
(204,693,cs),
(204,723.667,o),
(184,750,o),
(148,750,cs)
);
},
{
closed = 1;
nodes = (
(111,45.911,o),
(111.814,36.215,o),
(68,28,cs),
(44,25,l),
(37.333,18.333,o),
(39.333,-0.333,o),
(46,-3,c),
(78,-1,o),
(113.667,0,o),
(153,0,cs),
(191.667,0,o),
(225.333,-0.333,o),
(260,-3,c),
(266.667,-0.333,o),
(270,18.333,o),
(262,25,c),
(238,28,ls),
(196.292,35.82,o),
(195,43.413,o),
(195,127,cs),
(195,331,ls),
(195,377.667,o),
(196.333,432,o),
(199,472,c),
(197.667,476,o),
(194,478,o),
(188,478,c),
(165.013,464.208,o),
(88.991,427.907,o),
(71,423,c),
(68.333,421.667,o),
(67,418.333,o),
(67,413,cs),
(67,408.333,o),
(68,404.667,o),
(70,402,c),
(80,396,ls),
(110.936,375.376,o),
(111,368.378,o),
(111,325,cs),
(111,127,l),
(111,127,l)
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */
32 2 12 4
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
32
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
29
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
29
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 2 values pushed */
9 3
MIRP[11100]	/* MoveIndirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
0
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
0
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
0 14
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
42
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
42 4
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
45
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
45 4
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
47
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
47 4
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
6
MDRP[11100]	/* MoveDirectRelPt */
NPUSHW[ ]	/* 5 values pushed */
217 6 233 6 2
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 27 values pushed */
8 6 24 6 40 6 56 6 72 6 88 6 104 6 120 6 136 6 152 6 168 6 184 6 200 6 13
DELTAP1[ ]	/* DeltaExceptionP1 */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 291;
}
);
note = i;
},
{
glyphname = i.002;
lastChange = "2025-01-13 19:00:14 +0000";
layers = (
{
hints = (
{
horizontal = 1;
place = (636,101);
type = Stem;
},
{
horizontal = 1;
place = (-4,34);
type = Stem;
},
{
horizontal = 1;
place = (444,21);
target = up;
type = BottomGhost;
},
{
place = (102,78);
type = Stem;
}
);
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(166,465,l),
(46,408,l),
(43,378,l),
(80,372,l),
(100,349,l),
(103,312,l),
(103,109,l),
(96,49,l),
(72,35,l),
(33,30,l),
(33,-4,l),
(141,1,l),
(247,-6,l),
(247,31,l),
(193,41,l),
(182,69,l),
(181,100,l),
(181,369,l),
(182,412,l),
(186,457,l),
(186,457,l)
);
},
{
closed = 1;
nodes = (
(97,651,l),
(133,636,l),
(168,650,l),
(184,686,l),
(171,720,l),
(133,737,l),
(97,724,l),
(83,687,l),
(83,687,l)
);
}
);
width = 274;
}
);
},
{
glyphname = i.003;
lastChange = "2025-01-13 19:00:14 +0000";
layers = (
{
hints = (
{
horizontal = 1;
place = (636,101);
type = Stem;
},
{
horizontal = 1;
place = (-4,34);
type = Stem;
},
{
horizontal = 1;
place = (444,21);
target = up;
type = BottomGhost;
},
{
place = (102,78);
type = Stem;
}
);
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(166,465,l),
(46,408,l),
(43,378,l),
(80,372,l),
(100,349,l),
(103,312,l),
(103,109,l),
(96,49,l),
(72,35,l),
(33,30,l),
(33,-4,l),
(141,1,l),
(247,-6,l),
(247,31,l),
(193,41,l),
(182,69,l),
(181,100,l),
(181,369,l),
(182,412,l),
(186,457,l),
(186,457,l)
);
},
{
closed = 1;
nodes = (
(97,651,l),
(133,636,l),
(168,650,l),
(184,686,l),
(171,720,l),
(133,737,l),
(97,724,l),
(83,687,l),
(83,687,l)
);
}
);
width = 274;
}
);
},
{
glyphname = i.004;
lastChange = "2025-01-13 19:00:14 +0000";
layers = (
{
hints = (
{
horizontal = 1;
place = (530,108);
type = Stem;
},
{
horizontal = 1;
place = (0,29);
type = Stem;
},
{
horizontal = 1;
place = (447,21);
target = up;
type = BottomGhost;
},
{
place = (86,92);
type = Stem;
}
);
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(86,168,l),
(83,68,l),
(76,48,l),
(47,32,l),
(27,29,l),
(13,27,l),
(11,17,l),
(16,4,l),
(27,2,l),
(56,4,l),
(136,7,l),
(196,4,l),
(214,4,l),
(234,0,l),
(248,4,l),
(253,13,l),
(246,26,l),
(212,32,l),
(196,37,l),
(187,47,l),
(180,66,l),
(178,174,l),
(180,334,l),
(181,399,l),
(183,438,l),
(180,458,l),
(171,465,l),
(148,451,l),
(64,403,l),
(33,392,l),
(22,381,l),
(36,367,l),
(67,360,l),
(82,337,l),
(87,309,l),
(87,309,l)
);
},
{
closed = 1;
nodes = (
(84,595,l),
(83,570,l),
(89,552,l),
(107,538,l),
(139,530,l),
(167,535,l),
(190,561,l),
(193,580,l),
(177,619,l),
(160,632,l),
(138,638,l),
(103,627,l),
(103,627,l)
);
}
);
width = 258;
}
);
},
{
glyphname = i.005;
lastChange = "2025-01-13 19:00:14 +0000";
layers = (
{
hints = (
{
horizontal = 1;
place = (650,113);
type = Stem;
},
{
horizontal = 1;
place = (0,32);
type = Stem;
},
{
place = (82,76);
type = Stem;
}
);
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(113,764,l),
(85,754,l),
(69,739,l),
(61,707,l),
(65,682,l),
(83,660,l),
(115,650,l),
(143,655,l),
(162,671,l),
(174,708,l),
(170,731,l),
(158,748,l),
(137,761,l),
(137,761,l)
);
},
{
closed = 1;
nodes = (
(159,413,l),
(155,461,l),
(139,455,l),
(126,450,l),
(108,442,l),
(89,434,l),
(68,427,l),
(51,420,l),
(38,416,l),
(24,404,l),
(25,389,l),
(39,387,l),
(44,383,l),
(74,373,l),
(82,339,l),
(87,305,l),
(83,281,l),
(88,261,l),
(83,223,l),
(87,183,l),
(82,146,l),
(87,119,l),
(82,99,l),
(79,50,l),
(64,37,l),
(32,32,l),
(9,30,l),
(7,11,l),
(8,3,l),
(20,2,l),
(25,3,l),
(43,2,l),
(81,3,l),
(135,6,l),
(201,3,l),
(218,2,l),
(234,10,l),
(235,20,l),
(228,32,l),
(217,34,l),
(204,35,l),
(171,46,l),
(160,83,l),
(160,178,l),
(158,250,l),
(159,333,l),
(159,333,l)
);
}
);
width = 233;
}
);
},
{
glyphname = i.006;
lastChange = "2025-01-13 19:00:14 +0000";
layers = (
{
hints = (
{
horizontal = 1;
place = (633,104);
type = Stem;
},
{
horizontal = 1;
place = (0,21);
target = up;
type = BottomGhost;
},
{
place = (80,75);
type = Stem;
}
);
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(121,736,l),
(94,727,l),
(76,707,l),
(71,681,l),
(76,658,l),
(90,644,l),
(122,633,l),
(146,638,l),
(163,654,l),
(174,683,l),
(172,697,l),
(147,727,l),
(147,727,l)
);
},
{
closed = 1;
nodes = (
(80,160,l),
(79,91,l),
(71,49,l),
(52,37,l),
(8,25,l),
(0,13,l),
(15,1,l),
(29,1,l),
(108,8,l),
(160,5,l),
(210,1,l),
(225,3,l),
(231,14,l),
(222,27,l),
(208,31,l),
(190,35,l),
(159,56,l),
(152,148,l),
(154,238,l),
(154,345,l),
(155,406,l),
(158,441,l),
(158,459,l),
(156,473,l),
(146,477,l),
(120,455,l),
(61,413,l),
(50,410,l),
(24,393,l),
(31,382,l),
(39,378,l),
(71,363,l),
(79,319,l),
(80,286,l),
(80,221,l),
(80,221,l)
);
}
);
width = 252;
}
);
},
{
glyphname = i.007;
lastChange = "2025-01-13 19:00:14 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(201,447.333,o),
(197,459,o),
(189,459,cs),
(185,459,o),
(175,452.333,o),
(159,439,cs),
(137,419.667,o),
(108,403.667,o),
(72,391,cs),
(56,385,o),
(46.5,381.167,o),
(43.5,379.5,cs),
(40.5,377.833,o),
(39,374.667,o),
(39,370,cs),
(39,362.667,o),
(45,358.333,o),
(57,357,cs),
(77.667,355.667,o),
(91.333,348.667,o),
(98,336,cs),
(102,328.667,o),
(104,313,o),
(104,289,cs),
(104,100,ls),
(104,37.333,o),
(100,31.167,o),
(60,26.5,cs),
(40,24.167,o),
(30,18.333,o),
(30,9,cs),
(30,1,o),
(35.333,-3,o),
(46,-3,cs),
(52.667,-3,o),
(58,-2.667,o),
(62,-2,cs),
(98.667,0,o),
(129,1,o),
(153,1,cs),
(171.667,1,o),
(193.833,0.333,o),
(219.5,-1,cs),
(245.167,-2.333,o),
(257.667,-3,o),
(257,-3,cs),
(268.333,-3,o),
(274,1,o),
(274,9,cs),
(274,33.171,o),
(219.979,19.423,o),
(207.5,41.5,cs),
(203.167,49.167,o),
(201,68.667,o),
(201,100,cs),
(201,424,l),
(201,424,l)
);
},
{
closed = 1;
nodes = (
(121.333,633,o),
(97,607.667,o),
(97,577,cs),
(97,546.333,o),
(122.333,522,o),
(153,522,cs),
(182.333,522,o),
(208,546.667,o),
(208,576,cs),
(208,608,o),
(182.667,633,o),
(152,633,cs)
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */
10
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 3 values pushed */
39 45 13
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
39
SRP0[ ]	/* SetRefPoint0 */
NPUSHW[ ]	/* 5 values pushed */
58 45 74 45 2
DELTAP2[ ]	/* DeltaExceptionP2 */
NPUSHW[ ]	/* 21 values pushed */
105 45 121 45 137 45 153 45 169 45 185 45 201 45 217 45 233 45 249 45 10
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 7 values pushed */
9 45 25 45 41 45 3
DELTAP2[ ]	/* DeltaExceptionP2 */
PUSHW[ ]	/* 1 value pushed */
45
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
1
MDRP[11100]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
45
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
20
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
20
MDAP[1]	/* MoveDirectAbsPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
37
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
36
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
36 44
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
37
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
7
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
7 38
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
37
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
10
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
10 38
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
37
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
12
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
12 38
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
37
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
14
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
14 38
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
36
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
42
MDRP[11100]	/* MoveDirectRelPt */
NPUSHW[ ]	/* 5 values pushed */
57 42 73 42 2
DELTAP2[ ]	/* DeltaExceptionP2 */
NPUSHW[ ]	/* 21 values pushed */
104 42 120 42 136 42 152 42 168 42 184 42 200 42 216 42 232 42 248 42 10
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 7 values pushed */
8 42 24 42 40 42 3
DELTAP2[ ]	/* DeltaExceptionP2 */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 289;
}
);
note = i;
},
{
glyphname = i.008;
lastChange = "2025-01-13 19:00:14 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(188,365,l),
(188,379,ls),
(188,421,o),
(187.667,445.833,o),
(187,453.5,cs),
(186.333,461.167,o),
(183.667,465,o),
(179,465,cs),
(172.333,465,o),
(156.667,459.333,o),
(132,448,cs),
(116,440,l),
(102,436,o),
(90,432,o),
(80,428,cs),
(64,422.667,o),
(54.333,418.833,o),
(51,416.5,cs),
(47.667,414.167,o),
(46,409.667,o),
(46,403,cs),
(46,395,o),
(56.333,387.833,o),
(77,381.5,cs),
(97.667,375.167,o),
(108,362.333,o),
(108,343,cs),
(108,327,o),
(108.333,314.667,o),
(109,306,cs),
(110.333,285.333,o),
(111,272.667,o),
(111,268,cs),
(110,241,ls),
(110,239,o),
(110,234.667,o),
(110,228,cs),
(110.667,219.333,o),
(111,211.333,o),
(111,204,cs),
(111,192,ls),
(111,184,o),
(110.667,176,o),
(110,168,cs),
(109.333,157.333,o),
(109,148,o),
(109,140,cs),
(110,108,l),
(109,93,l),
(110,68,ls),
(111.333,42,o),
(94.333,28.667,o),
(59,28,cs),
(46.333,28,o),
(38.833,27.333,o),
(36.5,26,cs),
(34.167,24.667,o),
(33,21,o),
(33,15,cs),
(33,-1,o),
(34.667,-3,o),
(52,-3,cs),
(48.667,-3,o),
(74,-2.333,o),
(128,-1,cs),
(168,0,ls),
(166.667,0,o),
(174.667,-0.333,o),
(192,-1,cs),
(224,-2.333,o),
(243,-3,o),
(249,-3,cs),
(259.667,-3,o),
(265,3,o),
(265,15,cs),
(265,24.333,o),
(258.667,29.667,o),
(246,31,cs),
(210,33,o),
(191.667,46.333,o),
(191,71,cs),
(190,127,l),
(189,142,l),
(191,183,ls),
(191.667,192.333,o),
(191.5,205.5,o),
(190.5,222.5,cs),
(189.5,239.5,o),
(189,251.333,o),
(189,258,cs),
(189,346,l),
(189,346,l)
);
},
{
closed = 1;
nodes = (
(112.333,715,o),
(85,688,o),
(85,652,cs),
(85,621.333,o),
(111.667,596,o),
(145,596,cs),
(178.333,596,o),
(204,622,o),
(204,654,cs),
(204,687.333,o),
(177.667,715,o),
(147,715,cs)
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */
10
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 3 values pushed */
64 70 13
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
64
SRP0[ ]	/* SetRefPoint0 */
NPUSHW[ ]	/* 21 values pushed */
102 64 118 64 134 64 150 64 166 64 182 64 198 64 214 64 230 64 246 64 10
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 7 values pushed */
6 64 22 64 38 64 3
DELTAP2[ ]	/* DeltaExceptionP2 */
NPUSHW[ ]	/* 5 values pushed */
53 64 69 64 2
DELTAP2[ ]	/* DeltaExceptionP2 */
PUSHW[ ]	/* 3 values pushed */
44 70 64
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHW[ ]	/* 1 value pushed */
44
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
59
MDRP[11100]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
0
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
0
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
59
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
3
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
3
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
59
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
5
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
5
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
44
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
27
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
27
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
44
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
29
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
29
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
44
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
32
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
32
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
44
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
34
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
34
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
44
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
37
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
37
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
44
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
39
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
39
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
44
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
42
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
42
MDAP[1]	/* MoveDirectAbsPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
37
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
12
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
12 38
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
37
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
14
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
14 38
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
37
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
16
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
16 38
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
37
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
19
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
19 38
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 3 values pushed */
61 67 13
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
61
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
12
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
8
MDRP[11100]	/* MoveDirectRelPt */
NPUSHW[ ]	/* 21 values pushed */
103 8 119 8 135 8 151 8 167 8 183 8 199 8 215 8 231 8 247 8 10
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 7 values pushed */
7 8 23 8 39 8 3
DELTAP2[ ]	/* DeltaExceptionP2 */
NPUSHW[ ]	/* 5 values pushed */
54 8 70 8 2
DELTAP2[ ]	/* DeltaExceptionP2 */
PUSHW[ ]	/* 1 value pushed */
25
MDRP[10000]	/* MoveDirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 288;
}
);
note = i;
},
{
glyphname = i.009;
lastChange = "2025-01-13 19:00:14 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(82.667,413,o),
(97.833,405.5,o),
(103.5,390.5,cs),
(109.167,375.5,o),
(112,337,o),
(112,275,cs),
(112,197,ls),
(112,134.333,o),
(110.667,89.333,o),
(108,62,cs),
(104,35.333,o),
(100.667,29.667,o),
(62,27,cs),
(26,24,l),
(29.333,18,o),
(31,13,o),
(31,9,cs),
(31,7,o),
(29.667,3,o),
(27,-3,c),
(60,-2,ls),
(84.667,-1.333,o),
(105.333,-0.333,o),
(122,1,cs),
(134.667,1.667,o),
(144,2,o),
(150,2,cs),
(156,2,o),
(165,1.667,o),
(177,1,cs),
(193.667,-0.333,o),
(214.333,-1.333,o),
(239,-2,cs),
(272,-3,l),
(270,3,o),
(269,7,o),
(269,9,cs),
(269,13,o),
(270.333,18,o),
(273,24,c),
(237,27,ls),
(201,29.667,o),
(195.667,35.667,o),
(193,57,cs),
(189,86.333,o),
(187,133,o),
(187,197,cs),
(187,275,ls),
(187,370.333,o),
(190.667,447.333,o),
(198,506,c),
(194,503.333,o),
(190.667,502,o),
(188,502,cs),
(186,502,o),
(182.667,503.333,o),
(178,506,c),
(156,459.333,o),
(114.667,436,o),
(54,436,cs),
(42,436,l),
(43.333,430,o),
(44,426.333,o),
(44,425,cs),
(44,423,o),
(43,419,o),
(41,413,c),
(58,413,l),
(58,413,l)
);
},
{
closed = 1;
nodes = (
(125.667,745,o),
(94,712.667,o),
(94,678,cs),
(94,652.667,o),
(114.333,632,o),
(141,632,cs),
(173,632,o),
(205,665,o),
(205,701,cs),
(205,725,o),
(184.333,745,o),
(159,745,cs)
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */
10
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 3 values pushed */
15 45 13
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
15
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
17
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
17
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
45
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
43
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
43
MDAP[1]	/* MoveDirectAbsPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
49
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
33
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
25
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
25 34
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
33
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
28
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
28 34
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
33
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
30
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
30 34
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
33
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
32
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
32 34
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
33
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
34
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
34 34
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 3 values pushed */
1 25 49
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHW[ ]	/* 3 values pushed */
12 25 49
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHW[ ]	/* 1 value pushed */
25
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
20
MDRP[11100]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
39
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
39
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
40
MDRP[10000]	/* MoveDirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 287;
}
);
note = i;
},
{
glyphname = i.010;
lastChange = "2025-01-13 19:00:14 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(99.942,380,o),
(103,357.616,o),
(103,313,cs),
(103,110,ls),
(103,40.918,o),
(99.711,32.668,o),
(33,30,c),
(33,-4,l),
(69,-1.333,o),
(105.333,1,o),
(140,1,cs),
(176,1,o),
(211,-1.333,o),
(247,-4,c),
(247,30,l),
(179.469,32.814,o),
(181,46.029,o),
(181,101,cs),
(181,370,ls),
(181,390.229,o),
(181.82,426.649,o),
(186,458,c),
(167,467,l),
(109.315,434.395,o),
(93.725,426.32,o),
(44,408,c),
(44,380,l),
(44,380,l)
);
},
{
closed = 1;
nodes = (
(107.333,642.667,o),
(119,638,o),
(133,638,cs),
(159.667,638,o),
(184,659.667,o),
(184,689,cs),
(184,715.667,o),
(159.667,740,o),
(133,740,cs),
(106.333,740,o),
(82,715.667,o),
(82,689,cs),
(82,674.333,o),
(87.333,662,o),
(98,652,cs)
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */
12 2 30 4
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
12
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
6
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
6
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
12
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
39 3
MIRP[11100]	/* MoveIndirectRelPt */
PUSHW[ ]	/* 1 value pushed */
12
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
45
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
45
MDAP[1]	/* MoveDirectAbsPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
0
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
42
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
42 18
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
5
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
5 14
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
6
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
6 14
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
18
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
18 4
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
21
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
21 4
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
24
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
24 4
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
18
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
17 1
MIRP[11100]	/* MoveIndirectRelPt */
PUSHW[ ]	/* 1 value pushed */
25
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
42
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
48
MDRP[11100]	/* MoveDirectRelPt */
NPUSHW[ ]	/* 5 values pushed */
217 48 233 48 2
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 27 values pushed */
8 48 24 48 40 48 56 48 72 48 88 48 104 48 120 48 136 48 152 48 168 48 184 48 200 48 13
DELTAP1[ ]	/* DeltaExceptionP1 */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 275;
}
);
note = i;
},
{
glyphname = i.011;
lastChange = "2025-01-13 19:00:14 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(114,77.667,o),
(112.333,56.167,o),
(109,48.5,cs),
(105.667,40.833,o),
(95.667,36,o),
(79,34,cs),
(60,32,ls),
(42.667,30,o),
(34,23.333,o),
(34,12,cs),
(34,0.667,o),
(42.333,-4.667,o),
(59,-4,cs),
(79,-3,ls),
(118.333,-1,o),
(146.333,0,o),
(163,0,cs),
(177.667,0,o),
(200.333,-1,o),
(231,-3,cs),
(247,-4,ls),
(265,-5.333,o),
(274,0,o),
(274,12,cs),
(274,22,o),
(263.667,28.667,o),
(243,32,cs),
(230,34,ls),
(212.667,36.667,o),
(202.5,42,o),
(199.5,50,cs),
(196.5,58,o),
(195,84,o),
(195,128,cs),
(195,460,ls),
(195,472.667,o),
(190.333,479,o),
(181,479,cs),
(175.667,479,o),
(172,477.333,o),
(170,474,cs),
(165,468,ls),
(139,437.333,o),
(111.667,416,o),
(83,404,cs),
(67,398,ls),
(55,393.333,o),
(49,388,o),
(49,382,cs),
(49,372,o),
(56.667,367,o),
(72,367,cs),
(83,366,ls),
(97.667,364.667,o),
(106.5,360.667,o),
(109.5,354,cs),
(112.5,347.333,o),
(114,329.667,o),
(114,301,cs),
(114,113,l),
(114,113,l)
);
},
{
closed = 1;
nodes = (
(129,663,o),
(105,638.667,o),
(105,612,cs),
(105,582.667,o),
(127.667,560,o),
(157,560,cs),
(183.667,560,o),
(207,582.667,o),
(207,612,cs),
(207,638.667,o),
(183.667,663,o),
(157,663,cs)
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */
10
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 3 values pushed */
43 49 13
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
43
SRP0[ ]	/* SetRefPoint0 */
NPUSHW[ ]	/* 5 values pushed */
58 49 74 49 2
DELTAP2[ ]	/* DeltaExceptionP2 */
NPUSHW[ ]	/* 21 values pushed */
105 49 121 49 137 49 153 49 169 49 185 49 201 49 217 49 233 49 249 49 10
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 7 values pushed */
9 49 25 49 41 49 3
DELTAP2[ ]	/* DeltaExceptionP2 */
PUSHW[ ]	/* 3 values pushed */
0 49 43
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHW[ ]	/* 1 value pushed */
0
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
18
MDRP[11100]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 3 values pushed */
40 46 13
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
40
SRP0[ ]	/* SetRefPoint0 */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 291;
}
);
note = i;
},
{
glyphname = m.001;
lastChange = "2025-01-13 19:00:14 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(712,48.505,o),
(712.643,36.183,o),
(669,28,cs),
(648,25,l),
(641.333,18.333,o),
(643,-0.333,o),
(651,-3,c),
(681.667,-0.333,o),
(712.667,0,o),
(754,0,cs),
(792.667,0,o),
(825.333,-0.333,o),
(864,-3,c),
(870.667,-0.333,o),
(874,18.333,o),
(866,25,c),
(839,28,ls),
(797.292,35.82,o),
(796,43.413,o),
(796,127,cs),
(796,322,ls),
(796,400.667,o),
(751.667,462,o),
(661,462,cs),
(607.667,462,o),
(552.333,435.667,o),
(507,405,cs),
(496.333,397,o),
(488.667,392,o),
(478,396,c),
(447.333,442.667,o),
(415.333,462,o),
(358,462,cs),
(303.333,462,o),
(251,434.333,o),
(207,405,c),
(199,405,o),
(195,409,o),
(195,417,cs),
(195,422.333,o),
(195,429.333,o),
(195,438,cs),
(195,446.667,o),
(195.667,457.333,o),
(197,470,c),
(195,475.333,o),
(191,478,o),
(185,478,c),
(167.095,466.064,o),
(94.894,429.516,o),
(71,423,c),
(68.333,421.667,o),
(67,418.333,o),
(67,413,cs),
(67,408.333,o),
(68,404.667,o),
(70,402,c),
(80,396,ls),
(110.936,375.376,o),
(111,368.378,o),
(111,325,cs),
(111,127,ls),
(111,45.911,o),
(111.814,36.215,o),
(68,28,cs),
(41,25,l),
(33,18.333,o),
(35,-0.333,o),
(43,-3,c),
(77.667,-0.333,o),
(111.667,0,o),
(153,0,cs),
(191,0,o),
(225.333,-1,o),
(256,-3,c),
(264,-0.333,o),
(266,18.333,o),
(258,25,c),
(238,28,ls),
(195.581,35.954,o),
(195,47.736,o),
(195,127,cs),
(195,303,ls),
(195,339,o),
(200,353.667,o),
(212,367,cs),
(228,388.333,o),
(260.333,408,o),
(307,408,cs),
(376.333,408,o),
(411,369,o),
(411,291,cs),
(411,127,ls),
(411,48.505,o),
(411.643,36.183,o),
(368,28,cs),
(348,25,l),
(340,18.333,o),
(343.333,-0.333,o),
(350,-3,c),
(382,-0.333,o),
(413,0,o),
(453,0,cs),
(493,0,o),
(525.333,-0.333,o),
(560,-3,c),
(568,-0.333,o),
(570,18.333,o),
(562,25,c),
(538,28,ls),
(498.713,35.857,o),
(495,45.859,o),
(495,127,cs),
(495,300,ls),
(495,340,o),
(498.667,352,o),
(512,368,cs),
(529.333,389.333,o),
(563.333,408,o),
(606,408,cs),
(676.667,408,o),
(712,369,o),
(712,291,cs),
(712,127,l),
(712,127,l)
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */
43 2 66 4
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
43
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
33
MDRP[11100]	/* MoveDirectRelPt */
NPUSHW[ ]	/* 3 values pushed */
240 33 1
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 3 values pushed */
159 33 1
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 3 values pushed */
79 33 1
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 3 values pushed */
0 33 1
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 5 values pushed */
176 33 192 33 2
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHW[ ]	/* 2 values pushed */
9 2
MIRP[11100]	/* MoveIndirectRelPt */
PUSHW[ ]	/* 1 value pushed */
0
MDRP[11100]	/* MoveDirectRelPt */
NPUSHW[ ]	/* 3 values pushed */
0 0 1
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 3 values pushed */
159 0 1
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 3 values pushed */
79 0 1
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 3 values pushed */
240 0 1
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 5 values pushed */
176 0 192 0 2
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHW[ ]	/* 1 value pushed */
43
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
84
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
84
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
43
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
86
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
43
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
88
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
0
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
105 2
MIRP[11100]	/* MoveIndirectRelPt */
PUSHW[ ]	/* 1 value pushed */
132
MDRP[11100]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
0
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
84
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
84 10
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
93
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
93 10
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
102
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
102 10
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
18
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
18 4
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
21
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
21 4
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
24
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
24 4
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
52
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
52 4
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
54
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
54 4
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
57
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
57 4
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
115
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
115 4
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
118
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
118 4
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
121
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
121 4
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
102
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
2 1
MIRP[11100]	/* MoveIndirectRelPt */
NPUSHW[ ]	/* 5 values pushed */
185 2 201 2 2
DELTAP2[ ]	/* DeltaExceptionP2 */
NPUSHW[ ]	/* 33 values pushed */
8 2 24 2 40 2 56 2 72 2 88 2 104 2 120 2 136 2 152 2 168 2 184 2 200 2 216 2 232 2 248 2 16
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 23 values pushed */
8 2 24 2 40 2 56 2 72 2 88 2 104 2 120 2 136 2 152 2 168 2 11
DELTAP2[ ]	/* DeltaExceptionP2 */
PUSHW[ ]	/* 1 value pushed */
36
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
57
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
60 1
MIRP[11100]	/* MoveIndirectRelPt */
PUSHW[ ]	/* 1 value pushed */
36
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
90
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
90
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
60
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
111
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
111
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
112
MDRP[10000]	/* MoveDirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 892;
}
);
note = m;
},
{
glyphname = m.002;
lastChange = "2025-01-13 19:00:14 +0000";
layers = (
{
hints = (
{
horizontal = 1;
place = (397,70);
type = Stem;
},
{
horizontal = 1;
place = (-4,35);
type = Stem;
},
{
place = (669,79);
type = Stem;
},
{
place = (384,78);
type = Stem;
},
{
place = (102,77);
type = Stem;
}
);
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(166,466,l),
(46,410,l),
(44,378,l),
(85,371,l),
(97,348,l),
(101,323,l),
(102,243,l),
(102,162,l),
(97,59,l),
(78,37,l),
(48,32,l),
(29,31,l),
(29,-4,l),
(139,1,l),
(244,-5,l),
(245,31,l),
(209,33,l),
(182,54,l),
(179,84,l),
(179,352,l),
(233,381,l),
(293,397,l),
(344,383,l),
(365,364,l),
(375,340,l),
(384,284,l),
(384,132,l),
(379,52,l),
(368,38,l),
(354,32,l),
(321,30,l),
(321,-5,l),
(430,0,l),
(528,-6,l),
(528,30,l),
(479,36,l),
(466,55,l),
(462,70,l),
(462,261,l),
(460,346,l),
(500,373,l),
(527,386,l),
(578,396,l),
(624,385,l),
(649,357,l),
(663,318,l),
(669,197,l),
(669,84,l),
(660,47,l),
(640,33,l),
(601,30,l),
(601,-5,l),
(705,-2,l),
(813,-6,l),
(813,29,l),
(763,37,l),
(753,50,l),
(748,76,l),
(748,222,l),
(747,324,l),
(728,391,l),
(700,425,l),
(649,448,l),
(613,452,l),
(578,448,l),
(532,427,l),
(455,378,l),
(440,400,l),
(422,422,l),
(369,449,l),
(330,453,l),
(292,447,l),
(182,386,l),
(186,455,l),
(186,455,l)
);
}
);
width = 842;
}
);
},
{
glyphname = m.003;
lastChange = "2025-01-13 19:00:14 +0000";
layers = (
{
hints = (
{
horizontal = 1;
place = (397,70);
type = Stem;
},
{
horizontal = 1;
place = (-4,35);
type = Stem;
},
{
place = (669,79);
type = Stem;
},
{
place = (384,78);
type = Stem;
},
{
place = (102,77);
type = Stem;
}
);
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(166,466,l),
(46,410,l),
(44,378,l),
(85,371,l),
(97,348,l),
(101,323,l),
(102,243,l),
(102,162,l),
(97,59,l),
(78,37,l),
(48,32,l),
(29,31,l),
(29,-4,l),
(139,1,l),
(244,-5,l),
(245,31,l),
(209,33,l),
(182,54,l),
(179,84,l),
(179,352,l),
(233,381,l),
(293,397,l),
(344,383,l),
(365,364,l),
(375,340,l),
(384,284,l),
(384,132,l),
(379,52,l),
(368,38,l),
(354,32,l),
(321,30,l),
(321,-5,l),
(430,0,l),
(528,-6,l),
(528,30,l),
(479,36,l),
(466,55,l),
(462,70,l),
(462,261,l),
(460,346,l),
(500,373,l),
(527,386,l),
(578,396,l),
(624,385,l),
(649,357,l),
(663,318,l),
(669,197,l),
(669,84,l),
(660,47,l),
(640,33,l),
(601,30,l),
(601,-5,l),
(705,-2,l),
(813,-6,l),
(813,29,l),
(763,37,l),
(753,50,l),
(748,76,l),
(748,222,l),
(747,324,l),
(728,391,l),
(700,425,l),
(649,448,l),
(613,452,l),
(578,448,l),
(532,427,l),
(455,378,l),
(440,400,l),
(422,422,l),
(369,449,l),
(330,453,l),
(292,447,l),
(182,386,l),
(186,455,l),
(186,455,l)
);
}
);
width = 842;
}
);
},
{
glyphname = m.004;
lastChange = "2025-01-13 19:00:14 +0000";
layers = (
{
hints = (
{
horizontal = 1;
place = (408,64);
type = Stem;
},
{
horizontal = 1;
place = (0,29);
type = Stem;
},
{
place = (650,95);
type = Stem;
},
{
place = (370,92);
type = Stem;
},
{
place = (86,92);
type = Stem;
}
);
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(86,119,l),
(82,78,l),
(80,56,l),
(68,39,l),
(27,29,l),
(11,17,l),
(17,4,l),
(27,4,l),
(62,6,l),
(113,8,l),
(198,5,l),
(219,4,l),
(238,2,l),
(245,1,l),
(252,12,l),
(247,23,l),
(236,27,l),
(202,33,l),
(188,44,l),
(181,59,l),
(178,83,l),
(177,140,l),
(177,259,l),
(179,329,l),
(194,369,l),
(234,395,l),
(282,408,l),
(329,392,l),
(356,369,l),
(367,337,l),
(369,300,l),
(369,215,l),
(369,120,l),
(366,59,l),
(351,39,l),
(337,31,l),
(309,28,l),
(296,24,l),
(292,15,l),
(299,2,l),
(313,2,l),
(345,4,l),
(407,6,l),
(485,3,l),
(505,1,l),
(521,-1,l),
(533,2,l),
(537,12,l),
(527,25,l),
(499,28,l),
(474,40,l),
(463,58,l),
(462,95,l),
(462,255,l),
(466,345,l),
(476,369,l),
(501,391,l),
(566,407,l),
(615,392,l),
(638,368,l),
(649,326,l),
(649,282,l),
(649,170,l),
(648,63,l),
(643,50,l),
(615,30,l),
(591,27,l),
(574,15,l),
(576,9,l),
(593,0,l),
(610,2,l),
(698,4,l),
(757,3,l),
(781,0,l),
(803,-2,l),
(813,-1,l),
(819,12,l),
(811,22,l),
(786,27,l),
(755,39,l),
(743,74,l),
(743,301,l),
(734,387,l),
(711,422,l),
(690,439,l),
(656,453,l),
(610,460,l),
(560,452,l),
(497,416,l),
(479,403,l),
(458,385,l),
(441,401,l),
(392,445,l),
(361,456,l),
(326,459,l),
(277,454,l),
(236,431,l),
(209,409,l),
(179,385,l),
(173,416,l),
(169,466,l),
(164,467,l),
(128,438,l),
(60,394,l),
(42,388,l),
(32,376,l),
(34,368,l),
(42,362,l),
(56,363,l),
(68,360,l),
(84,345,l),
(87,319,l),
(87,319,l)
);
}
);
width = 831;
}
);
},
{
glyphname = m.005;
lastChange = "2025-01-13 19:00:14 +0000";
layers = (
{
hints = (
{
horizontal = 1;
place = (400,64);
type = Stem;
},
{
horizontal = 1;
place = (-1,32);
type = Stem;
},
{
place = (672,77);
type = Stem;
},
{
place = (377,78);
type = Stem;
},
{
place = (82,74);
type = Stem;
}
);
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(405,433,l),
(359,457,l),
(327,461,l),
(283,456,l),
(242,440,l),
(161,383,l),
(162,433,l),
(163,454,l),
(158,464,l),
(142,458,l),
(120,450,l),
(65,429,l),
(21,409,l),
(20,389,l),
(43,380,l),
(72,361,l),
(80,336,l),
(80,290,l),
(82,183,l),
(75,52,l),
(57,36,l),
(42,32,l),
(30,32,l),
(5,20,l),
(4,13,l),
(11,-2,l),
(24,2,l),
(42,0,l),
(74,5,l),
(147,3,l),
(167,6,l),
(198,-2,l),
(225,2,l),
(234,9,l),
(234,22,l),
(218,27,l),
(177,37,l),
(162,48,l),
(158,63,l),
(157,88,l),
(156,111,l),
(157,127,l),
(157,216,l),
(158,259,l),
(159,344,l),
(186,368,l),
(233,391,l),
(248,394,l),
(285,398,l),
(299,395,l),
(311,394,l),
(329,384,l),
(346,374,l),
(359,352,l),
(374,299,l),
(377,216,l),
(376,178,l),
(375,155,l),
(376,135,l),
(375,116,l),
(370,45,l),
(342,29,l),
(335,29,l),
(325,26,l),
(317,27,l),
(302,22,l),
(300,16,l),
(304,-2,l),
(319,-1,l),
(338,-1,l),
(363,0,l),
(412,3,l),
(479,-2,l),
(507,-1,l),
(530,3,l),
(529,10,l),
(530,14,l),
(527,22,l),
(515,25,l),
(464,36,l),
(454,73,l),
(453,106,l),
(453,135,l),
(454,161,l),
(454,177,l),
(456,201,l),
(455,217,l),
(456,242,l),
(456,335,l),
(488,361,l),
(552,393,l),
(571,394,l),
(600,392,l),
(628,379,l),
(655,356,l),
(668,331,l),
(672,296,l),
(674,273,l),
(672,231,l),
(673,215,l),
(672,188,l),
(672,145,l),
(667,47,l),
(649,27,l),
(611,22,l),
(598,20,l),
(595,16,l),
(595,-2,l),
(604,-4,l),
(616,-4,l),
(667,-3,l),
(709,-2,l),
(748,-4,l),
(767,-4,l),
(784,-6,l),
(793,-6,l),
(815,-8,l),
(826,10,l),
(820,20,l),
(808,21,l),
(769,25,l),
(752,44,l),
(748,67,l),
(749,151,l),
(749,285,l),
(746,340,l),
(730,384,l),
(699,426,l),
(646,451,l),
(612,455,l),
(580,452,l),
(533,431,l),
(474,385,l),
(460,370,l),
(449,360,l),
(426,406,l),
(426,406,l)
);
}
);
width = 827;
}
);
},
{
glyphname = m.006;
lastChange = "2025-01-13 19:00:14 +0000";
layers = (
{
hints = (
{
horizontal = 1;
place = (403,65);
type = Stem;
},
{
horizontal = 1;
place = (-1,21);
target = up;
type = BottomGhost;
},
{
place = (645,76);
type = Stem;
},
{
place = (364,76);
type = Stem;
},
{
place = (83,72);
type = Stem;
}
);
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(645,149,l),
(644,108,l),
(642,73,l),
(633,49,l),
(619,39,l),
(593,33,l),
(568,25,l),
(566,18,l),
(574,4,l),
(596,2,l),
(635,6,l),
(683,7,l),
(727,7,l),
(770,1,l),
(782,3,l),
(790,16,l),
(784,25,l),
(772,31,l),
(724,45,l),
(718,63,l),
(720,110,l),
(720,218,l),
(717,335,l),
(708,375,l),
(689,414,l),
(637,452,l),
(579,464,l),
(546,460,l),
(487,438,l),
(436,391,l),
(416,416,l),
(350,457,l),
(306,463,l),
(261,456,l),
(215,432,l),
(187,411,l),
(167,400,l),
(166,464,l),
(156,469,l),
(132,450,l),
(121,440,l),
(86,412,l),
(56,396,l),
(47,384,l),
(71,361,l),
(82,335,l),
(86,296,l),
(86,125,l),
(80,49,l),
(29,32,l),
(12,15,l),
(18,5,l),
(28,4,l),
(68,7,l),
(130,8,l),
(172,7,l),
(212,3,l),
(229,8,l),
(233,16,l),
(221,30,l),
(208,35,l),
(193,38,l),
(169,49,l),
(162,67,l),
(159,93,l),
(158,117,l),
(158,174,l),
(168,348,l),
(197,379,l),
(238,401,l),
(269,405,l),
(332,388,l),
(363,346,l),
(368,290,l),
(368,210,l),
(362,56,l),
(343,42,l),
(310,34,l),
(287,24,l),
(284,17,l),
(299,1,l),
(313,4,l),
(330,3,l),
(361,8,l),
(398,8,l),
(461,5,l),
(483,0,l),
(500,-2,l),
(516,12,l),
(501,27,l),
(474,35,l),
(445,55,l),
(440,75,l),
(444,126,l),
(443,252,l),
(451,352,l),
(467,376,l),
(495,396,l),
(543,405,l),
(588,396,l),
(619,380,l),
(635,362,l),
(647,296,l),
(648,193,l),
(648,193,l)
);
}
);
width = 819;
}
);
},
{
glyphname = m.007;
lastChange = "2025-01-13 19:00:14 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(192,471,o),
(189,479,o),
(183,479,cs),
(176.333,479,o),
(170.667,474.333,o),
(166,465,cs),
(150,437,o),
(120.333,415.333,o),
(77,400,cs),
(57.667,393.333,o),
(46.667,389.333,o),
(44,388,cs),
(41.333,386.667,o),
(40,383.333,o),
(40,378,cs),
(40,370.667,o),
(45,366.667,o),
(55,366,cs),
(73,364.667,o),
(84,363,o),
(88,361,cs),
(98.667,353.667,o),
(104,333.667,o),
(104,301,cs),
(104,100,ls),
(104,37.333,o),
(100,32.5,o),
(60,26.5,cs),
(40,23.5,o),
(30,17.667,o),
(30,9,cs),
(30,1,o),
(35.333,-3,o),
(46,-3,cs),
(52.667,-3,o),
(58,-2.667,o),
(62,-2,cs),
(102.667,0,o),
(132.333,1,o),
(151,1,cs),
(169.667,1,o),
(204,-0.333,o),
(254,-3,cs),
(265.333,-3,o),
(271,1,o),
(271,9,cs),
(271,33.35,o),
(216.979,18.963,o),
(204.5,42,cs),
(200.167,50,o),
(198,69.333,o),
(198,100,cs),
(198,311,ls),
(198,333.667,o),
(200.333,350.333,o),
(205,361,cs),
(213,375,o),
(226.333,386,o),
(245,394,cs),
(261.667,402,o),
(279,406,o),
(297,406,cs),
(336.333,406,o),
(362.333,393,o),
(375,367,cs),
(383,350.333,o),
(387,321.667,o),
(387,281,cs),
(387,100,ls),
(387,37.333,o),
(384.167,32.5,o),
(343.5,26.5,cs),
(323.167,23.5,o),
(313,17.667,o),
(313,9,cs),
(313,1,o),
(318.667,-3,o),
(330,-3,cs),
(337.333,-3,o),
(342.333,-2.667,o),
(345,-2,c),
(390.333,0.667,o),
(420.333,2,o),
(435,2,cs),
(452.333,2,o),
(474,1,o),
(500,-1,cs),
(517.333,-2.333,o),
(529.667,-3,o),
(537,-3,cs),
(548.333,-3,o),
(554,1,o),
(554,9,cs),
(554,33.35,o),
(499.979,18.963,o),
(487.5,42,cs),
(483.167,50,o),
(481,69.333,o),
(481,100,cs),
(481,316,ls),
(481,341.333,o),
(485.333,359.667,o),
(494,371,cs),
(513.333,396.333,o),
(542.667,409,o),
(582,409,cs),
(614.667,409,o),
(638,399.333,o),
(652,380,cs),
(663.333,366,o),
(669,343,o),
(669,311,cs),
(669,100,ls),
(669,37.333,o),
(666,32.5,o),
(626,26.5,cs),
(606,23.5,o),
(596,17.667,o),
(596,9,cs),
(596,1,o),
(601.667,-3,o),
(613,-3,cs),
(619.667,-3,o),
(624.667,-2.667,o),
(628,-2,cs),
(672.667,0.667,o),
(701.667,2,o),
(715,2,cs),
(733.667,2,o),
(756,1,o),
(782,-1,cs),
(800,-2.333,o),
(812.333,-3,o),
(819,-3,cs),
(831,-3,o),
(837,1,o),
(837,9,cs),
(837,33.12,o),
(783.239,19.304,o),
(770,42,cs),
(765.333,50,o),
(763,69.333,o),
(763,100,cs),
(763,330,ls),
(763,374,o),
(752,406.333,o),
(730,427,cs),
(702.667,451.667,o),
(668.667,464,o),
(628,464,cs),
(578.667,464,o),
(535,445.333,o),
(497,408,cs),
(483.667,394.667,o),
(476,388,o),
(474,388,cs),
(471.333,388,o),
(468.667,390,o),
(466,394,cs),
(431.333,447.333,o),
(402.333,464,o),
(345,464,cs),
(306.333,464,o),
(276,455.333,o),
(254,438,cs),
(236,423.333,o),
(220.333,409.333,o),
(207,396,cs),
(204.333,392.667,o),
(201.333,391,o),
(198,391,cs),
(194,391,o),
(192,398.333,o),
(192,413,cs),
(192,455,l),
(192,455,l)
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */
10
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 3 values pushed */
85 103 13
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
85
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 3 values pushed */
53 73 13
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
53
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 3 values pushed */
23 43 13
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
23
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
85
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
0
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
0
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
23
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
120
MDRP[11100]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
117
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
37
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
9
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
9 42
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
37
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
18
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
18 42
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
37
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
115
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
115 42
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
37
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
29
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
29 38
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
37
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
31
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
31 38
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
37
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
33
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
33 38
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
37
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
35
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
35 38
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
37
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
37
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
37 38
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
37
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
59
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
59 38
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
37
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
61
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
61 38
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
37
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
63
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
63 38
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
37
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
65
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
65 38
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
37
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
67
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
67 38
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
37
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
91
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
91 38
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
37
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
93
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
93 38
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
37
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
95
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
95 38
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
37
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
97
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
97 38
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
18
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
48
MDRP[11100]	/* MoveDirectRelPt */
NPUSHW[ ]	/* 5 values pushed */
57 48 73 48 2
DELTAP2[ ]	/* DeltaExceptionP2 */
NPUSHW[ ]	/* 21 values pushed */
104 48 120 48 136 48 152 48 168 48 184 48 200 48 216 48 232 48 248 48 10
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 7 values pushed */
8 48 24 48 40 48 3
DELTAP2[ ]	/* DeltaExceptionP2 */
PUSHW[ ]	/* 1 value pushed */
78
MDRP[10000]	/* MoveDirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 852;
}
);
note = m;
},
{
glyphname = m.008;
lastChange = "2025-01-13 19:00:14 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(475,374.667,o),
(473.333,376.667,o),
(472,378,c),
(443.333,434,o),
(404.333,462,o),
(355,462,cs),
(304.333,462,o),
(238,433.667,o),
(214,411,cs),
(202,399.667,o),
(194,393.667,o),
(190,393,cs),
(189.333,393,o),
(188.833,392.667,o),
(188.5,392,cs),
(188.167,391.333,o),
(187.667,391,o),
(187,391,c),
(185.667,391.667,o),
(184,395.667,o),
(182,403,c),
(185,458,l),
(186,461,l),
(186,467.667,o),
(183.333,471,o),
(178,471,cs),
(175.222,471,o),
(163.842,462.711,o),
(145,458,c),
(134.333,453.333,o),
(126.667,450,o),
(122,448,cs),
(105,441,l),
(73,428,ls),
(66.333,426,o),
(60,423.333,o),
(54,420,c),
(44,416.667,o),
(39,410,o),
(39,400,cs),
(39,394.667,o),
(49.5,387.333,o),
(70.5,378,cs),
(91.5,368.667,o),
(101.333,357.667,o),
(100,345,cs),
(98,315,ls),
(98,309.337,o),
(100,296.641,o),
(100,281.5,cs),
(100,267.167,o),
(100.667,250,o),
(102,230,cs),
(102.667,213.333,o),
(103,197.667,o),
(103,183,cs),
(100,88,ls),
(98.667,42.667,o),
(97,32,o),
(49,28,cs),
(34.333,26.667,o),
(35.667,26.333,o),
(33,5,cs),
(33,-1,o),
(37,-4,o),
(45,-4,cs),
(49.667,-4,o),
(54.333,-3.667,o),
(59,-3,cs),
(88.333,1,o),
(118.333,2.667,o),
(149,2,cs),
(227,0,l),
(230.333,-0.667,o),
(232.333,-1,o),
(233,-1,cs),
(246.333,-1,o),
(253,3.667,o),
(253,13,cs),
(253,25,o),
(247.667,31,o),
(237,31,cs),
(213.667,31.667,o),
(198.333,34.667,o),
(191,40,cs),
(181.667,48,o),
(177.333,63.667,o),
(178,87,cs),
(181,298,l),
(181,346,ls),
(181,368.667,o),
(259,405,o),
(303,405,cs),
(327,405,o),
(347.667,398,o),
(365,384,cs),
(389.667,364.667,o),
(401.667,335.333,o),
(401,296,cs),
(399,193,l),
(401,162,ls),
(402.333,145.333,o),
(402,122.667,o),
(400,94,cs),
(398.667,68.667,o),
(397,53.667,o),
(395,49,cs),
(391,37.667,o),
(381.333,31,o),
(366,29,cs),
(348,27,o),
(337.5,25.333,o),
(334.5,24,cs),
(331.5,22.667,o),
(330,18,o),
(330,10,cs),
(330,0.667,o),
(336.667,-4,o),
(350,-4,cs),
(352,-4,o),
(354,-3.667,o),
(356,-3,c),
(376,-3,o),
(400.333,-1.667,o),
(429,1,cs),
(440,2,ls),
(444,2,o),
(447.667,1.667,o),
(451,1,c),
(460.333,1,o),
(468.667,0.667,o),
(476,0,cs),
(497,-1,l),
(525,-2,l),
(534,-2,ls),
(538,-2.667,o),
(540.333,-3,o),
(541,-3,cs),
(547,-3,o),
(550,3.667,o),
(550,17,cs),
(550,23.667,o),
(545.667,27,o),
(537,27,cs),
(487.667,28.333,o),
(482,35.667,o),
(482,85,cs),
(482,92.333,o),
(481,104,o),
(479,120,c),
(482,181,l),
(483,268,ls),
(483,272,o),
(483.333,278.667,o),
(484,288,c),
(482,340,ls),
(482,342.667,o),
(490.667,351.333,o),
(508,366,cs),
(539.333,391.333,o),
(571,404,o),
(603,404,cs),
(649.667,404,o),
(680,384.667,o),
(694,346,cs),
(698.667,332,o),
(701,304.333,o),
(701,263,cs),
(701,153.667,o),
(699.667,87.333,o),
(697,64,cs),
(693.667,38.667,o),
(677.667,26,o),
(649,26,cs),
(634.333,26,o),
(627,21,o),
(627,11,cs),
(627,1,o),
(635.667,-4,o),
(653,-4,cs),
(655,-4,o),
(660.667,-3.667,o),
(670,-3,cs),
(706,-0.333,o),
(731.333,0.667,o),
(746,0,cs),
(766,-1,l),
(786,-1,ls),
(798.667,-1,o),
(806.333,-1.333,o),
(809,-2,cs),
(815.667,-2.667,o),
(822,-3,o),
(828,-3,cs),
(842,-3,o),
(849,2,o),
(849,12,cs),
(849,26.667,o),
(821.333,28,o),
(816,28,cs),
(802.667,30,o),
(794.667,32.333,o),
(792,35,cs),
(783.333,42.333,o),
(779.333,63.667,o),
(780,99,cs),
(784,265,ls),
(785.333,311,o),
(784.333,342,o),
(781,358,cs),
(779,364.667,o),
(773,376.333,o),
(763,393,cs),
(735.667,439.667,o),
(695.667,463,o),
(643,463,cs),
(616.333,463,o),
(590.667,455.667,o),
(566,441,cs),
(534.667,423,o),
(511.333,406,o),
(496,390,cs),
(488.667,382.667,o),
(484,378.333,o),
(482,377,cs),
(477,372,l),
(477,372,l)
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */
10
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 3 values pushed */
99 125 13
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
99
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 3 values pushed */
56 86 13
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
56
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 3 values pushed */
11 41 13
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
11
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
13
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
13
MDAP[1]	/* MoveDirectAbsPt */
NPUSHW[ ]	/* 5 values pushed */
58 41 74 41 2
DELTAP2[ ]	/* DeltaExceptionP2 */
NPUSHW[ ]	/* 21 values pushed */
105 41 121 41 137 41 153 41 169 41 185 41 201 41 217 41 233 41 249 41 10
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 7 values pushed */
9 41 25 41 41 41 3
DELTAP2[ ]	/* DeltaExceptionP2 */
PUSHW[ ]	/* 1 value pushed */
41
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
39
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
39
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
56
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
49
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
56
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
52
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
52
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
56
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
54
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
54
MDAP[1]	/* MoveDirectAbsPt */
NPUSHW[ ]	/* 5 values pushed */
58 86 74 86 2
DELTAP2[ ]	/* DeltaExceptionP2 */
NPUSHW[ ]	/* 21 values pushed */
105 86 121 86 137 86 153 86 169 86 185 86 201 86 217 86 233 86 249 86 10
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 7 values pushed */
9 86 25 86 41 86 3
DELTAP2[ ]	/* DeltaExceptionP2 */
PUSHW[ ]	/* 1 value pushed */
86
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
88
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
88
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
86
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
90
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
90
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
99
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
97
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
97
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
125
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
122
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
122
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
125
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
129
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
129
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
99
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
147
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
147
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
99
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
149
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
149
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
11
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
163
MDRP[11100]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
7
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
145
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
37
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
141
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
141 42
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
37
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
147
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
147 42
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
37
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
158
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
158 42
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
37
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
23
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
23 38
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
37
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
25
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
25 38
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
37
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
27
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
27 38
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
37
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
29
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
29 38
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
37
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
31
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
31 38
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
37
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
33
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
33 38
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
37
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
63
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
63 38
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
37
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
65
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
65 38
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
37
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
67
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
67 38
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
37
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
70
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
70 38
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
37
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
72
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
72 38
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
37
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
75
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
75 38
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
37
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
77
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
77 38
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
37
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
107
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
107 38
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
37
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
109
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
109 38
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
37
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
112
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
112 38
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
37
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
114
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
114 38
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
37
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
116
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
116 38
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
25
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
18
MDRP[11100]	/* MoveDirectRelPt */
NPUSHW[ ]	/* 21 values pushed */
103 18 119 18 135 18 151 18 167 18 183 18 199 18 215 18 231 18 247 18 10
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 7 values pushed */
7 18 23 18 39 18 3
DELTAP2[ ]	/* DeltaExceptionP2 */
NPUSHW[ ]	/* 5 values pushed */
54 18 70 18 2
DELTAP2[ ]	/* DeltaExceptionP2 */
PUSHW[ ]	/* 1 value pushed */
37
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
37
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
158
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
45
MDRP[11100]	/* MoveDirectRelPt */
NPUSHW[ ]	/* 5 values pushed */
57 45 73 45 2
DELTAP2[ ]	/* DeltaExceptionP2 */
NPUSHW[ ]	/* 21 values pushed */
104 45 120 45 136 45 152 45 168 45 184 45 200 45 216 45 232 45 248 45 10
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 7 values pushed */
8 45 24 45 40 45 3
DELTAP2[ ]	/* DeltaExceptionP2 */
PUSHW[ ]	/* 1 value pushed */
37
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
59
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
59
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
82
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
82
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
45
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
94
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
82
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
103
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
103
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
119
MDRP[10000]	/* MoveDirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 869;
}
);
note = m;
},
{
glyphname = m.009;
lastChange = "2025-01-13 19:00:14 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(171,486,l),
(168.333,486,o),
(164.333,487.667,o),
(159,491,c),
(135.667,447.667,o),
(99.333,423.333,o),
(50,418,c),
(52,413.333,o),
(53,410,o),
(53,408,cs),
(53,406,o),
(52,402.667,o),
(50,398,c),
(57.333,396.667,o),
(61.333,395.333,o),
(62,394,c),
(106,388.667,o),
(112,382,o),
(112,334,cs),
(112,197,ls),
(112,117.667,o),
(109.333,67.333,o),
(104,46,cs),
(102,36,o),
(89.667,29.667,o),
(67,27,cs),
(34,24,l),
(37.333,18,o),
(39,13,o),
(39,9,cs),
(39,7,o),
(37.667,3,o),
(35,-3,c),
(60,-2,ls),
(126.667,0.667,o),
(155.333,2,o),
(146,2,cs),
(136,2,o),
(164.333,0.667,o),
(231,-2,cs),
(256,-3,l),
(254,3,o),
(253,7,o),
(253,9,cs),
(253,13,o),
(254.333,18,o),
(257,24,c),
(229,27,ls),
(208.333,29.667,o),
(197,36,o),
(195,46,cs),
(189.667,67.333,o),
(187,117.667,o),
(187,197,cs),
(187,277,ls),
(187,317,o),
(186.333,348,o),
(185,370,c),
(231,401.333,o),
(269.333,417,o),
(300,417,cs),
(368,417,o),
(402,376.333,o),
(402,295,cs),
(402,197,ls),
(402,141,o),
(400.667,96,o),
(398,62,cs),
(395.333,35.333,o),
(391.333,29.667,o),
(354,27,cs),
(316,24,l),
(319.333,18.667,o),
(321,14,o),
(321,10,cs),
(321,6.667,o),
(319.333,2.333,o),
(316,-3,c),
(342,-2,ls),
(412,0.667,o),
(443,2,o),
(435,2,cs),
(431.667,2,o),
(463,0.667,o),
(529,-2,cs),
(554,-3,l),
(552,3,o),
(551,7,o),
(551,9,cs),
(551,13,o),
(552.333,18,o),
(555,24,c),
(521,27,ls),
(499.667,29.667,o),
(487.333,36,o),
(484,46,cs),
(479.333,64.667,o),
(477,115,o),
(477,197,cs),
(477,275,l),
(478,336,ls),
(478,339.333,o),
(477,349.667,o),
(475,367,c),
(523,399,o),
(563.667,415,o),
(597,415,cs),
(664.333,415,o),
(698,366.667,o),
(698,270,cs),
(698,197,ls),
(698,143.667,o),
(696.333,98.667,o),
(693,62,cs),
(689,34,o),
(686.667,29.667,o),
(648,27,cs),
(612,24,l),
(615.333,18,o),
(617,13,o),
(617,9,cs),
(617,7,o),
(615.667,3,o),
(613,-3,c),
(638,-2,ls),
(704.667,0.667,o),
(734.667,2,o),
(728,2,cs),
(721.333,2,o),
(751,0.667,o),
(817,-2,cs),
(842,-3,l),
(840,3,o),
(839,7,o),
(839,9,cs),
(839,13,o),
(840.333,18,o),
(843,24,c),
(813,27,ls),
(792.333,29.667,o),
(781,36,o),
(779,46,cs),
(775,62,o),
(773,112.333,o),
(773,197,cs),
(773,236,l),
(775,314,ls),
(779,411.333,o),
(725.333,466,o),
(632,466,cs),
(602,466,o),
(567.333,457,o),
(528,439,c),
(468,387,l),
(443.333,439.667,o),
(400.667,466,o),
(340,466,cs),
(309.333,466,o),
(274,455.667,o),
(234,435,c),
(180,391,l),
(180,489,l),
(180,489,l)
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */
10
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 3 values pushed */
80 104 13
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
80
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 3 values pushed */
47 72 13
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
47
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 3 values pushed */
13 38 13
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
13
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
80
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
0
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
0
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 3 values pushed */
5 72 47
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHW[ ]	/* 1 value pushed */
13
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
11
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
11
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 3 values pushed */
28 104 11
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHW[ ]	/* 3 values pushed */
32 104 11
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHW[ ]	/* 1 value pushed */
38
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
36
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
36
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
47
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
45
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
45
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 3 values pushed */
52 104 11
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHW[ ]	/* 3 values pushed */
56 104 11
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHW[ ]	/* 3 values pushed */
59 72 47
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHW[ ]	/* 3 values pushed */
62 104 11
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHW[ ]	/* 3 values pushed */
66 104 11
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHW[ ]	/* 1 value pushed */
72
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
70
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
70
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
80
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
77
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
77
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 3 values pushed */
85 104 11
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHW[ ]	/* 3 values pushed */
89 104 11
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHW[ ]	/* 1 value pushed */
13
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
121
MDRP[11100]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
116
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
118
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
33
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
3
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
3 38
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
33
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
8
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
8 38
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
33
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
22
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
22 34
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
33
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
25
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
25 34
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
33
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
27
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
27 34
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
33
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
56
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
56 34
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
33
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
59
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
59 34
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
33
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
61
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
61 34
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
33
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
89
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
89 34
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
33
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
92
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
92 34
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
33
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
94
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
94 34
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 3 values pushed */
0 22 116
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHW[ ]	/* 3 values pushed */
5 22 116
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHW[ ]	/* 1 value pushed */
22
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
17
MDRP[11100]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
32
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
32
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
33
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
8
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
41
MDRP[11100]	/* MoveDirectRelPt */
NPUSHW[ ]	/* 5 values pushed */
57 41 73 41 2
DELTAP2[ ]	/* DeltaExceptionP2 */
NPUSHW[ ]	/* 21 values pushed */
104 41 120 41 136 41 152 41 168 41 184 41 200 41 216 41 232 41 248 41 10
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 7 values pushed */
8 41 24 41 40 41 3
DELTAP2[ ]	/* DeltaExceptionP2 */
PUSHW[ ]	/* 1 value pushed */
33
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
51
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
52
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
52
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
66
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
66
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
67
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
41
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
75
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
67
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
84
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
85
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
85
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
99
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
99
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
100
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 3 values pushed */
110 22 116
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHW[ ]	/* 1 value pushed */
75
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
114
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
114
MDAP[1]	/* MoveDirectAbsPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 872;
}
);
note = m;
},
{
glyphname = m.010;
lastChange = "2025-01-13 19:00:14 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(77.753,379,o),
(95.751,376.368,o),
(101,337,c),
(101,331.434,o),
(102,322.493,o),
(102,313.5,cs),
(102,300.392,o),
(103,276.574,o),
(103,242,cs),
(103,162,ls),
(103,131.205,o),
(101,87.697,o),
(101,76,cs),
(98.441,35.049,o),
(78.441,32.472,o),
(29,30,c),
(29,-5,l),
(66.333,-2.333,o),
(103,0,o),
(139,0,cs),
(175,0,o),
(207.667,-2.333,o),
(245,-5,c),
(246,30,l),
(189.139,32.472,o),
(181,38.454,o),
(181,84,cs),
(181,353,l),
(214.333,375.667,o),
(251.667,399,o),
(297,399,cs),
(312.685,399,o),
(357.907,395.958,o),
(377,353,cs),
(388.382,330.236,o),
(387,301.813,o),
(387,231,cs),
(387,133,ls),
(387,41.244,o),
(388.71,30,o),
(323,30,c),
(323,-5,l),
(359,-2.333,o),
(395.667,0,o),
(433,0,cs),
(466.333,0,o),
(496,-2.333,o),
(532,-5,c),
(532,30,l),
(464.363,30,o),
(465,40.841,o),
(465,106,cs),
(465,262,ls),
(465,276,o),
(465,291.333,o),
(465,308,cs),
(465,324.667,o),
(464.333,337.667,o),
(463,347,c),
(486.263,367.679,o),
(526.642,398,o),
(581,398,cs),
(597.993,398,o),
(643.093,393.605,o),
(661,345,cs),
(671.629,318.428,o),
(671,295.828,o),
(671,198,cs),
(671,84,ls),
(671,35.69,o),
(655.864,30,o),
(602,30,c),
(602,-5,l),
(640.667,-2.333,o),
(673.333,0,o),
(708,0,cs),
(742.667,0,o),
(780,-2.333,o),
(816,-5,c),
(815,30,l),
(748.447,30,o),
(750,39.871,o),
(750,114,cs),
(750,224,ls),
(750,335.832,o),
(749.305,377.902,o),
(713,417,cs),
(686.333,445,o),
(644.667,455,o),
(614,455,cs),
(568.657,455,o),
(539.023,434.742,o),
(453,380,c),
(442.756,407.317,o),
(411.993,456,o),
(333,456,cs),
(302.416,456,o),
(275.379,447.968,o),
(222,414,cs),
(214,408.667,o),
(207.5,404.333,o),
(202.5,401,cs),
(197.5,397.667,o),
(191.333,393.333,o),
(184,388,c),
(184,411.358,o),
(186.641,429.697,o),
(189,458,c),
(167,467,l),
(124.196,442.541,o),
(89.94,424.729,o),
(45,409,c),
(45,379,l),
(45,379,l)
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */
144
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
132
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
132
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 2 values pushed */
109 2
MIRP[11100]	/* MoveIndirectRelPt */
PUSHW[ ]	/* 1 value pushed */
11
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
11
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
132
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
94
MDRP[11100]	/* MoveDirectRelPt */
NPUSHW[ ]	/* 3 values pushed */
63 94 1
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 3 values pushed */
239 94 1
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 3 values pushed */
0 94 1
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHW[ ]	/* 1 value pushed */
56
MDRP[11100]	/* MoveDirectRelPt */
NPUSHW[ ]	/* 3 values pushed */
63 56 1
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 3 values pushed */
239 56 1
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 3 values pushed */
0 56 1
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHW[ ]	/* 2 values pushed */
38 2
MIRP[11100]	/* MoveIndirectRelPt */
PUSHW[ ]	/* 1 value pushed */
94
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
76 2
MIRP[11100]	/* MoveIndirectRelPt */
PUSHW[ ]	/* 1 value pushed */
72
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
72
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
132
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
127
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
127
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
132
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
138
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
138
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
38
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
145
MDRP[11100]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
0
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
5
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
5 14
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
6
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
6 14
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
19
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
19 14
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
29
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
29 14
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
44
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
44 4
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
47
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
47 4
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
50
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
50 4
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
82
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
82 4
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
85
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
85 4
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
88
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
88 4
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
115
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
115 4
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
118
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
118 4
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
121
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
121 4
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 4 values pushed */
0 1 143 4
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 3 values pushed */
11 143 0
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHW[ ]	/* 1 value pushed */
44
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
43 1
MIRP[11100]	/* MoveIndirectRelPt */
PUSHW[ ]	/* 1 value pushed */
51
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
29
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
67 1
MIRP[11100]	/* MoveIndirectRelPt */
NPUSHW[ ]	/* 5 values pushed */
153 67 169 67 2
DELTAP2[ ]	/* DeltaExceptionP2 */
NPUSHW[ ]	/* 33 values pushed */
8 67 24 67 40 67 56 67 72 67 88 67 104 67 120 67 136 67 152 67 168 67 184 67 200 67 216 67 232 67 248 67 16
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 19 values pushed */
8 67 24 67 40 67 56 67 72 67 88 67 104 67 120 67 136 67 9
DELTAP2[ ]	/* DeltaExceptionP2 */
PUSHW[ ]	/* 1 value pushed */
51
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
81
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
89
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
67
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
105
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
89
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
114
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
122
MDRP[10000]	/* MoveDirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 846;
}
);
note = m;
},
{
glyphname = m.011;
lastChange = "2025-01-13 19:00:14 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(235.667,381.667,o),
(273.333,399,o),
(306,399,cs),
(338.667,399,o),
(362.333,389,o),
(377,369,cs),
(389,353,o),
(395,320,o),
(395,270,cs),
(395,112,ls),
(395,45.333,o),
(393,40.333,o),
(357,35,cs),
(336,32,ls),
(318.667,29.333,o),
(310,22.667,o),
(310,12,cs),
(310,1.333,o),
(317,-4,o),
(331,-4,cs),
(345,-4,l),
(363,-2,ls),
(381,0,o),
(404.667,1,o),
(434,1,cs),
(470.667,1,o),
(497,0,o),
(513,-2,cs),
(529,-4,ls),
(533,-4.667,o),
(535.333,-5,o),
(536,-5,cs),
(549.333,-6.333,o),
(556,-0.333,o),
(556,13,cs),
(556,22.333,o),
(547.667,28.333,o),
(531,31,cs),
(518,33,ls),
(476.667,39.667,o),
(476,42,o),
(476,110,cs),
(476,344,l),
(509.333,379.333,o),
(546.333,397,o),
(587,397,cs),
(651,397,o),
(677,361.333,o),
(677,276,cs),
(677,110,ls),
(677,76.667,o),
(675.333,56.167,o),
(672,48.5,cs),
(668.667,40.833,o),
(659.333,36,o),
(644,34,cs),
(622,31,ls),
(605.333,29,o),
(597,22.333,o),
(597,11,cs),
(597,-0.333,o),
(602.333,-5.667,o),
(613,-5,cs),
(629,-4,l),
(646,-2,ls),
(662.667,0,o),
(686,1,o),
(716,1,cs),
(746.667,1,o),
(772.333,-0.333,o),
(793,-3,cs),
(809,-5,l),
(816,-5,ls),
(829.333,-5,o),
(836,0.333,o),
(836,11,cs),
(836,21.667,o),
(828.333,28,o),
(813,30,cs),
(796,32,ls),
(760,36,o),
(757,44.333,o),
(757,111,cs),
(757,277,ls),
(757,333.667,o),
(751.333,372.667,o),
(740,394,cs),
(718,435.333,o),
(678.667,456,o),
(622,456,cs),
(564.667,456,o),
(513,431.667,o),
(467,383,c),
(451.667,432.333,o),
(411.667,457,o),
(347,457,cs),
(286.333,457,o),
(235.333,435.667,o),
(194,393,c),
(194,415,o),
(194.667,431.333,o),
(196,442,cs),
(196,454,ls),
(196.667,458,o),
(197,462.667,o),
(197,468,cs),
(197,474.667,o),
(192.667,478,o),
(184,478,cs),
(177.333,478,o),
(172,475,o),
(168,469,cs),
(164,462,ls),
(142.667,430.667,o),
(115,409.667,o),
(81,399,cs),
(71,396,ls),
(58.333,392.667,o),
(52,387,o),
(52,379,cs),
(52,369,o),
(58.667,364,o),
(72,364,cs),
(82,363,ls),
(98,361.667,o),
(107.333,357.5,o),
(110,350.5,cs),
(112.667,343.5,o),
(114,322,o),
(114,286,cs),
(114,117,ls),
(114,81.667,o),
(112.167,59.5,o),
(108.5,50.5,cs),
(104.833,41.5,o),
(95,35.667,o),
(79,33,cs),
(60,30,ls),
(44,27.333,o),
(36,21.333,o),
(36,12,cs),
(36,1.333,o),
(41.667,-4,o),
(53,-4,cs),
(57,-4,o),
(61.667,-3.667,o),
(67,-3,cs),
(85,-1,ls),
(103,1,o),
(128.667,2,o),
(162,2,cs),
(160.667,2,o),
(179.333,0.667,o),
(218,-2,cs),
(232,-3,ls),
(236,-3.667,o),
(241.333,-4,o),
(248,-4,cs),
(260.667,-4,o),
(267,1,o),
(267,11,cs),
(267,21.667,o),
(260,28,o),
(246,30,cs),
(226,33,ls),
(211.333,35,o),
(202.167,40.833,o),
(198.5,50.5,cs),
(194.833,60.167,o),
(193,82.333,o),
(193,117,cs),
(193,347,l),
(193,347,l)
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */
10
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 3 values pushed */
1 27 13
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
1
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 3 values pushed */
91 116 13
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
91
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 3 values pushed */
60 84 13
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
60
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
1
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
44
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
44
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
1
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
46
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
46
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
1
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
49
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
49
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 3 values pushed */
53 116 91
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHW[ ]	/* 1 value pushed */
60
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
124
MDRP[11100]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
42
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
35
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
39
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
39 40
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
35
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
46
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
46 40
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
35
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
51
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
51 40
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
35
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
55
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
55 40
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
35
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
9
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
9 36
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
35
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
11
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
11 36
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
35
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
14
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
14 36
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
35
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
16
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
16 36
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
35
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
19
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
19 36
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
35
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
68
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
68 36
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
35
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
70
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
70 36
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
35
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
72
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
72 36
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
35
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
74
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
74 36
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
35
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
76
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
76 36
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
35
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
99
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
99 36
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
35
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
101
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
101 36
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
35
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
104
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
104 36
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
35
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
106
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
106 36
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
35
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
108
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
108 36
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 3 values pushed */
49 68 42
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHW[ ]	/* 3 values pushed */
53 68 42
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHW[ ]	/* 1 value pushed */
55
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
88
MDRP[11100]	/* MoveDirectRelPt */
NPUSHW[ ]	/* 5 values pushed */
57 88 73 88 2
DELTAP2[ ]	/* DeltaExceptionP2 */
NPUSHW[ ]	/* 21 values pushed */
104 88 120 88 136 88 152 88 168 88 184 88 200 88 216 88 232 88 248 88 10
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 7 values pushed */
8 88 24 88 40 88 3
DELTAP2[ ]	/* DeltaExceptionP2 */
PUSHW[ ]	/* 1 value pushed */
121
MDRP[10000]	/* MoveDirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 853;
}
);
note = m;
},
{
glyphname = n.001;
lastChange = "2025-01-13 19:00:14 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(111,45.911,o),
(111.814,36.215,o),
(68,28,cs),
(44,25,l),
(37.333,18.333,o),
(39.333,-0.333,o),
(46,-3,c),
(78,-1,o),
(113.667,0,o),
(153,0,cs),
(191,0,o),
(225.333,-1,o),
(256,-3,c),
(264,-0.333,o),
(266,18.333,o),
(258,25,c),
(238,28,ls),
(195.581,35.954,o),
(195,47.736,o),
(195,127,cs),
(195,300,ls),
(195,333.333,o),
(197.333,349.333,o),
(212,368,cs),
(228,389.333,o),
(264,408,o),
(308,408,cs),
(385.333,408,o),
(415,361.333,o),
(415,296,cs),
(415,127,ls),
(415,48.505,o),
(415.643,36.183,o),
(372,28,cs),
(350,25,l),
(343.333,18.333,o),
(345,-0.333,o),
(353,-3,c),
(383,-1,o),
(418,0,o),
(458,0,cs),
(496.667,0,o),
(529.333,-0.333,o),
(564,-3,c),
(572,-0.333,o),
(573.667,18.333,o),
(567,25,c),
(542,28,ls),
(500.292,35.82,o),
(499,43.413,o),
(499,127,cs),
(499,322,ls),
(499,395.192,o),
(462.086,462,o),
(366,462,cs),
(308.667,462,o),
(256.333,434.333,o),
(207,405,c),
(199,405,o),
(195,409,o),
(195,417,cs),
(195,422.333,o),
(195,429.333,o),
(195,438,cs),
(195,446.667,o),
(195.667,457.333,o),
(197,470,c),
(195,475.333,o),
(191,478,o),
(185,478,c),
(167.095,466.064,o),
(94.894,429.516,o),
(71,423,c),
(68.333,421.667,o),
(67,418.333,o),
(67,413,cs),
(67,408.333,o),
(68,404.667,o),
(70,402,c),
(80,396,ls),
(110.936,375.376,o),
(111,368.378,o),
(111,325,cs),
(111,127,l),
(111,127,l)
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */
65 2 0 4
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
65
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 4 values pushed */
32 2 55 4
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
32
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
65
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
17
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
17
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
65
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
19
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
65
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
21
MDRP[10000]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
0
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
17
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
17 10
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
26
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
26 10
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
41
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
41 4
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
44
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
44 4
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
46
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
46 4
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
75
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
75 4
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
77
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
77 4
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
79
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
79 4
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
17
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
23 1
MIRP[11100]	/* MoveIndirectRelPt */
NPUSHW[ ]	/* 5 values pushed */
185 23 201 23 2
DELTAP2[ ]	/* DeltaExceptionP2 */
NPUSHW[ ]	/* 33 values pushed */
8 23 24 23 40 23 56 23 72 23 88 23 104 23 120 23 136 23 152 23 168 23 184 23 200 23 216 23 232 23 248 23 16
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 23 values pushed */
8 23 24 23 40 23 56 23 72 23 88 23 104 23 120 23 136 23 152 23 168 23 11
DELTAP2[ ]	/* DeltaExceptionP2 */
PUSHW[ ]	/* 1 value pushed */
59
MDRP[10000]	/* MoveDirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 595;
}
);
note = n;
},
{
glyphname = n.002;
lastChange = "2025-01-14 07:04:22 +0000";
layers = (
{
hints = (
{
horizontal = 1;
place = (399,69);
type = Stem;
},
{
horizontal = 1;
place = (-4,35);
type = Stem;
},
{
place = (393,79);
type = Stem;
},
{
place = (100,78);
type = Stem;
}
);
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(162,468,l),
(39,410,l),
(39,379,l),
(82,370,o),
(97,370,o),
(97,330,cs),
(99,249,l),
(100,112,ls),
(100,67,o),
(90,36,o),
(76,36,cs),
(28,33,l),
(28,-3,l),
(91,1,o),
(136,0,o),
(137,0,cs),
(145,0,o),
(190,0,o),
(246,-5,c),
(246,33,l),
(200,34,ls),
(187,34,o),
(177,59,o),
(177,94,cs),
(175,342,l),
(175,342,o),
(246,398,o),
(302,398,cs),
(355,398,o),
(392,347,o),
(392,275,cs),
(392,117,ls),
(392,67,o),
(374,31,o),
(349,31,cs),
(323,31,l),
(323,-5,l),
(386,-1,o),
(431,-2,o),
(430,-2,cs),
(436,-2,o),
(481,-2,o),
(537,-7,c),
(537,31,l),
(495,32,ls),
(480,32,o),
(470,52,o),
(470,80,cs),
(470,281,ls),
(470,392,o),
(423,453,o),
(338,453,cs),
(273,453,o),
(176,378,o),
(176,378,c),
(180,456,l),
(180,456,l)
);
}
);
width = 568;
}
);
},
{
glyphname = n.003;
lastChange = "2025-01-13 19:00:14 +0000";
layers = (
{
hints = (
{
horizontal = 1;
place = (399,69);
type = Stem;
},
{
horizontal = 1;
place = (-4,35);
type = Stem;
},
{
place = (393,79);
type = Stem;
},
{
place = (100,78);
type = Stem;
}
);
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(162,468,l),
(39,410,l),
(39,379,l),
(82,371,l),
(97,330,l),
(99,249,l),
(100,112,l),
(95,63,l),
(89,48,l),
(76,36,l),
(28,33,l),
(28,-3,l),
(137,3,l),
(246,-5,l),
(246,33,l),
(200,34,l),
(188,41,l),
(180,57,l),
(177,94,l),
(175,342,l),
(218,373,l),
(256,388,l),
(302,398,l),
(341,389,l),
(363,373,l),
(383,346,l),
(392,275,l),
(392,117,l),
(390,71,l),
(384,50,l),
(373,39,l),
(349,31,l),
(323,31,l),
(323,-5,l),
(430,1,l),
(537,-7,l),
(537,31,l),
(495,32,l),
(474,50,l),
(470,80,l),
(470,281,l),
(463,365,l),
(447,401,l),
(414,433,l),
(369,450,l),
(338,453,l),
(296,447,l),
(258,429,l),
(176,378,l),
(180,456,l),
(180,456,l)
);
}
);
width = 568;
}
);
},
{
glyphname = n.004;
lastChange = "2025-01-13 19:00:14 +0000";
layers = (
{
hints = (
{
horizontal = 1;
place = (405,65);
type = Stem;
},
{
horizontal = 1;
place = (0,29);
type = Stem;
},
{
place = (380,92);
type = Stem;
},
{
place = (86,92);
type = Stem;
}
);
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(175,447,l),
(170,467,l),
(164,471,l),
(137,449,l),
(68,400,l),
(35,385,l),
(32,379,l),
(40,366,l),
(63,364,l),
(82,347,l),
(87,318,l),
(87,119,l),
(84,70,l),
(74,42,l),
(48,29,l),
(28,27,l),
(12,14,l),
(19,2,l),
(32,1,l),
(67,3,l),
(133,5,l),
(189,3,l),
(237,-1,l),
(245,-1,l),
(255,12,l),
(245,22,l),
(214,29,l),
(187,43,l),
(179,82,l),
(179,315,l),
(185,347,l),
(215,382,l),
(243,395,l),
(281,403,l),
(329,392,l),
(358,374,l),
(374,341,l),
(381,303,l),
(381,115,l),
(377,58,l),
(361,35,l),
(343,28,l),
(307,19,l),
(305,12,l),
(307,3,l),
(323,-2,l),
(354,2,l),
(385,2,l),
(432,3,l),
(487,1,l),
(529,-3,l),
(541,-2,l),
(548,11,l),
(540,22,l),
(507,28,l),
(492,32,l),
(480,45,l),
(474,90,l),
(474,323,l),
(462,392,l),
(427,432,l),
(377,454,l),
(335,460,l),
(273,448,l),
(238,429,l),
(206,400,l),
(183,385,l),
(175,395,l),
(176,409,l),
(176,409,l)
);
}
);
width = 553;
}
);
},
{
glyphname = n.005;
lastChange = "2025-01-13 19:00:14 +0000";
layers = (
{
hints = (
{
horizontal = 1;
place = (396,67);
type = Stem;
},
{
horizontal = 1;
place = (0,32);
type = Stem;
},
{
place = (378,77);
type = Stem;
},
{
place = (81,74);
type = Stem;
}
);
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(452,127,l),
(452,146,l),
(453,159,l),
(453,170,l),
(454,196,l),
(453,224,l),
(454,282,l),
(446,376,l),
(427,412,l),
(394,443,l),
(371,455,l),
(319,461,l),
(262,447,l),
(243,435,l),
(212,412,l),
(194,401,l),
(183,390,l),
(170,380,l),
(160,372,l),
(158,411,l),
(160,434,l),
(159,445,l),
(155,463,l),
(103,441,l),
(87,434,l),
(48,417,l),
(41,414,l),
(22,403,l),
(26,391,l),
(41,389,l),
(67,381,l),
(83,355,l),
(87,326,l),
(88,299,l),
(87,277,l),
(87,116,l),
(86,99,l),
(87,88,l),
(86,74,l),
(75,45,l),
(60,36,l),
(49,34,l),
(26,32,l),
(18,31,l),
(11,20,l),
(12,6,l),
(26,4,l),
(40,3,l),
(75,7,l),
(109,6,l),
(168,8,l),
(229,3,l),
(238,9,l),
(238,17,l),
(229,34,l),
(217,34,l),
(172,43,l),
(164,63,l),
(162,90,l),
(161,115,l),
(160,145,l),
(160,198,l),
(159,221,l),
(161,268,l),
(161,322,l),
(163,338,l),
(196,365,l),
(208,373,l),
(218,378,l),
(231,384,l),
(271,396,l),
(289,398,l),
(300,397,l),
(343,386,l),
(359,370,l),
(377,332,l),
(378,311,l),
(380,291,l),
(380,257,l),
(381,227,l),
(380,192,l),
(380,122,l),
(378,88,l),
(377,62,l),
(362,39,l),
(322,34,l),
(313,34,l),
(302,27,l),
(302,5,l),
(336,5,l),
(384,8,l),
(405,7,l),
(440,7,l),
(495,4,l),
(517,4,l),
(528,3,l),
(532,10,l),
(532,20,l),
(531,32,l),
(522,34,l),
(489,37,l),
(461,54,l),
(456,92,l),
(458,109,l),
(456,122,l),
(456,122,l)
);
}
);
width = 530;
}
);
},
{
glyphname = n.006;
lastChange = "2025-01-13 19:00:14 +0000";
layers = (
{
hints = (
{
horizontal = 1;
place = (405,64);
type = Stem;
},
{
horizontal = 1;
place = (-2,30);
type = Stem;
},
{
place = (374,75);
type = Stem;
},
{
place = (85,73);
type = Stem;
}
);
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(449,232,l),
(448,311,l),
(433,390,l),
(411,420,l),
(383,440,l),
(354,453,l),
(315,458,l),
(268,453,l),
(199,420,l),
(162,392,l),
(163,421,l),
(165,448,l),
(161,464,l),
(150,469,l),
(127,448,l),
(73,398,l),
(45,371,l),
(58,359,l),
(80,332,l),
(84,288,l),
(82,227,l),
(84,181,l),
(86,92,l),
(75,42,l),
(35,22,l),
(29,11,l),
(33,4,l),
(50,0,l),
(91,2,l),
(222,2,l),
(240,6,l),
(242,13,l),
(231,25,l),
(214,28,l),
(177,38,l),
(165,55,l),
(160,105,l),
(157,132,l),
(159,162,l),
(158,199,l),
(161,242,l),
(159,278,l),
(163,309,l),
(168,356,l),
(197,383,l),
(223,396,l),
(272,406,l),
(302,404,l),
(320,398,l),
(348,374,l),
(365,342,l),
(370,310,l),
(373,271,l),
(375,153,l),
(374,104,l),
(372,72,l),
(364,48,l),
(316,26,l),
(299,13,l),
(304,0,l),
(315,-1,l),
(345,-1,l),
(402,2,l),
(465,0,l),
(491,-2,l),
(504,9,l),
(492,23,l),
(473,30,l),
(452,49,l),
(451,89,l),
(452,177,l),
(452,177,l)
);
}
);
width = 547;
}
);
},
{
glyphname = n.007;
lastChange = "2025-01-13 19:00:14 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(197,469.333,o),
(193.333,475,o),
(186,475,cs),
(180.667,475,o),
(173,469.333,o),
(163,458,cs),
(145,436.667,o),
(110,414.667,o),
(58,392,cs),
(50,389.333,o),
(46,385,o),
(46,379,cs),
(46,371,o),
(50.667,366.667,o),
(60,366,cs),
(101.333,363.333,o),
(104,360.667,o),
(104,294,cs),
(104,100,ls),
(104,37.333,o),
(100,32.5,o),
(60,26.5,cs),
(40,23.5,o),
(30,17.667,o),
(30,9,cs),
(30,1,o),
(35.667,-3,o),
(47,-3,cs),
(53.667,-3,o),
(58.667,-2.667,o),
(62,-2,cs),
(107.333,0.667,o),
(137.667,2,o),
(153,2,cs),
(171,2,o),
(193,1,o),
(219,-1,cs),
(237,-2.333,o),
(249.333,-3,o),
(256,-3,cs),
(268,-3,o),
(274,1,o),
(274,9,cs),
(274,33.35,o),
(219.979,18.963,o),
(207.5,42,cs),
(203.167,50,o),
(201,69.333,o),
(201,100,cs),
(201,313,ls),
(201,341.667,o),
(208.667,362.667,o),
(224,376,cs),
(248,395.333,o),
(275.333,405,o),
(306,405,cs),
(340,405,o),
(366,394.333,o),
(384,373,cs),
(397.333,357,o),
(404,326.333,o),
(404,281,cs),
(404,100,ls),
(404,37.333,o),
(401.167,32.5,o),
(360.5,26.5,cs),
(340.167,23.5,o),
(330,17.667,o),
(330,9,cs),
(330,1,o),
(335.667,-3,o),
(347,-3,cs),
(354.333,-3,o),
(359.333,-2.667,o),
(362,-2,c),
(408,0.667,o),
(438.333,2,o),
(453,2,cs),
(471,2,o),
(493.333,1,o),
(520,-1,cs),
(537.333,-2.333,o),
(549.333,-3,o),
(556,-3,cs),
(568,-3,o),
(574,1,o),
(574,9,cs),
(574,33.35,o),
(519.979,18.963,o),
(507.5,42,cs),
(503.167,50,o),
(501,69.333,o),
(501,100,cs),
(501,329,ls),
(501,372.333,o),
(489.333,404.667,o),
(466,426,cs),
(439.333,451.333,o),
(404,464,o),
(360,464,cs),
(305.333,464,o),
(271.333,448.667,o),
(214,394,c),
(208.667,390,o),
(204.333,388,o),
(201,388,cs),
(198.333,388,o),
(197,395,o),
(197,409,cs),
(197,458,l),
(197,458,l)
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */
10
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
77
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
78
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
77
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
63
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
63
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
43
MDRP[11100]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
0
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
0
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
43
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
3
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
3
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
78
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
13
MDRP[11100]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
33
MDRP[11100]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
75
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
37
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
0
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
0 42
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
37
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
8
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
8 42
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
37
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
73
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
73 42
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
37
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
19
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
19 38
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
37
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
21
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
21 38
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
37
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
23
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
23 38
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
37
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
25
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
25 38
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
37
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
27
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
27 38
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
37
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
49
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
49 38
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
37
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
51
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
51 38
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
37
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
53
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
53 38
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
37
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
55
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
55 38
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
37
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
57
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
57 38
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
8
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
38
MDRP[11100]	/* MoveDirectRelPt */
NPUSHW[ ]	/* 5 values pushed */
57 38 73 38 2
DELTAP2[ ]	/* DeltaExceptionP2 */
NPUSHW[ ]	/* 21 values pushed */
104 38 120 38 136 38 152 38 168 38 184 38 200 38 216 38 232 38 248 38 10
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 7 values pushed */
8 38 24 38 40 38 3
DELTAP2[ ]	/* DeltaExceptionP2 */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 588;
}
);
note = n;
},
{
glyphname = n.008;
lastChange = "2025-01-13 19:20:56 +0000";
layers = (
{
background = {
shapes = (
{
closed = 1;
nodes = (
(486.333,287.667,o),
(486,293,o),
(486,297,cs),
(487,331,ls),
(487.667,355,o),
(480.667,379.667,o),
(466,405,cs),
(444.667,442.333,o),
(411,461,o),
(365,461,cs),
(309.667,461,o),
(254,436,o),
(198,386,cs),
(194.667,383.333,o),
(192.333,381.5,o),
(191,380.5,cs),
(189.667,379.5,o),
(188.333,378.333,o),
(187,377,cs),
(186,376,l),
(182.667,378,o),
(181,381.667,o),
(181,387,cs),
(181,388.333,o),
(181.333,389.667,o),
(182,391,c),
(181,422,ls),
(181,425.333,o),
(181.667,430.167,o),
(183,436.5,cs),
(184.333,442.833,o),
(185,447.333,o),
(185,450,cs),
(185,460.667,o),
(181.667,466,o),
(175,466,cs),
(173.667,466,o),
(171.333,465,o),
(168,463,c),
(162,461,ls),
(151.333,456.333,o),
(142,452,o),
(134,448,cs),
(106.667,435.333,o),
(81.333,425,o),
(58,417,cs),
(48.667,413,o),
(44,408,o),
(44,402,cs),
(44,396,o),
(48.333,392,o),
(57,390,cs),
(91.667,380.667,o),
(103.667,373.333,o),
(105,344,cs),
(106.333,312.667,o),
(107,300,o),
(107,306,cs),
(107,304,o),
(106.667,301,o),
(106,297,cs),
(105.333,293,o),
(105,288.667,o),
(105,284,cs),
(107,216,l),
(106.333,204.667,o),
(105.667,196,o),
(105,190,c),
(105.667,174.667,o),
(106,163.333,o),
(106,156,cs),
(105,114,ls),
(105,110,o),
(105.333,105.333,o),
(106,100,cs),
(106,92,ls),
(106,74.667,o),
(105,62,o),
(103,54,cs),
(99,40.667,o),
(88.667,32.333,o),
(72,29,cs),
(46,25,o),
(33,20.333,o),
(33,15,cs),
(33.667,0.333,o),
(37.667,-7,o),
(45,-7,cs),
(47.667,-7,o),
(50.667,-6.333,o),
(54,-5,c),
(70,-4,l),
(94,-3,ls),
(103.333,-2.333,o),
(112,-2,o),
(120,-2,cs),
(135,-1,l),
(244,-2,ls),
(257.333,-2,o),
(260,-1,o),
(260,15,cs),
(260,21,o),
(258.5,24.667,o),
(255.5,26,cs),
(252.5,27.333,o),
(242.667,29,o),
(226,31,cs),
(186,33.667,o),
(183,46.667,o),
(183,76,cs),
(183,79.333,o),
(183.5,82.5,o),
(184.5,85.5,cs),
(185.5,88.5,o),
(186,90.333,o),
(186,91,cs),
(182,123,o),
(180.667,169.333,o),
(182,230,cs),
(183,268,ls),
(183,270.667,o),
(182.667,274,o),
(182,278,cs),
(181.333,282,o),
(181,288.333,o),
(181,297,cs),
(181,341,o),
(182.333,343.667,o),
(229,369,cs),
(234.333,372.333,o),
(238.667,375,o),
(242,377,cs),
(268,391.667,o),
(290,399,o),
(308,399,cs),
(342,399,o),
(367.333,389.667,o),
(384,371,cs),
(396.667,357.667,o),
(403.667,331.667,o),
(405,293,cs),
(406,254,ls),
(406,244,o),
(406.667,230,o),
(408,212,cs),
(408,210,o),
(407.667,205.5,o),
(407,198.5,cs),
(406.333,191.5,o),
(406,180.333,o),
(406,165,cs),
(406,153,o),
(406.333,143,o),
(407,135,cs),
(407.667,131.667,o),
(408,127.667,o),
(408,123,cs),
(408,126.333,o),
(407.667,120.667,o),
(407,106,cs),
(406,84,ls),
(403.333,32,o),
(401.333,28.667,o),
(340,26,cs),
(331.333,25.333,o),
(327,20.333,o),
(327,11,cs),
(327,0.333,o),
(330.333,-5,o),
(337,-5,cs),
(344.333,-4.333,o),
(363.667,-3.333,o),
(395,-2,cs),
(445,0,o),
(467.333,1,o),
(462,1,cs),
(466.667,1,o),
(471.333,0.667,o),
(476,0,cs),
(507,-1,ls),
(517,-1.667,o),
(525.667,-2.667,o),
(533,-4,cs),
(547,-5,ls),
(555,-6.333,o),
(559,-0.333,o),
(559,13,cs),
(559,38.749,o),
(518.517,22.83,o),
(498,39.5,cs),
(480.917,53.38,o),
(487,122.714,o),
(487,159,cs),
(487,281,l),
(487,281,l)
);
}
);
};
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(69,0,o),
(108,0,o),
(143,0,cs),
(182,0,o),
(229,-2,o),
(259,-2,c),
(259,26,l),
(234,29,o),
(183,23,o),
(183,69,c),
(182,358,l),
(182,394,o),
(179,422,o),
(186,458,c),
(179,468,l),
(136,448,o),
(92,430,o),
(45,412,c),
(45,393,l),
(76,387,o),
(105,378,o),
(105,345,cs),
(105,317,o),
(105,87,o),
(105,69,cs),
(105,27,o),
(67,29,o),
(36,21,c),
(36,-2,l)
);
},
{
closed = 1;
nodes = (
(403,20,o),
(376,28,o),
(327,24,c),
(327,-2,l),
(360,0,o),
(411,0,o),
(447,0,cs),
(486,0,o),
(528,-2,o),
(558,-2,c),
(558,26,l),
(530,29,o),
(489,23,o),
(489,79,cs),
(489,124,o),
(491,258,o),
(487,333,cs),
(483,417,o),
(425,462,o),
(362,462,cs),
(244,462,o),
(138,324,o),
(138,324,c),
(139,303,l),
(139,303,o),
(244,399,o),
(309,399,cs),
(374,399,o),
(403,368,o),
(407,284,cs),
(410,217,o),
(406,123,o),
(405,79,cs)
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */
10
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
136
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
137
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
133
MDRP[11100]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
0
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
0
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
133
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
39
MDRP[11100]	/* MoveDirectRelPt */
PUSHW[ ]	/* 3 values pushed */
15 133 39
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHW[ ]	/* 1 value pushed */
26
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
26
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
39
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
29
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
29
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
39
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
31
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
31
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
39
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
33
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
33
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
39
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
36
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
36
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
136
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
93
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
93
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
50
MDRP[11100]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
53
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
53
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
50
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
56
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
56
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
50
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
59
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
59
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
93
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
82
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
82
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
93
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
84
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
84
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
93
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
87
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
93
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
90
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
93
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
96
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
96
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
93
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
98
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
50
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
112
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
112
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
50
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
114
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
114
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
50
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
117
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
50
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
120
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
50
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
122
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
122
MDAP[1]	/* MoveDirectAbsPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
37
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
109
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
109 42
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
37
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
112
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
112 42
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
37
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
128
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
128 42
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
37
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
9
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
9 38
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
37
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
12
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
12 38
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
37
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
15
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
15 38
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
37
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
17
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
17 38
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
37
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
19
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
19 38
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
37
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
68
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
68 38
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
37
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
70
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
70 38
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
37
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
72
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
72 38
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
37
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
74
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
74 38
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
37
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
76
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
76 38
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
19
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
23
MDRP[11100]	/* MoveDirectRelPt */
NPUSHW[ ]	/* 21 values pushed */
103 23 119 23 135 23 151 23 167 23 183 23 199 23 215 23 231 23 247 23 10
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 7 values pushed */
7 23 23 23 39 23 3
DELTAP2[ ]	/* DeltaExceptionP2 */
NPUSHW[ ]	/* 5 values pushed */
54 23 70 23 2
DELTAP2[ ]	/* DeltaExceptionP2 */
PUSHW[ ]	/* 1 value pushed */
62
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 3 values pushed */
96 76 112
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 580;
}
);
note = n;
},
{
glyphname = n.009;
lastChange = "2025-01-13 19:08:23 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(177,486.333,o),
(173.333,485,o),
(170,485,cs),
(166.667,485,o),
(163,486.333,o),
(159,489,c),
(138.333,445.667,o),
(102.333,421.667,o),
(51,417,c),
(53,411.667,o),
(54,408,o),
(54,406,cs),
(54,403.333,o),
(53,400,o),
(51,396,c),
(108.333,386.667,o),
(112,383,o),
(112,339,cs),
(112,197,ls),
(112,117.667,o),
(109.333,67.333,o),
(104,46,cs),
(102,36,o),
(89.667,29.667,o),
(67,27,cs),
(34,24,l),
(37.333,18,o),
(39,13,o),
(39,9,cs),
(39,7,o),
(37.667,3,o),
(35,-3,c),
(60,-2,ls),
(126.667,0.667,o),
(156.667,2,o),
(150,2,cs),
(142.667,2,o),
(172.333,0.667,o),
(239,-2,cs),
(264,-3,l),
(262,3,o),
(261,7,o),
(261,9,cs),
(261,13,o),
(262.333,18,o),
(265,24,c),
(232,27,ls),
(209.333,29.667,o),
(197,36,o),
(195,46,cs),
(189.667,67.333,o),
(187,117.667,o),
(187,197,cs),
(187,362,l),
(231.667,396.667,o),
(274,414,o),
(314,414,cs),
(378,414,o),
(424,380,o),
(424,280,cs),
(424,197,ls),
(424,135.667,o),
(422.333,90.667,o),
(419,62,cs),
(416.333,34,o),
(411.333,29.667,o),
(374,27,cs),
(338,24,l),
(340.667,18.667,o),
(342,14,o),
(342,10,cs),
(342,7,o),
(340.667,2.333,o),
(338,-3,c),
(364,-2,ls),
(433.333,0.667,o),
(463,2,o),
(453,2,cs),
(446.333,2,o),
(476.333,0.667,o),
(543,-2,cs),
(568,-3,l),
(565.333,3,o),
(564,7,o),
(564,9,cs),
(564,13,o),
(565.667,18,o),
(569,24,c),
(541,27,ls),
(520.333,29.667,o),
(509,36,o),
(507,46,cs),
(501.667,67.333,o),
(499,117.667,o),
(499,197,cs),
(499,272,ls),
(499,324.667,o),
(495.667,361.333,o),
(489,382,cs),
(479,409.333,o),
(460,430.333,o),
(432,445,cs),
(408,459,o),
(380,466,o),
(348,466,cs),
(314.667,466,o),
(277,455.333,o),
(235,434,c),
(181,385,l),
(181,489,l),
(181,489,l)
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */
10
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
81
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
82
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
81
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
66
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
66
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
42
MDRP[11100]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
0
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
0
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
82
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
10
MDRP[11100]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
35
MDRP[11100]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
5
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
5
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
10
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
12
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
12
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
66
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
64
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
64
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 3 values pushed */
25 64 12
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHW[ ]	/* 3 values pushed */
29 64 12
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHW[ ]	/* 1 value pushed */
35
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
33
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
33
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
42
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
44
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
44
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 3 values pushed */
47 64 12
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHW[ ]	/* 3 values pushed */
51 64 12
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHW[ ]	/* 3 values pushed */
80 66 42
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
76
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
78
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
80
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
33
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
3
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
3 38
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
33
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
19
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
19 34
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
33
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
22
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
22 34
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
33
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
24
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
24 34
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
33
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
51
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
51 34
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
33
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
54
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
54 34
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
33
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
56
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
56 34
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 3 values pushed */
0 19 76
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHW[ ]	/* 1 value pushed */
19
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
14
MDRP[11100]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
29
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
29
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
30
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
3
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
39
MDRP[11100]	/* MoveDirectRelPt */
NPUSHW[ ]	/* 5 values pushed */
57 39 73 39 2
DELTAP2[ ]	/* DeltaExceptionP2 */
NPUSHW[ ]	/* 21 values pushed */
104 39 120 39 136 39 152 39 168 39 184 39 200 39 216 39 232 39 248 39 10
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 7 values pushed */
8 39 24 39 40 39 3
DELTAP2[ ]	/* DeltaExceptionP2 */
PUSHW[ ]	/* 1 value pushed */
30
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
46
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
47
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
47
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
61
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
61
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
62
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 3 values pushed */
70 19 76
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHW[ ]	/* 1 value pushed */
39
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
74
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
74
MDAP[1]	/* MoveDirectAbsPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 596;
}
);
note = n;
},
{
glyphname = n.010;
lastChange = "2025-01-13 19:06:42 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(103.292,382.922,o),
(97.676,354.897,o),
(100,248,cs),
(100,112,ls),
(100,65.442,o),
(99.6,54.6,o),
(89,44,cs),
(83.667,38.667,o),
(77,35,o),
(69,33,cs),
(61,31,o),
(47.667,30,o),
(29,30,c),
(29,-5,l),
(65,-2.333,o),
(102,0,o),
(138,0,cs),
(175.333,0,o),
(210.667,-2.333,o),
(248,-5,c),
(248,30,l),
(181.607,30,o),
(181.625,38.885,o),
(179,94,cs),
(177,343,l),
(197.12,360.605,o),
(238.744,400,o),
(305,400,cs),
(390.613,400,o),
(394,325.545,o),
(394,275,cs),
(394,118,ls),
(394,44.065,o),
(397.407,32.896,o),
(325,30,c),
(325,-5,l),
(359.667,-2.333,o),
(397,0,o),
(433,0,cs),
(467.667,0,o),
(505.333,-2.333,o),
(540,-5,c),
(540,30,l),
(483.2,32.84,o),
(473,37.781,o),
(473,82,cs),
(473,284,ls),
(473,344.158,o),
(472.572,404.245,o),
(417,436,cs),
(390.333,452,o),
(363,457,o),
(339,457,cs),
(303.719,457,o),
(274.165,446.586,o),
(177,381,c),
(177,429.796,o),
(177.371,416.456,o),
(181,460,c),
(162,469,l),
(106.029,435.926,o),
(92.273,429.627,o),
(39,410,c),
(39,380,l),
(39,380,l)
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */
83
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
84
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
83
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
76
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
76
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 2 values pushed */
55 2
MIRP[11100]	/* MoveIndirectRelPt */
PUSHW[ ]	/* 1 value pushed */
6
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
6
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
55
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
11
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
11
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
84
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
25
MDRP[11100]	/* MoveDirectRelPt */
PUSHW[ ]	/* 2 values pushed */
43 2
MIRP[11100]	/* MoveIndirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
0
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
5
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
5 14
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
6
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
6 14
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
16
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
16 14
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
31
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
31 4
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
34
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
34 4
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
37
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
37 4
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
61
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
61 4
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
64
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
64 4
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
67
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
67 4
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 3 values pushed */
11 31 5
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHW[ ]	/* 1 value pushed */
31
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
30 1
MIRP[11100]	/* MoveIndirectRelPt */
PUSHW[ ]	/* 1 value pushed */
38
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
16
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
49 1
MIRP[11100]	/* MoveIndirectRelPt */
NPUSHW[ ]	/* 5 values pushed */
153 49 169 49 2
DELTAP2[ ]	/* DeltaExceptionP2 */
NPUSHW[ ]	/* 33 values pushed */
8 49 24 49 40 49 56 49 72 49 88 49 104 49 120 49 136 49 152 49 168 49 184 49 200 49 216 49 232 49 248 49 16
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 19 values pushed */
8 49 24 49 40 49 56 49 72 49 88 49 104 49 120 49 136 49 9
DELTAP2[ ]	/* DeltaExceptionP2 */
PUSHW[ ]	/* 1 value pushed */
38
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
60
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
68
MDRP[10000]	/* MoveDirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 571;
}
);
note = n;
},
{
glyphname = n.011;
lastChange = "2025-01-13 19:06:07 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(223.333,379.667,o),
(263.333,397,o),
(314,397,cs),
(375.333,397,o),
(410,373,o),
(410,277,cs),
(410,141,ls),
(410,91,o),
(408.333,61.5,o),
(405,52.5,cs),
(401.667,43.5,o),
(391.333,38,o),
(374,36,cs),
(351,33,ls),
(333.667,30.333,o),
(325,23.333,o),
(325,12,cs),
(325,-0.667,o),
(331.667,-6.333,o),
(345,-5,cs),
(347.667,-5,o),
(351,-4.667,o),
(355,-4,cs),
(378,-2,ls),
(402.667,0,o),
(428,1,o),
(454,1,cs),
(489.333,1,o),
(515,0,o),
(531,-2,cs),
(546,-4,l),
(547.333,-4.667,o),
(550,-5,o),
(554,-5,cs),
(567.333,-6.333,o),
(574,-0.667,o),
(574,12,cs),
(574,22.667,o),
(565,29.333,o),
(547,32,cs),
(529,35,ls),
(511,37.667,o),
(500,44.667,o),
(496,56,cs),
(492,67.333,o),
(490,96,o),
(490,142,cs),
(490,261,ls),
(490,321,o),
(485.333,363,o),
(476,387,cs),
(456.667,433.667,o),
(415.667,457,o),
(353,457,cs),
(290.333,457,o),
(255.333,441,o),
(194,389,c),
(194,426,ls),
(194,438,o),
(194.333,444.667,o),
(195,446,c),
(196,458,ls),
(196.667,470.667,o),
(191.667,477,o),
(181,477,cs),
(175,477,o),
(168.667,472.333,o),
(162,463,cs),
(153,453,ls),
(129,423,o),
(102.333,404.333,o),
(73,397,cs),
(64,395,ls),
(51.333,391.667,o),
(45,386,o),
(45,378,cs),
(45,368.667,o),
(51.667,364,o),
(65,364,cs),
(77,363,ls),
(94.333,363,o),
(105,359,o),
(109,351,cs),
(111,347,o),
(112.333,341.667,o),
(113,335,cs),
(113.667,328.333,o),
(114,309.667,o),
(114,279,cs),
(114,129,ls),
(114,86.333,o),
(112,60.333,o),
(108,51,cs),
(104,41.667,o),
(92,36,o),
(72,34,cs),
(53,32,ls),
(36.333,30,o),
(28,23.333,o),
(28,12,cs),
(28,-0.667,o),
(34.667,-6.333,o),
(48,-5,cs),
(57,-4,l),
(86,-2,ls),
(115.333,0,o),
(141,1,o),
(163,1,cs),
(181,1,o),
(202,0,o),
(226,-2,cs),
(250,-4,l),
(258,-4,ls),
(271.333,-4,o),
(278,1.667,o),
(278,13,cs),
(278,24.333,o),
(270,30.667,o),
(254,32,cs),
(231,34,ls),
(213,35.333,o),
(202,41.333,o),
(198,52,cs),
(195.333,58.667,o),
(194,84.333,o),
(194,129,cs),
(194,345,l),
(194,345,l)
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */
10
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
89
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
90
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
89
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
26
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
26
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
1
MDRP[11100]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
3
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
3
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
26
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
30
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
30
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
1
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
45
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
45
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
1
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
48
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
90
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
57
MDRP[11100]	/* MoveDirectRelPt */
PUSHW[ ]	/* 3 values pushed */
49 30 57
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHW[ ]	/* 1 value pushed */
83
MDRP[11100]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
43
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
35
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
40
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
40 40
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
35
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
41
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
41 40
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
35
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
45
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
45 40
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
35
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
52
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
52 40
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
35
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
10
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
10 36
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
35
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
12
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
12 36
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
35
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
14
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
14 36
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
35
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
16
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
16 36
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
35
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
18
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
18 36
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
35
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
65
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
65 36
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
35
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
67
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
67 36
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
35
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
70
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
70 36
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
35
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
72
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
72 36
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
35
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
75
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
75 36
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 3 values pushed */
49 18 43
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHW[ ]	/* 1 value pushed */
52
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
87
MDRP[11100]	/* MoveDirectRelPt */
NPUSHW[ ]	/* 5 values pushed */
57 87 73 87 2
DELTAP2[ ]	/* DeltaExceptionP2 */
NPUSHW[ ]	/* 21 values pushed */
104 87 120 87 136 87 152 87 168 87 184 87 200 87 216 87 232 87 248 87 10
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 7 values pushed */
8 87 24 87 40 87 3
DELTAP2[ ]	/* DeltaExceptionP2 */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 587;
}
);
note = n;
},
{
glyphname = o.001;
lastChange = "2025-01-13 19:00:14 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(414,119.335,o),
(382.076,18,o),
(283,18,cs),
(184.651,18,o),
(137,127.005,o),
(137,232,cs),
(137,357.333,o),
(192,428,o),
(268,428,cs),
(372.822,428,o),
(414,312.09,o),
(414,210,cs)
);
},
{
closed = 1;
nodes = (
(148.053,462,o),
(40,363.089,o),
(40,218,cs),
(40,74.105,o),
(142.598,-16,o),
(272,-16,cs),
(413.975,-16,o),
(511,85.434,o),
(511,228,cs),
(511,367.836,o),
(407.988,462,o),
(281,462,cs)
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */
38
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
39
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
23
MDRP[11100]	/* MoveDirectRelPt */
PUSHW[ ]	/* 2 values pushed */
0 3
MIRP[11100]	/* MoveIndirectRelPt */
NPUSHW[ ]	/* 5 values pushed */
154 0 170 0 2
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 19 values pushed */
9 0 25 0 41 0 57 0 73 0 89 0 105 0 121 0 137 0 9
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHW[ ]	/* 1 value pushed */
38
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
33
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
33
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 2 values pushed */
8 3
MIRP[11100]	/* MoveIndirectRelPt */
NPUSHW[ ]	/* 19 values pushed */
6 8 22 8 38 8 54 8 70 8 86 8 102 8 118 8 134 8 9
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 5 values pushed */
149 8 165 8 2
DELTAP1[ ]	/* DeltaExceptionP1 */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
0
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
18
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
18 10
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
28
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
28 4
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
18
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
5 1
MIRP[11100]	/* MoveIndirectRelPt */
NPUSHW[ ]	/* 5 values pushed */
185 5 201 5 2
DELTAP2[ ]	/* DeltaExceptionP2 */
NPUSHW[ ]	/* 33 values pushed */
8 5 24 5 40 5 56 5 72 5 88 5 104 5 120 5 136 5 152 5 168 5 184 5 200 5 216 5 232 5 248 5 16
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 23 values pushed */
8 5 24 5 40 5 56 5 72 5 88 5 104 5 120 5 136 5 152 5 168 5 11
DELTAP2[ ]	/* DeltaExceptionP2 */
PUSHW[ ]	/* 1 value pushed */
28
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
13 1
MIRP[11100]	/* MoveIndirectRelPt */
NPUSHW[ ]	/* 33 values pushed */
7 13 23 13 39 13 55 13 71 13 87 13 103 13 119 13 135 13 151 13 167 13 183 13 199 13 215 13 231 13 247 13 16
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 23 values pushed */
7 13 23 13 39 13 55 13 71 13 87 13 103 13 119 13 135 13 151 13 167 13 11
DELTAP2[ ]	/* DeltaExceptionP2 */
NPUSHW[ ]	/* 5 values pushed */
182 13 198 13 2
DELTAP2[ ]	/* DeltaExceptionP2 */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 551;
}
);
note = o;
},
{
glyphname = o.002;
lastChange = "2025-01-14 06:59:56 +0000";
layers = (
{
hints = (
{
horizontal = 1;
place = (421,40);
type = Stem;
},
{
horizontal = 1;
place = (-14,41);
type = Stem;
},
{
place = (424,83);
type = Stem;
},
{
place = (39,85);
type = Stem;
}
);
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(508,362,o),
(410,461,o),
(272,461,cs),
(136,461,o),
(39,361,o),
(39,220,cs),
(39,83,o),
(136,-14,o),
(272,-14,cs),
(410,-14,o),
(508,83,o),
(508,221,cs)
);
},
{
closed = 1;
nodes = (
(124,347,o),
(181,421,o),
(262,421,cs),
(357,421,o),
(424,334,o),
(424,210,cs),
(424,103,o),
(365,27,o),
(282,27,cs),
(189,27,o),
(124,116,o),
(124,243,cs)
);
}
);
width = 548;
}
);
},
{
glyphname = o.003;
lastChange = "2025-01-13 19:00:14 +0000";
layers = (
{
hints = (
{
horizontal = 1;
place = (421,40);
type = Stem;
},
{
horizontal = 1;
place = (-14,41);
type = Stem;
},
{
place = (424,83);
type = Stem;
},
{
place = (39,85);
type = Stem;
}
);
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(272,461,l),
(201,451,l),
(147,426,l),
(84,365,l),
(58,322,l),
(43,280,l),
(39,220,l),
(44,158,l),
(59,116,l),
(88,72,l),
(139,23,l),
(202,-7,l),
(272,-14,l),
(345,-7,l),
(400,18,l),
(466,84,l),
(492,134,l),
(508,221,l),
(500,287,l),
(480,341,l),
(431,407,l),
(386,438,l),
(344,453,l),
(344,453,l)
);
},
{
closed = 1;
nodes = (
(262,421,l),
(312,412,l),
(345,396,l),
(376,359,l),
(402,311,l),
(424,210,l),
(405,118,l),
(373,65,l),
(323,33,l),
(282,27,l),
(223,40,l),
(189,65,l),
(154,113,l),
(136,166,l),
(124,243,l),
(131,299,l),
(149,343,l),
(195,398,l),
(195,398,l)
);
}
);
width = 548;
}
);
},
{
glyphname = o.004;
lastChange = "2025-01-13 19:00:14 +0000";
layers = (
{
hints = (
{
horizontal = 1;
place = (441,22);
type = Stem;
},
{
horizontal = 1;
place = (-11,22);
type = Stem;
},
{
place = (405,101);
type = Stem;
},
{
place = (25,104);
type = Stem;
}
);
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(25,232,l),
(28,179,l),
(43,130,l),
(69,83,l),
(105,46,l),
(150,14,l),
(196,-4,l),
(267,-12,l),
(317,-10,l),
(366,6,l),
(410,32,l),
(448,71,l),
(478,114,l),
(495,159,l),
(506,228,l),
(493,310,l),
(470,360,l),
(435,400,l),
(374,439,l),
(325,456,l),
(268,462,l),
(202,454,l),
(141,428,l),
(87,388,l),
(49,331,l),
(27,274,l),
(27,274,l)
);
},
{
closed = 1;
nodes = (
(129,231,l),
(134,282,l),
(147,335,l),
(170,383,l),
(206,422,l),
(232,434,l),
(263,441,l),
(318,423,l),
(346,398,l),
(377,357,l),
(400,278,l),
(405,226,l),
(397,158,l),
(382,106,l),
(361,66,l),
(338,38,l),
(297,17,l),
(267,11,l),
(235,17,l),
(209,31,l),
(168,78,l),
(138,152,l),
(138,152,l)
);
}
);
width = 535;
}
);
},
{
glyphname = o.005;
lastChange = "2025-01-13 19:00:14 +0000";
layers = (
{
hints = (
{
horizontal = 1;
place = (432,32);
type = Stem;
},
{
horizontal = 1;
place = (-11,34);
type = Stem;
},
{
place = (410,95);
type = Stem;
},
{
place = (24,91);
type = Stem;
}
);
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(256,463,l),
(162,439,l),
(88,382,l),
(73,364,l),
(44,313,l),
(30,277,l),
(24,222,l),
(25,177,l),
(37,133,l),
(59,92,l),
(101,49,l),
(148,16,l),
(196,-6,l),
(233,-9,l),
(266,-11,l),
(311,-8,l),
(381,22,l),
(437,67,l),
(476,119,l),
(492,155,l),
(505,233,l),
(495,293,l),
(481,336,l),
(467,355,l),
(435,396,l),
(405,420,l),
(340,453,l),
(317,460,l),
(317,460,l)
);
},
{
closed = 1;
nodes = (
(257,433,l),
(282,430,l),
(308,420,l),
(349,393,l),
(374,360,l),
(383,346,l),
(393,320,l),
(400,295,l),
(410,209,l),
(406,148,l),
(397,123,l),
(358,59,l),
(319,37,l),
(278,26,l),
(214,42,l),
(193,55,l),
(173,74,l),
(153,106,l),
(133,144,l),
(120,205,l),
(116,243,l),
(117,268,l),
(122,316,l),
(134,353,l),
(162,396,l),
(208,427,l),
(239,435,l),
(239,435,l)
);
}
);
width = 530;
}
);
},
{
glyphname = o.006;
lastChange = "2025-01-13 19:00:14 +0000";
layers = (
{
hints = (
{
horizontal = 1;
place = (428,32);
type = Stem;
},
{
horizontal = 1;
place = (-13,33);
type = Stem;
},
{
place = (414,83);
type = Stem;
},
{
place = (30,89);
type = Stem;
}
);
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(268,460,l),
(239,458,l),
(166,437,l),
(136,421,l),
(98,383,l),
(80,361,l),
(52,317,l),
(35,274,l),
(30,217,l),
(33,164,l),
(48,120,l),
(92,59,l),
(111,40,l),
(135,23,l),
(178,1,l),
(253,-13,l),
(325,-1,l),
(386,29,l),
(433,69,l),
(466,114,l),
(492,182,l),
(495,229,l),
(485,296,l),
(463,342,l),
(442,371,l),
(420,396,l),
(372,430,l),
(343,444,l),
(343,444,l)
);
},
{
closed = 1;
nodes = (
(257,426,l),
(318,415,l),
(364,375,l),
(385,344,l),
(401,313,l),
(414,226,l),
(399,130,l),
(369,83,l),
(329,40,l),
(300,24,l),
(260,17,l),
(215,27,l),
(185,46,l),
(153,89,l),
(124,171,l),
(119,226,l),
(126,297,l),
(140,344,l),
(168,384,l),
(202,410,l),
(202,410,l)
);
}
);
width = 547;
}
);
},
{
glyphname = o.007;
lastChange = "2025-01-13 19:00:14 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(146.333,464,o),
(37,357.333,o),
(37,228,cs),
(37,96,o),
(147.667,-9,o),
(285,-9,cs),
(418.333,-9,o),
(523,97.333,o),
(523,232,cs),
(523,308,o),
(496,367.333,o),
(442,410,cs),
(396,446,o),
(342.333,464,o),
(281,464,cs)
);
},
{
closed = 1;
nodes = (
(354,442,o),
(417,344.333,o),
(417,223,cs),
(417,108.333,o),
(354.333,13,o),
(281,13,cs),
(206.333,13,o),
(143,120.667,o),
(143,246,cs),
(143,360.667,o),
(196.667,442,o),
(274,442,cs)
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */
10
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
25
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
26
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
4
MDRP[11100]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
25
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
10
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
10
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
16
MDRP[11100]	/* MoveDirectRelPt */
NPUSHW[ ]	/* 21 values pushed */
102 16 118 16 134 16 150 16 166 16 182 16 198 16 214 16 230 16 246 16 10
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 7 values pushed */
6 16 22 16 38 16 3
DELTAP2[ ]	/* DeltaExceptionP2 */
NPUSHW[ ]	/* 5 values pushed */
53 16 69 16 2
DELTAP2[ ]	/* DeltaExceptionP2 */
PUSHW[ ]	/* 1 value pushed */
4
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
22
MDRP[11100]	/* MoveDirectRelPt */
NPUSHW[ ]	/* 5 values pushed */
58 22 74 22 2
DELTAP2[ ]	/* DeltaExceptionP2 */
NPUSHW[ ]	/* 21 values pushed */
105 22 121 22 137 22 153 22 169 22 185 22 201 22 217 22 233 22 249 22 10
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 7 values pushed */
9 22 25 22 41 22 3
DELTAP2[ ]	/* DeltaExceptionP2 */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
37
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
0
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
0 42
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
37
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
7
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
7 38
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
13
MDRP[11100]	/* MoveDirectRelPt */
NPUSHW[ ]	/* 5 values pushed */
57 13 73 13 2
DELTAP2[ ]	/* DeltaExceptionP2 */
NPUSHW[ ]	/* 21 values pushed */
104 13 120 13 136 13 152 13 168 13 184 13 200 13 216 13 232 13 248 13 10
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 7 values pushed */
8 13 24 13 40 13 3
DELTAP2[ ]	/* DeltaExceptionP2 */
PUSHW[ ]	/* 1 value pushed */
7
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
19
MDRP[11100]	/* MoveDirectRelPt */
NPUSHW[ ]	/* 21 values pushed */
103 19 119 19 135 19 151 19 167 19 183 19 199 19 215 19 231 19 247 19 10
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 7 values pushed */
7 19 23 19 39 19 3
DELTAP2[ ]	/* DeltaExceptionP2 */
NPUSHW[ ]	/* 5 values pushed */
54 19 70 19 2
DELTAP2[ ]	/* DeltaExceptionP2 */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 561;
}
);
note = o;
},
{
glyphname = o.008;
lastChange = "2025-01-13 19:00:14 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(269.333,463.667,o),
(253.333,462.667,o),
(248,462,cs),
(239.333,460.667,o),
(231.667,459.333,o),
(225,458,cs),
(191.667,452,o),
(158.667,435.333,o),
(126,408,cs),
(66,359.333,o),
(36,294.667,o),
(36,214,cs),
(36,148,o),
(62.333,90.667,o),
(115,42,cs),
(158.333,0.667,o),
(214,-20,o),
(282,-20,cs),
(347.333,-20,o),
(424.667,15,o),
(466,67,cs),
(506,114.333,o),
(526,165.667,o),
(526,221,cs),
(526,280.333,o),
(508.667,331.667,o),
(474,375,cs),
(423.333,436.333,o),
(364,466.333,o),
(296,465,cs)
);
},
{
closed = 1;
nodes = (
(314.333,431,o),
(348.667,415,o),
(376,383,cs),
(411.333,341,o),
(429,283.667,o),
(429,211,cs),
(429,91,o),
(375.667,17,o),
(285,17,cs),
(239.667,17,o),
(189.333,50.333,o),
(164,97,cs),
(146.667,127.667,o),
(130,198.667,o),
(130,244,cs),
(130,296,o),
(141.667,338.667,o),
(165,372,cs),
(192.333,411.333,o),
(228.333,431,o),
(273,431,cs)
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */
10
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
38
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
39
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
4
MDRP[11100]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
38
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
13
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
13
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
25
MDRP[11100]	/* MoveDirectRelPt */
NPUSHW[ ]	/* 21 values pushed */
102 25 118 25 134 25 150 25 166 25 182 25 198 25 214 25 230 25 246 25 10
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 7 values pushed */
6 25 22 25 38 25 3
DELTAP2[ ]	/* DeltaExceptionP2 */
NPUSHW[ ]	/* 5 values pushed */
53 25 69 25 2
DELTAP2[ ]	/* DeltaExceptionP2 */
PUSHW[ ]	/* 1 value pushed */
15
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
15
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
4
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
34
MDRP[11100]	/* MoveDirectRelPt */
NPUSHW[ ]	/* 5 values pushed */
58 34 74 34 2
DELTAP2[ ]	/* DeltaExceptionP2 */
NPUSHW[ ]	/* 21 values pushed */
105 34 121 34 137 34 153 34 169 34 185 34 201 34 217 34 233 34 249 34 10
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 7 values pushed */
9 34 25 34 41 34 3
DELTAP2[ ]	/* DeltaExceptionP2 */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
37
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
0
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
0 42
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
37
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
17
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
17 42
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
37
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
19
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
19 42
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
37
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
9
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
9 38
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
21
MDRP[11100]	/* MoveDirectRelPt */
NPUSHW[ ]	/* 5 values pushed */
57 21 73 21 2
DELTAP2[ ]	/* DeltaExceptionP2 */
NPUSHW[ ]	/* 21 values pushed */
104 21 120 21 136 21 152 21 168 21 184 21 200 21 216 21 232 21 248 21 10
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 7 values pushed */
8 21 24 21 40 21 3
DELTAP2[ ]	/* DeltaExceptionP2 */
PUSHW[ ]	/* 1 value pushed */
9
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
31
MDRP[11100]	/* MoveDirectRelPt */
NPUSHW[ ]	/* 21 values pushed */
103 31 119 31 135 31 151 31 167 31 183 31 199 31 215 31 231 31 247 31 10
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 7 values pushed */
7 31 23 31 39 31 3
DELTAP2[ ]	/* DeltaExceptionP2 */
NPUSHW[ ]	/* 5 values pushed */
54 31 70 31 2
DELTAP2[ ]	/* DeltaExceptionP2 */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 564;
}
);
note = o;
},
{
glyphname = o.009;
lastChange = "2025-01-13 19:00:14 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(152.333,467,o),
(44,365.333,o),
(44,228,cs),
(44,92,o),
(151.333,-19,o),
(282,-19,cs),
(419.333,-19,o),
(527,91.333,o),
(527,234,cs),
(527,370,o),
(432.333,467,o),
(299,467,cs)
);
},
{
closed = 1;
nodes = (
(376.333,439,o),
(440,334.667,o),
(440,188,cs),
(440,80,o),
(389,14,o),
(305,14,cs),
(203.667,14,o),
(130,113,o),
(130,253,cs),
(130,359.667,o),
(193.667,439,o),
(283,439,cs)
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */
10
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
24
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
25
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
3
MDRP[11100]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
24
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
9
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
9
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
15
MDRP[11100]	/* MoveDirectRelPt */
NPUSHW[ ]	/* 21 values pushed */
102 15 118 15 134 15 150 15 166 15 182 15 198 15 214 15 230 15 246 15 10
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 7 values pushed */
6 15 22 15 38 15 3
DELTAP2[ ]	/* DeltaExceptionP2 */
NPUSHW[ ]	/* 5 values pushed */
53 15 69 15 2
DELTAP2[ ]	/* DeltaExceptionP2 */
PUSHW[ ]	/* 1 value pushed */
3
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
21
MDRP[11100]	/* MoveDirectRelPt */
NPUSHW[ ]	/* 5 values pushed */
58 21 74 21 2
DELTAP2[ ]	/* DeltaExceptionP2 */
NPUSHW[ ]	/* 21 values pushed */
105 21 121 21 137 21 153 21 169 21 185 21 201 21 217 21 233 21 249 21 10
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 7 values pushed */
9 21 25 21 41 21 3
DELTAP2[ ]	/* DeltaExceptionP2 */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
33
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
0
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
0 38
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
33
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
6
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
6 34
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
12
MDRP[11100]	/* MoveDirectRelPt */
NPUSHW[ ]	/* 5 values pushed */
57 12 73 12 2
DELTAP2[ ]	/* DeltaExceptionP2 */
NPUSHW[ ]	/* 21 values pushed */
104 12 120 12 136 12 152 12 168 12 184 12 200 12 216 12 232 12 248 12 10
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 7 values pushed */
8 12 24 12 40 12 3
DELTAP2[ ]	/* DeltaExceptionP2 */
PUSHW[ ]	/* 1 value pushed */
6
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
18
MDRP[11100]	/* MoveDirectRelPt */
NPUSHW[ ]	/* 21 values pushed */
103 18 119 18 135 18 151 18 167 18 183 18 199 18 215 18 231 18 247 18 10
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 7 values pushed */
7 18 23 18 39 18 3
DELTAP2[ ]	/* DeltaExceptionP2 */
NPUSHW[ ]	/* 5 values pushed */
54 18 70 18 2
DELTAP2[ ]	/* DeltaExceptionP2 */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 570;
}
);
note = o;
},
{
glyphname = o.010;
lastChange = "2025-01-13 19:00:14 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(150.281,459.389,o),
(40,370.352,o),
(40,220,cs),
(40,101.438,o),
(118.362,-15,o),
(273,-15,cs),
(413.177,-15,o),
(510,91.485,o),
(510,222,cs),
(510,342.863,o),
(434.555,464.738,o),
(273,462,cs)
);
},
{
closed = 1;
nodes = (
(378.062,427.23,o),
(426,295.497,o),
(426,210,cs),
(426,115.148,o),
(377.66,26,o),
(283,26,cs),
(168.882,26,o),
(125,153.796,o),
(125,243,cs),
(125,349.27,o),
(183.743,416.716,o),
(263,422,cs)
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */
40
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
41
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
5
MDRP[11100]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
40
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
15
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
15
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 2 values pushed */
25 2
MIRP[11100]	/* MoveIndirectRelPt */
NPUSHW[ ]	/* 17 values pushed */
6 25 22 25 38 25 54 25 70 25 86 25 102 25 118 25 8
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 5 values pushed */
133 25 149 25 2
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHW[ ]	/* 1 value pushed */
5
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
35 2
MIRP[11100]	/* MoveIndirectRelPt */
NPUSHW[ ]	/* 5 values pushed */
138 35 154 35 2
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 17 values pushed */
9 35 25 35 41 35 57 35 73 35 89 35 105 35 121 35 8
DELTAP1[ ]	/* DeltaExceptionP1 */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
0
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
0
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
0 14
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
10
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
10 4
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
20 1
MIRP[11100]	/* MoveIndirectRelPt */
NPUSHW[ ]	/* 5 values pushed */
153 20 169 20 2
DELTAP2[ ]	/* DeltaExceptionP2 */
NPUSHW[ ]	/* 33 values pushed */
8 20 24 20 40 20 56 20 72 20 88 20 104 20 120 20 136 20 152 20 168 20 184 20 200 20 216 20 232 20 248 20 16
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 19 values pushed */
8 20 24 20 40 20 56 20 72 20 88 20 104 20 120 20 136 20 9
DELTAP2[ ]	/* DeltaExceptionP2 */
PUSHW[ ]	/* 1 value pushed */
10
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
30 1
MIRP[11100]	/* MoveIndirectRelPt */
NPUSHW[ ]	/* 33 values pushed */
7 30 23 30 39 30 55 30 71 30 87 30 103 30 119 30 135 30 151 30 167 30 183 30 199 30 215 30 231 30 247 30 16
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 19 values pushed */
7 30 23 30 39 30 55 30 71 30 87 30 103 30 119 30 135 30 9
DELTAP2[ ]	/* DeltaExceptionP2 */
NPUSHW[ ]	/* 5 values pushed */
150 30 166 30 2
DELTAP2[ ]	/* DeltaExceptionP2 */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 551;
}
);
note = o;
},
{
glyphname = o.011;
lastChange = "2025-01-13 19:00:14 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(144.667,464,o),
(49,363.667,o),
(49,209,cs),
(49,67.667,o),
(132.333,-23,o),
(275,-23,cs),
(423,-23,o),
(516,78,o),
(516,238,cs),
(516,282.667,o),
(506.333,322.333,o),
(487,357,cs),
(447,428.333,o),
(381.333,464,o),
(290,464,cs)
);
},
{
closed = 1;
nodes = (
(372.333,429,o),
(425,356.333,o),
(425,231,cs),
(425,173.667,o),
(415.667,125.667,o),
(397,87,cs),
(372.333,36.333,o),
(334.333,11,o),
(283,11,cs),
(228.333,11,o),
(189.667,34.333,o),
(167,81,cs),
(149,117.667,o),
(140,162,o),
(140,214,cs),
(140,351.333,o),
(192.333,429,o),
(283,429,cs)
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */
10
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
27
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
28
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
4
MDRP[11100]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
27
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
10
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
10
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
16
MDRP[11100]	/* MoveDirectRelPt */
NPUSHW[ ]	/* 21 values pushed */
102 16 118 16 134 16 150 16 166 16 182 16 198 16 214 16 230 16 246 16 10
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 7 values pushed */
6 16 22 16 38 16 3
DELTAP2[ ]	/* DeltaExceptionP2 */
NPUSHW[ ]	/* 5 values pushed */
53 16 69 16 2
DELTAP2[ ]	/* DeltaExceptionP2 */
PUSHW[ ]	/* 1 value pushed */
4
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
24
MDRP[11100]	/* MoveDirectRelPt */
NPUSHW[ ]	/* 5 values pushed */
58 24 74 24 2
DELTAP2[ ]	/* DeltaExceptionP2 */
NPUSHW[ ]	/* 21 values pushed */
105 24 121 24 137 24 153 24 169 24 185 24 201 24 217 24 233 24 249 24 10
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 7 values pushed */
9 24 25 24 41 24 3
DELTAP2[ ]	/* DeltaExceptionP2 */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
35
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
0
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
0 40
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
35
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
7
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
7 36
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
13
MDRP[11100]	/* MoveDirectRelPt */
NPUSHW[ ]	/* 5 values pushed */
57 13 73 13 2
DELTAP2[ ]	/* DeltaExceptionP2 */
NPUSHW[ ]	/* 21 values pushed */
104 13 120 13 136 13 152 13 168 13 184 13 200 13 216 13 232 13 248 13 10
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 7 values pushed */
8 13 24 13 40 13 3
DELTAP2[ ]	/* DeltaExceptionP2 */
PUSHW[ ]	/* 1 value pushed */
7
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
20
MDRP[11100]	/* MoveDirectRelPt */
NPUSHW[ ]	/* 21 values pushed */
103 20 119 20 135 20 151 20 167 20 183 20 199 20 215 20 231 20 247 20 10
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 7 values pushed */
7 20 23 20 39 20 3
DELTAP2[ ]	/* DeltaExceptionP2 */
NPUSHW[ ]	/* 5 values pushed */
54 20 70 20 2
DELTAP2[ ]	/* DeltaExceptionP2 */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 564;
}
);
note = o;
},
{
glyphname = r.001;
lastChange = "2025-01-13 19:00:14 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(111,48.505,o),
(111.643,36.183,o),
(68,28,cs),
(46,25,l),
(39.333,18.333,o),
(41,-0.333,o),
(49,-3,c),
(78.333,-1,o),
(113,0,o),
(153,0,cs),
(191.667,0,o),
(225.667,-0.333,o),
(279,-3,c),
(287,-0.333,o),
(289,18.333,o),
(281,25,c),
(240,28,ls),
(198.157,30.615,o),
(195,43.489,o),
(195,127,cs),
(195,281,ls),
(195,321,o),
(198,352,o),
(210,368,cs),
(218,380,o),
(232.333,391,o),
(251,391,cs),
(265.667,391,o),
(282,385,o),
(300,373,cs),
(304,371,o),
(307.667,369.167,o),
(311,367.5,cs),
(314.333,365.833,o),
(319,365,o),
(325,365,cs),
(343.667,365,o),
(374,379.667,o),
(374,417,cs),
(374,445,o),
(352.333,462,o),
(323,462,cs),
(280.333,462,o),
(238,427.333,o),
(198,394,c),
(196,395.333,o),
(195,399,o),
(195,405,cs),
(195,470,ls),
(195,474,o),
(192,476.667,o),
(186,478,c),
(162.887,464.132,o),
(87.081,427.386,o),
(71,423,c),
(68.333,421.667,o),
(67,418.333,o),
(67,413,cs),
(67,408.333,o),
(68,404.667,o),
(70,402,c),
(80,396,ls),
(110.936,375.376,o),
(111,368.378,o),
(111,325,cs),
(111,127,l),
(111,127,l)
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */
40 2 0 4
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
40
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
17
MDRP[10000]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
0
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
17
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
17 10
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
23
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
23 10
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
50
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
50 4
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
53
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
53 4
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
55
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
55 4
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
17
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
34 1
MIRP[11100]	/* MoveIndirectRelPt */
NPUSHW[ ]	/* 5 values pushed */
185 34 201 34 2
DELTAP2[ ]	/* DeltaExceptionP2 */
NPUSHW[ ]	/* 33 values pushed */
8 34 24 34 40 34 56 34 72 34 88 34 104 34 120 34 136 34 152 34 168 34 184 34 200 34 216 34 232 34 248 34 16
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 23 values pushed */
8 34 24 34 40 34 56 34 72 34 88 34 104 34 120 34 136 34 152 34 168 34 11
DELTAP2[ ]	/* DeltaExceptionP2 */
PUSHW[ ]	/* 3 values pushed */
20 17 34
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHW[ ]	/* 1 value pushed */
23
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
29
MDRP[11100]	/* MoveDirectRelPt */
NPUSHW[ ]	/* 5 values pushed */
217 29 233 29 2
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 27 values pushed */
8 29 24 29 40 29 56 29 72 29 88 29 104 29 120 29 136 29 152 29 168 29 184 29 200 29 13
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHW[ ]	/* 1 value pushed */
50
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
46 1
MIRP[11100]	/* MoveIndirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 376;
}
);
note = r;
},
{
glyphname = r.002;
lastChange = "2025-01-14 07:06:04 +0000";
layers = (
{
hints = (
{
horizontal = 1;
place = (377,88);
type = Stem;
},
{
horizontal = 1;
place = (-4,34);
type = Stem;
},
{
place = (100,75);
type = Stem;
}
);
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(163,465,l),
(42,408,l),
(41,379,l),
(85,370,l),
(97,335,l),
(100,283,l),
(100,138,l),
(92,48,l),
(62,32,l),
(28,31,l),
(28,-4,l),
(132,2,l),
(246,-6,l),
(246,30,l),
(196,33,l),
(177,58,l),
(175,99,l),
(175,205,ls),
(175,276,o),
(187,384,o),
(255,375,cs),
(276,371,o),
(289,363,o),
(311,363,cs),
(334,363,o),
(344,405,o),
(344,424,cs),
(344,442,o),
(322,452,o),
(304,452,cs),
(230,452,o),
(208,409,o),
(175,359,c),
(175,457,l),
(175,457,l)
);
}
);
width = 337;
}
);
},
{
glyphname = r.003;
lastChange = "2025-01-13 19:00:14 +0000";
layers = (
{
hints = (
{
horizontal = 1;
place = (377,88);
type = Stem;
},
{
horizontal = 1;
place = (-4,34);
type = Stem;
},
{
place = (100,75);
type = Stem;
}
);
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(163,465,l),
(42,408,l),
(41,379,l),
(85,370,l),
(97,335,l),
(100,283,l),
(100,138,l),
(92,48,l),
(62,32,l),
(28,31,l),
(28,-4,l),
(132,2,l),
(246,-6,l),
(246,30,l),
(196,33,l),
(177,58,l),
(175,99,l),
(175,205,l),
(184,326,l),
(210,362,l),
(255,375,l),
(290,370,l),
(311,363,l),
(323,365,l),
(334,382,l),
(344,424,l),
(339,440,l),
(328,448,l),
(304,452,l),
(248,439,l),
(216,415,l),
(175,359,l),
(175,457,l),
(175,457,l)
);
}
);
width = 337;
}
);
},
{
glyphname = r.004;
lastChange = "2025-01-13 19:00:14 +0000";
layers = (
{
hints = (
{
horizontal = 1;
place = (347,124);
type = Stem;
},
{
horizontal = 1;
place = (0,28);
type = Stem;
},
{
place = (87,92);
type = Stem;
}
);
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(180,155,l),
(183,338,l),
(204,377,l),
(232,393,l),
(252,383,l),
(270,365,l),
(296,349,l),
(317,346,l),
(338,348,l),
(357,360,l),
(370,376,l),
(376,399,l),
(361,438,l),
(340,454,l),
(304,462,l),
(252,450,l),
(206,416,l),
(191,402,l),
(178,393,l),
(175,439,l),
(175,457,l),
(166,470,l),
(139,448,l),
(110,423,l),
(57,396,l),
(34,380,l),
(36,370,l),
(57,364,l),
(74,359,l),
(83,349,l),
(86,310,l),
(87,237,l),
(85,146,l),
(86,94,l),
(82,59,l),
(70,40,l),
(47,31,l),
(22,27,l),
(10,18,l),
(19,5,l),
(25,4,l),
(89,7,l),
(132,8,l),
(204,5,l),
(235,3,l),
(253,2,l),
(271,12,l),
(263,27,l),
(243,27,l),
(212,32,l),
(193,40,l),
(181,80,l),
(181,122,l),
(181,122,l)
);
}
);
width = 351;
}
);
},
{
glyphname = r.005;
lastChange = "2025-01-13 19:00:14 +0000";
layers = (
{
hints = (
{
horizontal = 1;
place = (363,100);
type = Stem;
},
{
horizontal = 1;
place = (0,30);
type = Stem;
},
{
place = (83,74);
type = Stem;
}
);
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(237,19,l),
(236,29,l),
(225,30,l),
(196,35,l),
(171,51,l),
(160,94,l),
(159,159,l),
(158,200,l),
(160,228,l),
(159,245,l),
(161,279,l),
(159,304,l),
(210,363,l),
(236,381,l),
(257,386,l),
(295,370,l),
(316,363,l),
(341,370,l),
(360,391,l),
(362,407,l),
(358,433,l),
(345,451,l),
(315,462,l),
(287,461,l),
(236,436,l),
(206,405,l),
(180,372,l),
(159,345,l),
(160,432,l),
(158,461,l),
(152,463,l),
(127,453,l),
(71,429,l),
(49,418,l),
(33,411,l),
(22,407,l),
(21,393,l),
(32,384,l),
(70,365,l),
(81,324,l),
(82,296,l),
(82,179,l),
(83,148,l),
(82,128,l),
(79,81,l),
(68,43,l),
(49,33,l),
(8,30,l),
(8,21,l),
(12,4,l),
(29,2,l),
(45,5,l),
(82,6,l),
(128,9,l),
(227,0,l),
(235,7,l),
(235,7,l)
);
}
);
width = 360;
}
);
},
{
glyphname = r.006;
lastChange = "2025-01-13 19:00:14 +0000";
layers = (
{
hints = (
{
horizontal = 1;
place = (351,118);
type = Stem;
},
{
horizontal = 1;
place = (-2,21);
target = up;
type = BottomGhost;
},
{
place = (80,77);
type = Stem;
}
);
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(29,-2,l),
(62,-1,l),
(118,2,l),
(178,1,l),
(231,-3,l),
(255,4,l),
(262,12,l),
(252,25,l),
(239,26,l),
(176,41,l),
(161,50,l),
(154,166,l),
(158,249,l),
(157,303,l),
(173,356,l),
(180,366,l),
(209,377,l),
(238,371,l),
(251,363,l),
(288,350,l),
(308,355,l),
(327,377,l),
(333,399,l),
(321,429,l),
(295,446,l),
(264,451,l),
(218,435,l),
(174,395,l),
(153,376,l),
(151,412,l),
(152,444,l),
(146,465,l),
(142,469,l),
(116,446,l),
(47,393,l),
(33,378,l),
(58,363,l),
(75,356,l),
(82,344,l),
(83,316,l),
(78,117,l),
(78,90,l),
(70,47,l),
(38,26,l),
(11,17,l),
(9,8,l),
(19,-4,l),
(19,-4,l)
);
}
);
width = 336;
}
);
},
{
glyphname = r.007;
lastChange = "2025-01-13 19:00:14 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(201,326.667,o),
(206.167,352.5,o),
(216.5,367.5,cs),
(226.833,382.5,o),
(237.667,390,o),
(249,390,cs),
(255,390,o),
(266.333,381.667,o),
(283,365,cs),
(299.667,348.333,o),
(316,340,o),
(332,340,cs),
(366.667,340,o),
(394,367.333,o),
(394,398,cs),
(394,432.667,o),
(362,460,o),
(322,460,cs),
(300.667,460,o),
(279.333,453,o),
(258,439,c),
(237.333,421,o),
(218.667,405,o),
(202,391,c),
(200.667,391,o),
(200,395.333,o),
(200,404,cs),
(200,455,ls),
(200,466.333,o),
(196.333,472,o),
(189,472,cs),
(184.333,472,o),
(179.667,469.333,o),
(175,464,cs),
(144.333,429.333,o),
(104.667,403,o),
(56,385,cs),
(45.333,381,o),
(40,376.333,o),
(40,371,cs),
(40,364.333,o),
(44.667,360.667,o),
(54,360,cs),
(98,357.333,o),
(104,350.333,o),
(104,293,cs),
(104,100,ls),
(104,37.333,o),
(100,31.167,o),
(60,26.5,cs),
(40,24.167,o),
(30,18.333,o),
(30,9,cs),
(30,1,o),
(35.333,-3,o),
(46,-3,cs),
(52.667,-3,o),
(58,-2.667,o),
(62,-2,cs),
(98,0,o),
(128,1,o),
(152,1,cs),
(170.667,1,o),
(208.667,-0.333,o),
(266,-3,cs),
(280,-3,o),
(287,1.667,o),
(287,11,cs),
(287,20.333,o),
(275,26,o),
(251,28,cs),
(229.667,30,o),
(215.333,36.333,o),
(208,47,cs),
(203.333,54.333,o),
(201,72,o),
(201,100,cs),
(201,290,l),
(201,290,l)
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */
10
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 3 values pushed */
1 21 13
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
1
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
35
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
35
MDAP[1]	/* MoveDirectAbsPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
33
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
37
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
9
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
9 38
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
37
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
11
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
11 38
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
37
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
13
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
13 38
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
37
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
15
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
15 38
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 3 values pushed */
38 9 33
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 400;
}
);
note = r;
},
{
glyphname = r.008;
lastChange = "2025-01-13 19:00:14 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(188.667,273,o),
(189,277.333,o),
(189,282,cs),
(189,285.333,o),
(188.667,288.333,o),
(188,291,c),
(188,297,ls),
(188,299.667,o),
(198.667,314,o),
(220,340,cs),
(244,368,o),
(265,382,o),
(283,382,cs),
(291.667,382,o),
(298.667,380.333,o),
(304,377,cs),
(322,365.667,o),
(336.667,360,o),
(348,360,cs),
(378.667,360,o),
(394,374.667,o),
(394,404,cs),
(394,442.667,o),
(375,462,o),
(337,462,cs),
(292.333,462,o),
(250,432.667,o),
(210,374,cs),
(205.333,367.333,o),
(202,362.667,o),
(200,360,cs),
(196,356,ls),
(194,354,o),
(192,352.667,o),
(190,352,cs),
(188,352,o),
(187,358,o),
(187,370,cs),
(187,379,ls),
(187.667,386.333,o),
(188,395.667,o),
(188,407,cs),
(188,415,o),
(188.333,426.333,o),
(189,441,cs),
(189,443.667,o),
(188.667,445.667,o),
(188,447,c),
(188,450,ls),
(188,451.333,o),
(188.333,452.333,o),
(189,453,c),
(189,460,ls),
(189,467.333,o),
(186.667,471,o),
(182,471,cs),
(179.333,471,o),
(177.167,470.167,o),
(175.5,468.5,cs),
(173.833,466.833,o),
(169.667,464.667,o),
(163,462,cs),
(119,441.333,o),
(93.167,428.667,o),
(85.5,424,cs),
(77.833,419.333,o),
(71.333,416.333,o),
(66,415,cs),
(53.333,410.333,o),
(47,403.667,o),
(47,395,cs),
(47,389.667,o),
(53.667,384.333,o),
(67,379,cs),
(103,365.667,o),
(104.333,363.333,o),
(107,334,c),
(106.333,334,o),
(106.667,326.333,o),
(108,311,cs),
(108.667,303,o),
(109,292.667,o),
(109,280,cs),
(109,278,o),
(109,274,o),
(109,268,cs),
(108.333,261.333,o),
(108,255,o),
(108,249,cs),
(108,233,ls),
(108,219.667,o),
(108.333,207.833,o),
(109,197.5,cs),
(109.667,187.167,o),
(110,176.667,o),
(110,166,cs),
(110,133.333,o),
(108.333,98.667,o),
(105,62,cs),
(103,42,o),
(91.333,30.333,o),
(70,27,cs),
(60,25.667,o),
(54.667,25,o),
(54,25,cs),
(43,25,ls),
(36.333,24.333,o),
(33,19,o),
(33,9,cs),
(33,-0.333,o),
(36.333,-5,o),
(43,-5,cs),
(55,-5,ls),
(63,-4.333,o),
(71.333,-3.667,o),
(80,-3,cs),
(110,-1,o),
(145.667,0,o),
(187,0,cs),
(195,0,o),
(204,-0.333,o),
(214,-1,cs),
(234,-2.333,o),
(245,-3,o),
(247,-3,cs),
(260,-3,ls),
(270,-3,o),
(275,1.333,o),
(275,10,cs),
(275,22,o),
(269.667,28,o),
(259,28,cs),
(229.667,28,o),
(209.667,36,o),
(199,52,cs),
(190.333,65.333,o),
(186.333,86.667,o),
(187,116,cs),
(188,151,ls),
(188,154.333,o),
(187.667,159.333,o),
(187,166,cs),
(187,186,ls),
(187,192.667,o),
(187.333,198.667,o),
(188,204,c),
(188,269,l),
(188,269,l)
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */
10
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 3 values pushed */
97 45 13
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
97
SRP0[ ]	/* SetRefPoint0 */
NPUSHW[ ]	/* 21 values pushed */
102 97 118 97 134 97 150 97 166 97 182 97 198 97 214 97 230 97 246 97 10
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 7 values pushed */
6 97 22 97 38 97 3
DELTAP2[ ]	/* DeltaExceptionP2 */
NPUSHW[ ]	/* 5 values pushed */
53 97 69 97 2
DELTAP2[ ]	/* DeltaExceptionP2 */
PUSHW[ ]	/* 1 value pushed */
0
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
0
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
97
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
2
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
2
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
97
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
5
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
5
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
45
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
33
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
33
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
45
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
35
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
35
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
45
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
38
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
45
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
41
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
41
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
45
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
43
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
43
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
45
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
47
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
47
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
97
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
62
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
97
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
68
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
97
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
70
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
70
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
97
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
72
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
72
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
97
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
94
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
94
MDAP[1]	/* MoveDirectAbsPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
60
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
37
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
14
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
14 38
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
37
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
17
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
17 38
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
37
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
19
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
19 38
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
37
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
21
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
21 38
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
37
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
23
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
23 38
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 401;
}
);
note = r;
},
{
glyphname = r.009;
lastChange = "2025-01-13 19:00:14 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(172.667,493.333,o),
(168.333,492,o),
(165,492,cs),
(161.667,492,o),
(158,493.333,o),
(154,496,c),
(134,454,o),
(96.333,432.333,o),
(41,431,c),
(43.667,423,o),
(45,418.667,o),
(45,418,cs),
(45,414.667,o),
(43.667,411,o),
(41,407,c),
(63,402,ls),
(81,398.667,o),
(91.333,395.667,o),
(94,393,cs),
(106,382.333,o),
(112,344.333,o),
(112,279,cs),
(112,197,ls),
(112,141.667,o),
(110.667,96.667,o),
(108,62,cs),
(104,35.333,o),
(101.667,29.667,o),
(63,27,cs),
(26,24,l),
(29.333,18,o),
(31,13,o),
(31,9,cs),
(31,7,o),
(29.667,3,o),
(27,-3,c),
(60,-2,ls),
(86.667,-1.333,o),
(108.667,-0.333,o),
(126,1,cs),
(138.667,1.667,o),
(148,2,o),
(154,2,cs),
(160,2,o),
(170.333,1.667,o),
(185,1,cs),
(203,-0.333,o),
(226.333,-1.333,o),
(255,-2,cs),
(296,-3,l),
(293.333,3,o),
(292,7,o),
(292,9,cs),
(292,13,o),
(293.667,18,o),
(297,24,c),
(248,27,ls),
(223.333,28.333,o),
(208.333,30.667,o),
(203,34,cs),
(197.667,37.333,o),
(194.333,45,o),
(193,57,cs),
(189,83,o),
(187,129.667,o),
(187,197,cs),
(187,351,l),
(207,368,ls),
(235,392,o),
(255.333,404,o),
(268,404,cs),
(274,404,o),
(280.333,399.333,o),
(287,390,cs),
(305,364,o),
(323.667,351,o),
(343,351,cs),
(368.333,351,o),
(381,362,o),
(381,384,cs),
(381,424,o),
(350.333,460,o),
(317,460,cs),
(279.667,460,o),
(234,434,o),
(180,382,c),
(178.667,428.667,o),
(178,454.333,o),
(178,459,cs),
(178,496,l),
(178,496,l)
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */
10
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 3 values pushed */
18 48 13
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
18
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 3 values pushed */
0 48 18
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHW[ ]	/* 1 value pushed */
3
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
3
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
48
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
46
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
46
MDAP[1]	/* MoveDirectAbsPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
0
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
60
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
62
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
33
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
28
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
28 34
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
33
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
31
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
31 34
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
33
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
33
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
33 34
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
33
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
35
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
35 34
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
33
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
37
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
37 34
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 3 values pushed */
3 28 0
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHW[ ]	/* 1 value pushed */
28
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
23
MDRP[11100]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
42
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
42
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
43
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 3 values pushed */
54 28 0
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHW[ ]	/* 3 values pushed */
58 28 0
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 391;
}
);
note = r;
},
{
glyphname = r.010;
lastChange = "2025-01-13 19:00:14 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(97.437,377.36,o),
(98.354,370.307,o),
(101,283,cs),
(101,136,ls),
(101,112,o),
(100.667,73,o),
(98,61,cs),
(90,31.667,o),
(74.667,30.333,o),
(28,29,c),
(28,-5,l),
(66.667,-2.333,o),
(99.333,0,o),
(134,0,cs),
(172.667,0,o),
(208,-2.333,o),
(248,-5,c),
(248,29,l),
(175.103,26.3,o),
(176,49.805,o),
(176,103,cs),
(176,68.085,o),
(174.888,262.217,o),
(180,298,cs),
(183.916,325.409,o),
(191.311,378,o),
(256,378,cs),
(272.667,378,o),
(285.667,376,o),
(295,372,cs),
(304.333,368,o),
(310.667,366,o),
(314,366,cs),
(336.544,366,o),
(345,418.107,o),
(345,427,cs),
(345,452.459,o),
(318.003,455,o),
(306,455,cs),
(230.343,455,o),
(196.254,392.381,o),
(176,362,c),
(176,460,l),
(164,466,l),
(110.309,436.47,o),
(95.33,428.316,o),
(42,408,c),
(42,380,l),
(42,380,l)
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */
35 2 54 4
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
35
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
6
MDRP[10000]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
0
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
5
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
5 14
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
12
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
12 14
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
41
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
41 4
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
44
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
44 4
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
47
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
47 4
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 3 values pushed */
7 41 5
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHW[ ]	/* 1 value pushed */
12
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
25 1
MIRP[11100]	/* MoveIndirectRelPt */
NPUSHW[ ]	/* 5 values pushed */
153 25 169 25 2
DELTAP2[ ]	/* DeltaExceptionP2 */
NPUSHW[ ]	/* 33 values pushed */
8 25 24 25 40 25 56 25 72 25 88 25 104 25 120 25 136 25 152 25 168 25 184 25 200 25 216 25 232 25 248 25 16
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 19 values pushed */
8 25 24 25 40 25 56 25 72 25 88 25 104 25 120 25 136 25 9
DELTAP2[ ]	/* DeltaExceptionP2 */
PUSHW[ ]	/* 1 value pushed */
41
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
40 1
MIRP[11100]	/* MoveIndirectRelPt */
PUSHW[ ]	/* 1 value pushed */
48
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
25
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
60
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
60
MDAP[1]	/* MoveDirectAbsPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 338;
}
);
note = r;
},
{
glyphname = r.011;
lastChange = "2025-01-13 19:00:14 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(195,415.333,o),
(196,436.333,o),
(198,457,c),
(198.667,459,o),
(199,462,o),
(199,466,cs),
(199,474,o),
(195,478,o),
(187,478,cs),
(181,478,o),
(174.667,474.667,o),
(168,468,cs),
(159,458,ls),
(134.333,434,o),
(106.667,417,o),
(76,407,cs),
(62,403,ls),
(51.333,399.667,o),
(46,394,o),
(46,386,cs),
(46,376.667,o),
(52,372,o),
(64,372,cs),
(75,371,ls),
(93.667,371,o),
(104.333,369,o),
(107,365,cs),
(111.667,359,o),
(114,338.667,o),
(114,304,cs),
(114,112,ls),
(114,42.667,o),
(114.667,43.333,o),
(72,34,cs),
(54,30,ls),
(36.667,26,o),
(28,19.667,o),
(28,11,cs),
(28,0.333,o),
(35.667,-5,o),
(51,-5,cs),
(58,-5,l),
(76,-3,ls),
(99.333,-0.333,o),
(129.333,1,o),
(166,1,cs),
(192.667,1,o),
(221.667,0,o),
(253,-2,cs),
(284,-4,l),
(297,-5,ls),
(307,-5.667,o),
(312,0,o),
(312,12,cs),
(312,21.333,o),
(301.667,27.333,o),
(281,30,cs),
(265,32,ls),
(195.667,41.333,o),
(195,40,o),
(195,128,cs),
(195,252,ls),
(195,292,o),
(196,317.167,o),
(198,327.5,cs),
(200,337.833,o),
(206.667,349.667,o),
(218,363,cs),
(231.333,379.667,o),
(246,388,o),
(262,388,cs),
(268,388,o),
(274.333,386.667,o),
(281,384,cs),
(293,378,ls),
(308.333,372,o),
(321,369,o),
(331,369,cs),
(360.333,369,o),
(382,387.667,o),
(382,413,cs),
(382,439.667,o),
(354.667,459,o),
(316,459,cs),
(274,459,o),
(233.667,435.333,o),
(195,388,c),
(195,394,l),
(195,394,l)
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */
10
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 3 values pushed */
20 44 13
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
20
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
0
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
20
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
62
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
62
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 3 values pushed */
1 44 62
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHW[ ]	/* 1 value pushed */
20
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
64
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
64
MDAP[1]	/* MoveDirectAbsPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
60
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
35
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
3
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
3 40
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
35
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
57
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
57 40
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
35
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
62
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
62 40
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
35
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
64
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
64 40
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
35
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
28
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
28 36
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
35
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
30
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
30 36
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
35
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
32
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
32 36
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
35
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
34
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
34 36
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
35
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
36
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
36 36
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
3
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
9
MDRP[11100]	/* MoveDirectRelPt */
NPUSHW[ ]	/* 5 values pushed */
57 9 73 9 2
DELTAP2[ ]	/* DeltaExceptionP2 */
NPUSHW[ ]	/* 21 values pushed */
104 9 120 9 136 9 152 9 168 9 184 9 200 9 216 9 232 9 248 9 10
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 7 values pushed */
8 9 24 9 40 9 3
DELTAP2[ ]	/* DeltaExceptionP2 */
PUSHW[ ]	/* 3 values pushed */
1 3 9
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHW[ ]	/* 1 value pushed */
49
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
49
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
50
MDRP[10000]	/* MoveDirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 388;
}
);
note = r;
},
{
glyphname = s.001;
lastChange = "2025-01-13 19:00:14 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(123.373,462,o),
(57,417.553,o),
(57,333,cs),
(57,270.333,o),
(102.333,231.333,o),
(169,194,cs),
(209.839,171.028,o),
(256,138.101,o),
(256,90,cs),
(256,40.667,o),
(221.333,17,o),
(180,17,cs),
(115.765,17,o),
(78.122,71.867,o),
(60,134,c),
(54.667,140.667,o),
(40.667,139.667,o),
(34,133,c),
(31.606,99.484,o),
(39.145,35.709,o),
(48,18,c),
(76,-4.667,o),
(116.333,-16,o),
(169,-16,cs),
(252.739,-16,o),
(332,26.221,o),
(332,113,cs),
(332,194.792,o),
(274.9,235.269,o),
(216,266,cs),
(174.403,289.77,o),
(129,316.037,o),
(129,360,cs),
(129,401.333,o),
(158,430,o),
(202,430,cs),
(248.667,430,o),
(282,396.333,o),
(302,347,c),
(307.333,339,o),
(323.667,343.333,o),
(329,350,c),
(329,380.667,o),
(321.667,416.667,o),
(311,442,c),
(300.333,451.333,o),
(259,462,o),
(211,462,cs)
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */
61
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
62
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
25
MDRP[11100]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
6
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
6
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
61
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
56
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
56
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 2 values pushed */
15 2
MIRP[11100]	/* MoveIndirectRelPt */
NPUSHW[ ]	/* 19 values pushed */
6 15 22 15 38 15 54 15 70 15 86 15 102 15 118 15 134 15 9
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 5 values pushed */
149 15 165 15 2
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHW[ ]	/* 1 value pushed */
56
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
40
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
40
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
25
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
48 2
MIRP[11100]	/* MoveIndirectRelPt */
NPUSHW[ ]	/* 5 values pushed */
154 48 170 48 2
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 19 values pushed */
9 48 25 48 41 48 57 48 73 48 89 48 105 48 121 48 137 48 9
DELTAP1[ ]	/* DeltaExceptionP1 */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
0
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
0
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
0 10
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
30
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
30 4
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
12 1
MIRP[11100]	/* MoveIndirectRelPt */
NPUSHW[ ]	/* 5 values pushed */
185 12 201 12 2
DELTAP2[ ]	/* DeltaExceptionP2 */
NPUSHW[ ]	/* 33 values pushed */
8 12 24 12 40 12 56 12 72 12 88 12 104 12 120 12 136 12 152 12 168 12 184 12 200 12 216 12 232 12 248 12 16
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 23 values pushed */
8 12 24 12 40 12 56 12 72 12 88 12 104 12 120 12 136 12 152 12 168 12 11
DELTAP2[ ]	/* DeltaExceptionP2 */
PUSHW[ ]	/* 1 value pushed */
30
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
45 1
MIRP[11100]	/* MoveIndirectRelPt */
NPUSHW[ ]	/* 33 values pushed */
7 45 23 45 39 45 55 45 71 45 87 45 103 45 119 45 135 45 151 45 167 45 183 45 199 45 215 45 231 45 247 45 16
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 23 values pushed */
7 45 23 45 39 45 55 45 71 45 87 45 103 45 119 45 135 45 151 45 167 45 11
DELTAP2[ ]	/* DeltaExceptionP2 */
NPUSHW[ ]	/* 5 values pushed */
182 45 198 45 2
DELTAP2[ ]	/* DeltaExceptionP2 */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 366;
}
);
note = s;
},
{
glyphname = s.002;
lastChange = "2025-01-13 19:00:14 +0000";
layers = (
{
hints = (
{
horizontal = 1;
place = (425,36);
type = Stem;
},
{
horizontal = 1;
place = (-9,36);
type = Stem;
},
{
place = (245,71);
type = Stem;
},
{
place = (54,71);
type = Stem;
}
);
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(292,441,l),
(189,461,l),
(141,455,l),
(109,440,l),
(81,414,l),
(57,369,l),
(54,336,l),
(64,281,l),
(87,251,l),
(181,180,l),
(213,154,l),
(241,121,l),
(245,98,l),
(237,67,l),
(197,34,l),
(164,28,l),
(129,35,l),
(107,50,l),
(88,76,l),
(70,130,l),
(40,128,l),
(54,15,l),
(89,2,l),
(169,-9,l),
(216,-5,l),
(262,18,l),
(287,41,l),
(305,67,l),
(317,124,l),
(309,168,l),
(286,205,l),
(212,263,l),
(156,302,l),
(134,328,l),
(125,361,l),
(137,397,l),
(167,421,l),
(192,425,l),
(227,416,l),
(249,398,l),
(275,345,l),
(302,348,l),
(302,348,l)
);
}
);
width = 358;
}
);
},
{
glyphname = s.003;
lastChange = "2025-01-13 19:00:14 +0000";
layers = (
{
hints = (
{
horizontal = 1;
place = (425,36);
type = Stem;
},
{
horizontal = 1;
place = (-9,36);
type = Stem;
},
{
place = (245,71);
type = Stem;
},
{
place = (54,71);
type = Stem;
}
);
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(292,441,l),
(189,461,l),
(141,455,l),
(109,440,l),
(81,414,l),
(57,369,l),
(54,336,l),
(64,281,l),
(87,251,l),
(181,180,l),
(213,154,l),
(241,121,l),
(245,98,l),
(237,67,l),
(197,34,l),
(164,28,l),
(129,35,l),
(107,50,l),
(88,76,l),
(70,130,l),
(40,128,l),
(54,15,l),
(89,2,l),
(169,-9,l),
(216,-5,l),
(262,18,l),
(287,41,l),
(305,67,l),
(317,124,l),
(309,168,l),
(286,205,l),
(212,263,l),
(156,302,l),
(134,328,l),
(125,361,l),
(137,397,l),
(167,421,l),
(192,425,l),
(227,416,l),
(249,398,l),
(275,345,l),
(302,348,l),
(302,348,l)
);
}
);
width = 358;
}
);
},
{
glyphname = s.004;
lastChange = "2025-01-13 19:00:14 +0000";
layers = (
{
hints = (
{
horizontal = 1;
place = (442,22);
type = Stem;
},
{
horizontal = 1;
place = (-10,23);
type = Stem;
},
{
place = (269,79);
type = Stem;
},
{
place = (25,77);
type = Stem;
}
);
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(19,57,l),
(18,34,l),
(26,19,l),
(67,4,l),
(102,-9,l),
(163,-11,l),
(215,-8,l),
(251,5,l),
(291,31,l),
(332,82,l),
(344,112,l),
(349,148,l),
(339,195,l),
(317,229,l),
(270,268,l),
(181,306,l),
(143,322,l),
(111,348,l),
(102,375,l),
(106,394,l),
(119,411,l),
(157,437,l),
(187,442,l),
(241,426,l),
(284,385,l),
(299,353,l),
(307,347,l),
(318,358,l),
(322,377,l),
(324,423,l),
(318,443,l),
(303,449,l),
(206,464,l),
(157,460,l),
(103,445,l),
(72,426,l),
(46,400,l),
(29,367,l),
(25,330,l),
(28,292,l),
(45,263,l),
(105,221,l),
(159,196,l),
(213,173,l),
(236,155,l),
(258,134,l),
(268,100,l),
(257,59,l),
(235,35,l),
(210,21,l),
(173,13,l),
(141,18,l),
(115,31,l),
(74,79,l),
(58,111,l),
(50,136,l),
(38,148,l),
(22,136,l),
(21,113,l),
(21,113,l)
);
}
);
width = 370;
}
);
},
{
glyphname = s.005;
lastChange = "2025-01-13 19:00:14 +0000";
layers = (
{
hints = (
{
horizontal = 1;
place = (431,31);
type = Stem;
},
{
horizontal = 1;
place = (-12,32);
type = Stem;
},
{
place = (259,75);
type = Stem;
},
{
place = (52,68);
type = Stem;
}
);
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(323,376,l),
(324,432,l),
(301,442,l),
(277,450,l),
(208,461,l),
(174,460,l),
(150,452,l),
(135,449,l),
(112,437,l),
(88,419,l),
(73,403,l),
(64,389,l),
(58,373,l),
(53,339,l),
(59,295,l),
(88,254,l),
(167,200,l),
(215,173,l),
(243,147,l),
(257,119,l),
(261,101,l),
(251,64,l),
(246,55,l),
(235,43,l),
(227,36,l),
(176,20,l),
(135,31,l),
(116,43,l),
(90,73,l),
(62,129,l),
(34,126,l),
(39,62,l),
(43,27,l),
(73,11,l),
(130,-11,l),
(170,-11,l),
(221,-7,l),
(257,9,l),
(281,24,l),
(299,41,l),
(331,90,l),
(337,124,l),
(330,169,l),
(321,188,l),
(310,203,l),
(268,240,l),
(242,255,l),
(218,269,l),
(198,280,l),
(182,290,l),
(167,298,l),
(137,326,l),
(125,360,l),
(135,397,l),
(161,419,l),
(174,425,l),
(205,430,l),
(235,426,l),
(272,399,l),
(291,362,l),
(297,350,l),
(299,336,l),
(316,333,l),
(327,335,l),
(327,335,l)
);
}
);
width = 360;
}
);
},
{
glyphname = s.006;
lastChange = "2025-01-13 19:00:14 +0000";
layers = (
{
hints = (
{
horizontal = 1;
place = (428,32);
type = Stem;
},
{
horizontal = 1;
place = (-14,31);
type = Stem;
},
{
place = (250,76);
type = Stem;
},
{
place = (48,67);
type = Stem;
}
);
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(34,119,l),
(34,61,l),
(40,26,l),
(49,19,l),
(91,-4,l),
(156,-14,l),
(231,-4,l),
(282,31,l),
(303,52,l),
(309,66,l),
(316,77,l),
(320,90,l),
(324,99,l),
(325,131,l),
(323,148,l),
(291,211,l),
(262,237,l),
(215,265,l),
(141,311,l),
(118,342,l),
(114,365,l),
(120,384,l),
(130,401,l),
(157,421,l),
(185,425,l),
(222,417,l),
(248,402,l),
(263,377,l),
(272,356,l),
(292,331,l),
(303,338,l),
(305,368,l),
(305,414,l),
(299,435,l),
(258,452,l),
(201,456,l),
(156,452,l),
(119,439,l),
(85,416,l),
(61,383,l),
(48,330,l),
(59,286,l),
(83,258,l),
(97,245,l),
(114,233,l),
(173,191,l),
(233,146,l),
(245,116,l),
(249,98,l),
(242,67,l),
(229,43,l),
(196,18,l),
(169,14,l),
(135,21,l),
(106,42,l),
(70,101,l),
(54,132,l),
(46,135,l),
(34,125,l),
(34,125,l)
);
}
);
width = 378;
}
);
},
{
glyphname = s.007;
lastChange = "2025-01-13 19:00:14 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(348,444,o),
(331,453,o),
(250,464,o),
(225,464,qs),
(147,464,o),
(47,387,o),
(47,327,qs),
(47,285,o),
(104,231,o),
(177,202,qs),
(243,177,o),
(293,132,o),
(293,99,qs),
(293,64,o),
(235,16,o),
(195,16,qs),
(155,16,o),
(93,72,o),
(80,121,qs),
(72,150,o),
(59,150,qs),
(46,150,o),
(45,131,qs),
(42,56,ls),
(41,29,o),
(49,23,qs),
(62,12,o),
(150,-9,o),
(182,-9,qs),
(259,-9,o),
(312,29,qs),
(375,75,o),
(375,153,qs),
(375,239,o),
(256,288,qs),
(170,325,o),
(166,329,qs),
(133,350,o),
(133,379,qs),
(133,407,o),
(179,442,o),
(214,442,qs),
(288,442,o),
(313,370,qs),
(321,347,o),
(331,347,qs),
(343,347,o),
(344,363,qs),
(348,423,l),
(348,427,ls)
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */
10
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
50
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
51
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
50
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
42
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
42
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
10
MDRP[11100]	/* MoveDirectRelPt */
NPUSHW[ ]	/* 21 values pushed */
102 10 118 10 134 10 150 10 166 10 182 10 198 10 214 10 230 10 246 10 10
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 7 values pushed */
6 10 22 10 38 10 3
DELTAP2[ ]	/* DeltaExceptionP2 */
NPUSHW[ ]	/* 5 values pushed */
53 10 69 10 2
DELTAP2[ ]	/* DeltaExceptionP2 */
PUSHW[ ]	/* 1 value pushed */
51
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
16
MDRP[11100]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
42
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
23
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
23
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
42
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
25
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
25
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
16
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
36
MDRP[11100]	/* MoveDirectRelPt */
NPUSHW[ ]	/* 5 values pushed */
58 36 74 36 2
DELTAP2[ ]	/* DeltaExceptionP2 */
NPUSHW[ ]	/* 21 values pushed */
105 36 121 36 137 36 153 36 169 36 185 36 201 36 217 36 233 36 249 36 10
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 7 values pushed */
9 36 25 36 41 36 3
DELTAP2[ ]	/* DeltaExceptionP2 */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
37
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
45
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
45 42
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
37
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
20
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
20 38
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
45
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
7
MDRP[11100]	/* MoveDirectRelPt */
NPUSHW[ ]	/* 5 values pushed */
57 7 73 7 2
DELTAP2[ ]	/* DeltaExceptionP2 */
NPUSHW[ ]	/* 21 values pushed */
104 7 120 7 136 7 152 7 168 7 184 7 200 7 216 7 232 7 248 7 10
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 7 values pushed */
8 7 24 7 40 7 3
DELTAP2[ ]	/* DeltaExceptionP2 */
PUSHW[ ]	/* 1 value pushed */
20
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
33
MDRP[11100]	/* MoveDirectRelPt */
NPUSHW[ ]	/* 21 values pushed */
103 33 119 33 135 33 151 33 167 33 183 33 199 33 215 33 231 33 247 33 10
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 7 values pushed */
7 33 23 33 39 33 3
DELTAP2[ ]	/* DeltaExceptionP2 */
NPUSHW[ ]	/* 5 values pushed */
54 33 70 33 2
DELTAP2[ ]	/* DeltaExceptionP2 */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 403;
}
);
note = s;
},
{
glyphname = s.008;
lastChange = "2025-01-13 19:00:14 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(335,424,o),
(334.333,434,o),
(333,436,c),
(321.667,440.667,o),
(311,444.667,o),
(301,448,cs),
(268.333,458,o),
(240.333,463,o),
(217,463,cs),
(126.333,463,o),
(58,409.667,o),
(58,339,cs),
(58,307,o),
(70.667,277,o),
(96,249,cs),
(110.667,233,o),
(139.333,214.667,o),
(182,194,cs),
(243.333,165.333,o),
(274,132.333,o),
(274,95,cs),
(274,52.333,o),
(236.667,17,o),
(190,17,cs),
(165.333,17,o),
(143,25.667,o),
(123,43,cs),
(101.667,61,o),
(87,83,o),
(79,109,cs),
(75,120.333,o),
(71,126,o),
(67,126,cs),
(64.333,126,o),
(62,125.667,o),
(60,125,cs),
(54,123,l),
(47.333,123,o),
(44,119.333,o),
(44,112,cs),
(44,106,l),
(47,88,ls),
(48.333,79.333,o),
(49.333,71.333,o),
(50,64,cs),
(51.333,42,o),
(53.167,28.667,o),
(55.5,24,cs),
(57.833,19.333,o),
(64,14.667,o),
(74,10,cs),
(111.333,-8,o),
(148.667,-17,o),
(186,-17,cs),
(216.667,-17,o),
(243.333,-11,o),
(266,1,cs),
(323.333,31.667,o),
(352,74,o),
(352,128,cs),
(352,174,o),
(329.333,210.333,o),
(284,237,cs),
(263.333,249.667,o),
(250,257.667,o),
(244,261,cs),
(238,264.333,o),
(233.333,266.667,o),
(230,268,cs),
(205.333,281.333,o),
(190.333,290,o),
(185,294,cs),
(163.667,308,o),
(150.667,316.667,o),
(146,320,c),
(135.333,330.667,o),
(130,344,o),
(130,360,cs),
(130,402.667,o),
(164,431,o),
(212,431,cs),
(251.333,431,o),
(281,406,o),
(301,356,cs),
(307,341.333,o),
(313.667,334,o),
(321,334,cs),
(327.667,334,o),
(331.833,336,o),
(333.5,340,cs),
(335.167,344,o),
(336,353.667,o),
(336,369,cs),
(336,376.333,o),
(335.667,383,o),
(335,389,cs),
(335,406,l),
(335,406,l)
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */
10
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
66
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
67
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
66
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
57
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
57
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
13
MDRP[11100]	/* MoveDirectRelPt */
NPUSHW[ ]	/* 21 values pushed */
102 13 118 13 134 13 150 13 166 13 182 13 198 13 214 13 230 13 246 13 10
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 7 values pushed */
6 13 22 13 38 13 3
DELTAP2[ ]	/* DeltaExceptionP2 */
NPUSHW[ ]	/* 5 values pushed */
53 13 69 13 2
DELTAP2[ ]	/* DeltaExceptionP2 */
PUSHW[ ]	/* 1 value pushed */
67
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
24
MDRP[11100]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
51
MDRP[11100]	/* MoveDirectRelPt */
NPUSHW[ ]	/* 5 values pushed */
58 51 74 51 2
DELTAP2[ ]	/* DeltaExceptionP2 */
NPUSHW[ ]	/* 21 values pushed */
105 51 121 51 137 51 153 51 169 51 185 51 201 51 217 51 233 51 249 51 10
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 7 values pushed */
9 51 25 51 41 51 3
DELTAP2[ ]	/* DeltaExceptionP2 */
PUSHW[ ]	/* 1 value pushed */
26
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
26
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
57
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
33
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
33
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
57
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
39
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
39
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
13
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
46
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
46
MDAP[1]	/* MoveDirectAbsPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
37
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
60
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
60 42
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
37
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
28
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
28 38
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
60
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
10
MDRP[11100]	/* MoveDirectRelPt */
NPUSHW[ ]	/* 5 values pushed */
57 10 73 10 2
DELTAP2[ ]	/* DeltaExceptionP2 */
NPUSHW[ ]	/* 21 values pushed */
104 10 120 10 136 10 152 10 168 10 184 10 200 10 216 10 232 10 248 10 10
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 7 values pushed */
8 10 24 10 40 10 3
DELTAP2[ ]	/* DeltaExceptionP2 */
PUSHW[ ]	/* 1 value pushed */
28
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
48
MDRP[11100]	/* MoveDirectRelPt */
NPUSHW[ ]	/* 21 values pushed */
103 48 119 48 135 48 151 48 167 48 183 48 199 48 215 48 231 48 247 48 10
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 7 values pushed */
7 48 23 48 39 48 3
DELTAP2[ ]	/* DeltaExceptionP2 */
NPUSHW[ ]	/* 5 values pushed */
54 48 70 48 2
DELTAP2[ ]	/* DeltaExceptionP2 */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 395;
}
);
note = s;
},
{
glyphname = s.009;
lastChange = "2025-01-13 19:00:14 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(283,459.667,o),
(243,466,o),
(201,466,cs),
(103.667,466,o),
(44,417,o),
(44,341,cs),
(44,289,o),
(77.667,246.333,o),
(145,213,cs),
(202,185,ls),
(258,157,o),
(286,127,o),
(286,95,cs),
(286,48.333,o),
(247,14,o),
(195,14,cs),
(127,14,o),
(88.333,55,o),
(79,137,c),
(71.667,132.333,o),
(65.667,130,o),
(61,130,cs),
(56.333,130,o),
(50,132.333,o),
(42,137,c),
(46,12,l),
(86.667,-8.667,o),
(133,-19,o),
(185,-19,cs),
(286.333,-19,o),
(351,37.333,o),
(351,124,cs),
(351,184,o),
(324,218.333,o),
(244,261,cs),
(196,286,ls),
(158,305.333,o),
(138,315.667,o),
(136,317,cs),
(115.333,332.333,o),
(105,350.667,o),
(105,372,cs),
(105,410.667,o),
(140.667,438,o),
(190,438,cs),
(244.667,438,o),
(279.667,406.333,o),
(295,343,c),
(303.667,346.333,o),
(309,348,o),
(311,348,cs),
(315,348,o),
(320,346.333,o),
(326,343,c),
(321,447,l),
(321,447,l)
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */
10
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
43
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
44
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
18
MDRP[11100]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
33
MDRP[11100]	/* MoveDirectRelPt */
NPUSHW[ ]	/* 5 values pushed */
58 33 74 33 2
DELTAP2[ ]	/* DeltaExceptionP2 */
NPUSHW[ ]	/* 21 values pushed */
105 33 121 33 137 33 153 33 169 33 185 33 201 33 217 33 233 33 249 33 10
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 7 values pushed */
9 33 25 33 41 33 3
DELTAP2[ ]	/* DeltaExceptionP2 */
PUSHW[ ]	/* 3 values pushed */
1 18 33
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHW[ ]	/* 1 value pushed */
43
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
38
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
38
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
10
MDRP[11100]	/* MoveDirectRelPt */
NPUSHW[ ]	/* 21 values pushed */
102 10 118 10 134 10 150 10 166 10 182 10 198 10 214 10 230 10 246 10 10
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 7 values pushed */
6 10 22 10 38 10 3
DELTAP2[ ]	/* DeltaExceptionP2 */
NPUSHW[ ]	/* 5 values pushed */
53 10 69 10 2
DELTAP2[ ]	/* DeltaExceptionP2 */
PUSHW[ ]	/* 1 value pushed */
38
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
23
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
23
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 3 values pushed */
28 38 10
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
33
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
41
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
41 38
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
33
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
21
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
21 34
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 3 values pushed */
1 21 41
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHW[ ]	/* 1 value pushed */
41
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
7
MDRP[11100]	/* MoveDirectRelPt */
NPUSHW[ ]	/* 5 values pushed */
57 7 73 7 2
DELTAP2[ ]	/* DeltaExceptionP2 */
NPUSHW[ ]	/* 21 values pushed */
104 7 120 7 136 7 152 7 168 7 184 7 200 7 216 7 232 7 248 7 10
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 7 values pushed */
8 7 24 7 40 7 3
DELTAP2[ ]	/* DeltaExceptionP2 */
PUSHW[ ]	/* 3 values pushed */
24 21 41
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHW[ ]	/* 3 values pushed */
28 21 41
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHW[ ]	/* 1 value pushed */
21
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
30
MDRP[11100]	/* MoveDirectRelPt */
NPUSHW[ ]	/* 21 values pushed */
103 30 119 30 135 30 151 30 167 30 183 30 199 30 215 30 231 30 247 30 10
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 7 values pushed */
7 30 23 30 39 30 3
DELTAP2[ ]	/* DeltaExceptionP2 */
NPUSHW[ ]	/* 5 values pushed */
54 30 70 30 2
DELTAP2[ ]	/* DeltaExceptionP2 */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 393;
}
);
note = s;
},
{
glyphname = s.010;
lastChange = "2025-01-13 19:00:14 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(53,15,l),
(79.667,4.333,o),
(119.333,-9,o),
(170,-9,cs),
(244.082,-9,o),
(317,34.181,o),
(317,124,cs),
(317,197.364,o),
(272.876,226.325,o),
(196,273,c),
(161.333,297,o),
(125,319.333,o),
(125,362,cs),
(125,399.333,o),
(153.333,426,o),
(192,426,cs),
(248.197,426,o),
(267.903,373.688,o),
(276,344,c),
(303,348,l),
(294,442,l),
(270,448.667,o),
(230.667,462,o),
(188,462,cs),
(118.197,462,o),
(54,417.455,o),
(54,335,cs),
(54,268.734,o),
(96.059,235.068,o),
(150,201,cs),
(218.885,158.244,o),
(246,135.891,o),
(246,98,cs),
(246,51.333,o),
(205.333,27,o),
(164,27,cs),
(147.577,27,o),
(115.051,29.919,o),
(90,70,cs),
(79.333,88.667,o),
(75.667,105.667,o),
(69,131,c),
(39,128,l),
(39,128,l)
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */
57
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
58
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
47
MDRP[11100]	/* MoveDirectRelPt */
PUSHW[ ]	/* 2 values pushed */
11 2
MIRP[11100]	/* MoveIndirectRelPt */
NPUSHW[ ]	/* 5 values pushed */
138 11 154 11 2
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 17 values pushed */
9 11 25 11 41 11 57 11 73 11 89 11 105 11 121 11 8
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHW[ ]	/* 1 value pushed */
57
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
21
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
21
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 2 values pushed */
39 2
MIRP[11100]	/* MoveIndirectRelPt */
NPUSHW[ ]	/* 17 values pushed */
6 39 22 39 38 39 54 39 70 39 86 39 102 39 118 39 8
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 5 values pushed */
133 39 149 39 2
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHW[ ]	/* 1 value pushed */
21
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
55
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
55
MDAP[1]	/* MoveDirectAbsPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
0
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
26
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
26 14
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
52
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
52 4
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 2 values pushed */
8 1
MIRP[11100]	/* MoveIndirectRelPt */
NPUSHW[ ]	/* 33 values pushed */
7 8 23 8 39 8 55 8 71 8 87 8 103 8 119 8 135 8 151 8 167 8 183 8 199 8 215 8 231 8 247 8 16
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 19 values pushed */
7 8 23 8 39 8 55 8 71 8 87 8 103 8 119 8 135 8 9
DELTAP2[ ]	/* DeltaExceptionP2 */
NPUSHW[ ]	/* 5 values pushed */
150 8 166 8 2
DELTAP2[ ]	/* DeltaExceptionP2 */
PUSHW[ ]	/* 1 value pushed */
26
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
36 1
MIRP[11100]	/* MoveIndirectRelPt */
NPUSHW[ ]	/* 5 values pushed */
153 36 169 36 2
DELTAP2[ ]	/* DeltaExceptionP2 */
NPUSHW[ ]	/* 33 values pushed */
8 36 24 36 40 36 56 36 72 36 88 36 104 36 120 36 136 36 152 36 168 36 184 36 200 36 216 36 232 36 248 36 16
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 19 values pushed */
8 36 24 36 40 36 56 36 72 36 88 36 104 36 120 36 136 36 9
DELTAP2[ ]	/* DeltaExceptionP2 */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 360;
}
);
note = s;
},
{
glyphname = s.011;
lastChange = "2025-01-13 19:00:14 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(318,432.667,o),
(316,439,o),
(312,441,cs),
(288.667,453.667,o),
(254.333,460,o),
(209,460,cs),
(119.667,460,o),
(52,402.333,o),
(52,325,cs),
(52,270.333,o),
(72.667,242.333,o),
(142,209,cs),
(197,182,ls),
(254.333,155.333,o),
(271,134.667,o),
(271,96,cs),
(271,50.667,o),
(234.667,17,o),
(188,17,cs),
(136,17,o),
(99,52.333,o),
(91,115,cs),
(89,131,ls),
(87,143.667,o),
(80.333,150,o),
(69,150,cs),
(61.667,150,o),
(56.5,147.833,o),
(53.5,143.5,cs),
(50.5,139.167,o),
(49,128.333,o),
(49,111,cs),
(49,23,ls),
(49,17.667,o),
(53.333,12.333,o),
(62,7,cs),
(97.333,-11,o),
(135.333,-20,o),
(176,-20,cs),
(274.667,-20,o),
(342,40,o),
(342,124,cs),
(342,160.667,o),
(330.333,190.333,o),
(307,213,cs),
(289.667,229,o),
(260.333,246.667,o),
(219,266,cs),
(172,288,ls),
(136.667,304.667,o),
(119,326.667,o),
(119,354,cs),
(119,396.667,o),
(150.333,425,o),
(197,425,cs),
(239.667,425,o),
(266.333,400.333,o),
(277,351,cs),
(280,337,ls),
(282.667,323,o),
(289.333,316,o),
(300,316,cs),
(312,316,o),
(318,327.333,o),
(318,350,cs),
(318,422,l),
(318,422,l)
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */
10
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
52
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
53
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
18
MDRP[11100]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
38
MDRP[11100]	/* MoveDirectRelPt */
NPUSHW[ ]	/* 5 values pushed */
58 38 74 38 2
DELTAP2[ ]	/* DeltaExceptionP2 */
NPUSHW[ ]	/* 21 values pushed */
105 38 121 38 137 38 153 38 169 38 185 38 201 38 217 38 233 38 249 38 10
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 7 values pushed */
9 38 25 38 41 38 3
DELTAP2[ ]	/* DeltaExceptionP2 */
PUSHW[ ]	/* 1 value pushed */
6
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
6
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
52
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
45
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
45
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
11
MDRP[11100]	/* MoveDirectRelPt */
NPUSHW[ ]	/* 21 values pushed */
102 11 118 11 134 11 150 11 166 11 182 11 198 11 214 11 230 11 246 11 10
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 7 values pushed */
6 11 22 11 38 11 3
DELTAP2[ ]	/* DeltaExceptionP2 */
NPUSHW[ ]	/* 5 values pushed */
53 11 69 11 2
DELTAP2[ ]	/* DeltaExceptionP2 */
PUSHW[ ]	/* 1 value pushed */
45
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
25
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
25
MDAP[1]	/* MoveDirectAbsPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
35
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
48
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
48 40
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
35
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
21
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
21 36
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
48
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
8
MDRP[11100]	/* MoveDirectRelPt */
NPUSHW[ ]	/* 5 values pushed */
57 8 73 8 2
DELTAP2[ ]	/* DeltaExceptionP2 */
NPUSHW[ ]	/* 21 values pushed */
104 8 120 8 136 8 152 8 168 8 184 8 200 8 216 8 232 8 248 8 10
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 7 values pushed */
8 8 24 8 40 8 3
DELTAP2[ ]	/* DeltaExceptionP2 */
PUSHW[ ]	/* 1 value pushed */
21
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
35
MDRP[11100]	/* MoveDirectRelPt */
NPUSHW[ ]	/* 21 values pushed */
103 35 119 35 135 35 151 35 167 35 183 35 199 35 215 35 231 35 247 35 10
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 7 values pushed */
7 35 23 35 39 35 3
DELTAP2[ ]	/* DeltaExceptionP2 */
NPUSHW[ ]	/* 5 values pushed */
54 35 70 35 2
DELTAP2[ ]	/* DeltaExceptionP2 */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 379;
}
);
note = s;
},
{
glyphname = t.001;
lastChange = "2025-01-13 19:00:14 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(342.667,407,o),
(344.333,436.333,o),
(331,447,c),
(205,447,ls),
(185,447,o),
(185,446.667,o),
(185,468,cs),
(185,519,l),
(179.667,527,o),
(166.333,527.667,o),
(161,525,c),
(149,502.333,o),
(129,471.333,o),
(113,458,cs),
(101,447.333,o),
(74.333,433.667,o),
(41,423,c),
(35.667,415,o),
(37.333,403,o),
(44,399,c),
(76,399,ls),
(98.667,399,o),
(100,396.667,o),
(100,366,cs),
(100,107,ls),
(100,36.699,o),
(120.077,-16,o),
(218,-16,cs),
(275.333,-16,o),
(315.667,12,o),
(337,36,c),
(339.667,44,o),
(334.333,56,o),
(325,56,cs),
(323.667,56,o),
(320,53.667,o),
(314,49,cs),
(308,44.333,o),
(302.333,41.333,o),
(297,40,cs),
(287,36,o),
(276.667,34,o),
(266,34,cs),
(194.085,34,o),
(184,84.972,o),
(184,160,cs),
(184,372,ls),
(184,396,o),
(184,399,o),
(204,399,cs),
(332,399,l),
(332,399,l)
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */
4 2 25 4
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
4
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
42
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
42
MDAP[1]	/* MoveDirectAbsPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
0
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
46
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
46 10
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
20
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
20 4
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
46
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
0 1
MIRP[11100]	/* MoveIndirectRelPt */
PUSHW[ ]	/* 1 value pushed */
20
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
9 1
MIRP[11100]	/* MoveIndirectRelPt */
NPUSHW[ ]	/* 33 values pushed */
7 9 23 9 39 9 55 9 71 9 87 9 103 9 119 9 135 9 151 9 167 9 183 9 199 9 215 9 231 9 247 9 16
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 23 values pushed */
7 9 23 9 39 9 55 9 71 9 87 9 103 9 119 9 135 9 151 9 167 9 11
DELTAP2[ ]	/* DeltaExceptionP2 */
NPUSHW[ ]	/* 5 values pushed */
182 9 198 9 2
DELTAP2[ ]	/* DeltaExceptionP2 */
PUSHW[ ]	/* 1 value pushed */
0
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
29
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
30
MDRP[10000]	/* MoveDirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 348;
}
);
note = t;
},
{
glyphname = t.002;
lastChange = "2025-01-13 19:00:14 +0000";
layers = (
{
hints = (
{
horizontal = 1;
place = (387,46);
type = Stem;
},
{
horizontal = 1;
place = (-6,49);
type = Stem;
},
{
place = (88,80);
type = Stem;
}
);
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(145,567,l),
(130,528,l),
(97,472,l),
(37,420,l),
(30,387,l),
(92,387,l),
(88,137,l),
(88,72,l),
(104,30,l),
(142,1,l),
(191,-6,l),
(241,-2,l),
(309,25,l),
(299,55,l),
(245,42,l),
(204,52,l),
(175,83,l),
(168,167,l),
(172,387,l),
(296,387,l),
(311,432,l),
(173,432,l),
(176,567,l),
(176,567,l)
);
}
);
width = 317;
}
);
},
{
glyphname = t.003;
lastChange = "2025-01-13 19:00:14 +0000";
layers = (
{
hints = (
{
horizontal = 1;
place = (387,46);
type = Stem;
},
{
horizontal = 1;
place = (-6,49);
type = Stem;
},
{
place = (88,80);
type = Stem;
}
);
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(145,567,l),
(130,528,l),
(97,472,l),
(37,420,l),
(30,387,l),
(92,387,l),
(88,137,l),
(88,72,l),
(104,30,l),
(142,1,l),
(191,-6,l),
(241,-2,l),
(309,25,l),
(299,55,l),
(245,42,l),
(204,52,l),
(175,83,l),
(168,167,l),
(172,387,l),
(296,387,l),
(311,432,l),
(173,432,l),
(176,567,l),
(176,567,l)
);
}
);
width = 317;
}
);
},
{
glyphname = t.004;
lastChange = "2025-01-13 19:00:14 +0000";
layers = (
{
hints = (
{
horizontal = 1;
place = (413,42);
type = Stem;
},
{
horizontal = 1;
place = (-1,54);
type = Stem;
},
{
place = (67,103);
type = Stem;
}
);
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(232,413,l),
(284,412,l),
(296,419,l),
(299,432,l),
(293,447,l),
(278,451,l),
(258,449,l),
(219,449,l),
(190,450,l),
(175,458,l),
(172,480,l),
(174,529,l),
(168,548,l),
(160,554,l),
(143,539,l),
(88,477,l),
(22,437,l),
(13,426,l),
(15,416,l),
(26,411,l),
(53,413,l),
(71,403,l),
(75,379,l),
(74,352,l),
(74,293,l),
(70,216,l),
(68,149,l),
(66,106,l),
(72,62,l),
(90,33,l),
(136,5,l),
(177,-4,l),
(214,2,l),
(267,26,l),
(292,43,l),
(311,69,l),
(305,79,l),
(277,65,l),
(233,53,l),
(203,58,l),
(185,75,l),
(174,101,l),
(170,134,l),
(170,178,l),
(169,279,l),
(170,348,l),
(177,406,l),
(194,411,l),
(218,412,l),
(218,412,l)
);
}
);
width = 295;
}
);
},
{
glyphname = t.005;
lastChange = "2025-01-13 19:00:14 +0000";
layers = (
{
hints = (
{
horizontal = 1;
place = (392,46);
type = Stem;
},
{
horizontal = 1;
place = (-11,62);
type = Stem;
},
{
place = (71,75);
type = Stem;
}
);
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(151,514,l),
(148,530,l),
(140,531,l),
(124,517,l),
(102,496,l),
(85,480,l),
(34,437,l),
(16,424,l),
(5,408,l),
(6,393,l),
(19,393,l),
(59,388,l),
(71,376,l),
(73,351,l),
(73,280,l),
(74,205,l),
(72,165,l),
(72,106,l),
(79,49,l),
(94,23,l),
(112,7,l),
(142,-5,l),
(182,-12,l),
(221,-6,l),
(248,10,l),
(266,26,l),
(277,38,l),
(286,50,l),
(298,75,l),
(302,86,l),
(286,99,l),
(278,87,l),
(268,74,l),
(256,61,l),
(215,50,l),
(177,61,l),
(162,75,l),
(154,92,l),
(150,148,l),
(151,188,l),
(150,224,l),
(151,255,l),
(150,277,l),
(151,324,l),
(150,340,l),
(151,371,l),
(152,392,l),
(172,392,l),
(192,393,l),
(235,391,l),
(272,391,l),
(290,390,l),
(294,411,l),
(293,420,l),
(292,436,l),
(281,436,l),
(267,438,l),
(251,437,l),
(233,438,l),
(203,437,l),
(186,438,l),
(175,437,l),
(164,438,l),
(154,438,l),
(153,454,l),
(153,454,l)
);
}
);
width = 297;
}
);
},
{
glyphname = t.006;
lastChange = "2025-01-13 19:00:14 +0000";
layers = (
{
hints = (
{
horizontal = 1;
place = (390,68);
type = Stem;
},
{
horizontal = 1;
place = (-9,50);
type = Stem;
},
{
place = (79,76);
type = Stem;
}
);
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(186,447,l),
(171,446,l),
(164,452,l),
(165,472,l),
(167,528,l),
(158,572,l),
(150,576,l),
(131,551,l),
(120,520,l),
(73,443,l),
(44,428,l),
(24,421,l),
(19,411,l),
(31,399,l),
(49,392,l),
(74,387,l),
(81,365,l),
(80,319,l),
(79,280,l),
(78,197,l),
(79,161,l),
(82,65,l),
(97,35,l),
(117,16,l),
(169,-9,l),
(192,-10,l),
(219,-9,l),
(298,30,l),
(309,44,l),
(296,61,l),
(262,47,l),
(221,39,l),
(200,44,l),
(176,63,l),
(159,88,l),
(155,154,l),
(154,282,l),
(154,314,l),
(158,381,l),
(182,388,l),
(223,388,l),
(260,389,l),
(295,393,l),
(301,403,l),
(307,432,l),
(293,449,l),
(284,448,l),
(257,448,l),
(223,447,l),
(201,444,l),
(201,444,l)
);
}
);
width = 316;
}
);
},
{
glyphname = t.007;
lastChange = "2025-01-13 19:00:14 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(87,34.333,o),
(129,-9,o),
(193,-9,cs),
(233.667,-9,o),
(274,8,o),
(314,42,cs),
(325.333,51.333,o),
(331,59.667,o),
(331,67,cs),
(331,73,o),
(328.667,76,o),
(324,76,cs),
(322.667,76,o),
(319,74.667,o),
(313,72,c),
(285,54.667,o),
(262.667,46,o),
(246,46,cs),
(199.333,46,o),
(184,71.333,o),
(184,138,cs),
(184,383,ls),
(184,405.667,o),
(184.667,408,o),
(202,408,cs),
(296,408,ls),
(308.667,408,o),
(315,414,o),
(315,426,cs),
(315,440.667,o),
(313,445,o),
(293,445,cs),
(208,445,ls),
(200.667,445,o),
(195.333,445.667,o),
(192,447,cs),
(186.667,449,o),
(184,456.333,o),
(184,469,cs),
(184,536,ls),
(184,546.667,o),
(180.667,552,o),
(174,552,cs),
(170,552,o),
(164.667,547.667,o),
(158,539,c),
(131.333,495.667,o),
(102.667,466,o),
(72,450,cs),
(48,436.667,o),
(35.667,429.667,o),
(35,429,c),
(30.333,427,o),
(28,423.667,o),
(28,419,cs),
(28,411,o),
(33.333,407,o),
(44,407,cs),
(50.667,407,o),
(56.667,407.333,o),
(62,408,cs),
(69,408,ls),
(81,408,o),
(87,402,o),
(87,390,cs),
(87,101,l),
(87,101,l)
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */
10
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 3 values pushed */
34 0 13
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
34
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
18
MDRP[10000]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
16
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
37
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
47
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
47 38
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 3 values pushed */
23 30 13
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
23
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
30
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
3
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
30
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
6
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
6
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
47
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
37
MDRP[11100]	/* MoveDirectRelPt */
NPUSHW[ ]	/* 21 values pushed */
103 37 119 37 135 37 151 37 167 37 183 37 199 37 215 37 231 37 247 37 10
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 7 values pushed */
7 37 23 37 39 37 3
DELTAP2[ ]	/* DeltaExceptionP2 */
NPUSHW[ ]	/* 5 values pushed */
54 37 70 37 2
DELTAP2[ ]	/* DeltaExceptionP2 */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 332;
}
);
note = t;
},
{
glyphname = t.008;
lastChange = "2025-01-13 19:00:14 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(240.333,438,o),
(221.667,437.333,o),
(181,436,cs),
(175.667,436,o),
(173.333,448.667,o),
(174,474,cs),
(174,482.667,o),
(174.333,492.5,o),
(175,503.5,cs),
(175.667,514.5,o),
(176,520.333,o),
(176,521,cs),
(176,527.667,o),
(172.667,531,o),
(166,531,cs),
(161.333,531,o),
(154.667,526.333,o),
(146,517,cs),
(137,506,ls),
(132.333,501.333,o),
(128.333,497.5,o),
(125,494.5,cs),
(121.667,491.5,o),
(114.667,485,o),
(104,475,cs),
(85.333,459,o),
(72,447.667,o),
(64,441,cs),
(52.667,431.667,o),
(43.667,423.667,o),
(37,417,c),
(28.333,412.333,o),
(24,406,o),
(24,398,cs),
(24,391.333,o),
(30,387.667,o),
(42,387,cs),
(94,383,o),
(95,383,o),
(95,331,cs),
(95,317,ls),
(95.667,309.667,o),
(96,302.333,o),
(96,295,cs),
(96,246,ls),
(96,233.333,o),
(96.667,223.333,o),
(98,216,cs),
(98.667,212.667,o),
(99,210.333,o),
(99,209,cs),
(99,205.667,o),
(98.667,203,o),
(98,201,cs),
(96.667,193.667,o),
(96,187,o),
(96,181,cs),
(96,135,o),
(96.667,105.667,o),
(98,93,cs),
(102,55,o),
(111.667,28,o),
(127,12,cs),
(147,-10,o),
(176,-21,o),
(214,-21,cs),
(259.333,-21,o),
(294.333,1,o),
(319,45,cs),
(322.333,51.667,o),
(327.333,63.333,o),
(334,80,c),
(334,82.667,o),
(323,93,o),
(319,93,c),
(317,92.333,o),
(314.667,90.333,o),
(312,87,cs),
(292,57,o),
(269.667,42,o),
(245,42,cs),
(207.667,42,o),
(175.667,70.333,o),
(177,121,cs),
(178,179,ls),
(177.333,198.333,o),
(176.667,212.667,o),
(176,222,cs),
(177,260,l),
(175,353,ls),
(173.667,390.333,o),
(165,391,o),
(213,391,cs),
(223,391,ls),
(231.667,390.333,o),
(238.667,390,o),
(244,390,cs),
(262,391,l),
(264,391.667,o),
(266.667,392,o),
(270,392,cs),
(272,392,o),
(274.5,391.667,o),
(277.5,391,cs),
(280.5,390.333,o),
(282.667,390,o),
(284,390,cs),
(301.333,390,o),
(311.667,390.667,o),
(315,392,c),
(317.667,400.667,o),
(319,408.667,o),
(319,416,cs),
(320.333,432,o),
(317,438,o),
(289,438,cs),
(282,438,ls),
(276,437.333,o),
(269,437,o),
(261,437,cs),
(255,437,o),
(250,437.333,o),
(246,438,cs),
(237,438,l),
(237,438,l)
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */
10
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 3 values pushed */
26 61 13
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
26
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
29
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
29
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
61
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
48
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
48
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
61
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
50
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
50
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
61
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
54
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
54
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
61
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
58
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
58
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
26
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
81
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
81
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
26
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
84
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
84
MDAP[1]	/* MoveDirectAbsPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
79
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
37
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
44
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
44 38
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 3 values pushed */
86 65 13
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
86
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
0
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
0
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
86
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
3
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
3
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
86
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
5
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
5
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
65
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
13
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
13
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
65
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
16
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
16
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
65
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
18
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
18
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
65
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
21
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
21
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
44
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
33
MDRP[11100]	/* MoveDirectRelPt */
NPUSHW[ ]	/* 21 values pushed */
103 33 119 33 135 33 151 33 167 33 183 33 199 33 215 33 231 33 247 33 10
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 7 values pushed */
7 33 23 33 39 33 3
DELTAP2[ ]	/* DeltaExceptionP2 */
NPUSHW[ ]	/* 5 values pushed */
54 33 70 33 2
DELTAP2[ ]	/* DeltaExceptionP2 */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 355;
}
);
note = t;
},
{
glyphname = t.009;
lastChange = "2025-01-13 19:00:14 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(169.667,465.333,o),
(168,485,o),
(168,501,cs),
(168,517,o),
(169.667,537,o),
(173,561,c),
(167.667,556.333,o),
(163.333,554,o),
(160,554,cs),
(156.667,554,o),
(152,556.333,o),
(146,561,c),
(131.333,482.333,o),
(80.333,429.667,o),
(23,431,c),
(24.333,423,o),
(25,418.667,o),
(25,418,cs),
(25,416.667,o),
(24.333,413,o),
(23,407,c),
(99,407,l),
(99,298,l),
(94,118,ls),
(91.333,18,o),
(115.333,-19,o),
(178,-19,cs),
(210.667,-19,o),
(250.667,-4.333,o),
(298,25,cs),
(328,43,l),
(320.667,53,o),
(316.667,59.667,o),
(316,63,c),
(283,51,ls),
(261.667,43,o),
(240.333,39,o),
(219,39,cs),
(201,39,o),
(188.5,46.167,o),
(181.5,60.5,cs),
(174.5,74.833,o),
(171,101,o),
(171,139,cs),
(171,149.667,o),
(171.333,164.333,o),
(172,183,cs),
(172.667,201.667,o),
(173,226,o),
(173,256,cs),
(173,407,l),
(316,407,l),
(312.667,417,o),
(311,423.667,o),
(311,427,cs),
(311,431,o),
(312.667,438.667,o),
(316,450,c),
(173,442,l),
(173,442,l)
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */
10
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 3 values pushed */
10 24 13
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
10
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
0
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
0
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
10
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
6
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
6
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
24
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
26
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
26
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 3 values pushed */
34 24 10
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHW[ ]	/* 1 value pushed */
10
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
38
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
38
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
10
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
40
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
40
MDAP[1]	/* MoveDirectAbsPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
34
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
36
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
38
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
33
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
21
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
21 34
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 3 values pushed */
0 6 13
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
0
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
6
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
26
MDRP[10000]	/* MoveDirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 339;
}
);
note = t;
},
{
glyphname = t.010;
lastChange = "2025-01-13 19:00:14 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(92,386,l),
(88,133,ls),
(88,70.94,o),
(87.309,43.691,o),
(114,17,cs),
(138,-5.667,o),
(170.333,-9,o),
(193,-9,cs),
(233,-9,o),
(260.333,0.667,o),
(311,22,c),
(301,52,l),
(281,45.333,o),
(267.333,40,o),
(246,40,cs),
(226,40,o),
(196,44.333,o),
(180,71,cs),
(169.333,91,o),
(169,116,o),
(169,164,cs),
(173,385,l),
(298,385,l),
(314,431,l),
(175,431,l),
(177,566,l),
(146,566,l),
(128.042,512.127,o),
(112.665,472.307,o),
(38,417,c),
(30,386,l),
(30,386,l)
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */
11 2 32 4
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
11
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
7
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
7
MDAP[1]	/* MoveDirectAbsPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
0
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
24
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
24 4
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 4 values pushed */
8 1 9 4
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
24
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
17 1
MIRP[11100]	/* MoveIndirectRelPt */
NPUSHW[ ]	/* 33 values pushed */
7 17 23 17 39 17 55 17 71 17 87 17 103 17 119 17 135 17 151 17 167 17 183 17 199 17 215 17 231 17 247 17 16
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 19 values pushed */
7 17 23 17 39 17 55 17 71 17 87 17 103 17 119 17 135 17 9
DELTAP2[ ]	/* DeltaExceptionP2 */
NPUSHW[ ]	/* 5 values pushed */
150 17 166 17 2
DELTAP2[ ]	/* DeltaExceptionP2 */
PUSHW[ ]	/* 1 value pushed */
9
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
33
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
33
MDAP[1]	/* MoveDirectAbsPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 318;
}
);
note = t;
},
{
glyphname = t.011;
lastChange = "2025-01-13 19:00:14 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(308,410,l),
(173,410,l),
(175,473,ls),
(175,477,o),
(175.667,483,o),
(177,491,cs),
(177.667,496.333,o),
(178,501,o),
(178,505,cs),
(178,515,o),
(173.333,520,o),
(164,520,cs),
(156,520,o),
(149.667,514.667,o),
(145,504,cs),
(140,491,ls),
(125.333,455,o),
(85.667,415,o),
(51,399,cs),
(41,395,ls),
(29,389.667,o),
(23,383.333,o),
(23,376,cs),
(23,367.333,o),
(33.667,363,o),
(55,363,cs),
(94,363,l),
(94,163,ls),
(94,102.333,o),
(98.333,61,o),
(107,39,cs),
(119.667,5,o),
(151,-12,o),
(201,-12,cs),
(250.333,-12,o),
(311,20.333,o),
(311,47,cs),
(311,54.333,o),
(307,58,o),
(299,58,cs),
(295,58,o),
(290.667,56.667,o),
(286,54,cs),
(276,48,ls),
(263.333,40,o),
(249.333,36,o),
(234,36,cs),
(206.667,36,o),
(188.667,49,o),
(180,75,cs),
(175.333,89,o),
(173,113,o),
(173,147,cs),
(173,363,l),
(308,363,l),
(308,363,l)
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */
10
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 3 values pushed */
1 19 13
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
1
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
34
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
34
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
1
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
38
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
38
MDAP[1]	/* MoveDirectAbsPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
32
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
35
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
15
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
15 36
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 3 values pushed */
39 0 13
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
39
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
0
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
20
MDRP[10000]	/* MoveDirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 316;
}
);
note = t;
},
{
glyphname = u.001;
lastChange = "2025-01-13 19:00:14 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(180,384,o),
(180.167,405,o),
(180.5,419,cs),
(180.833,433,o),
(182,445,o),
(184,455,c),
(182.667,459,o),
(178.667,461.333,o),
(172,462,c),
(146.667,454,o),
(104.333,443.333,o),
(51,442,c),
(43,439.333,o),
(41,423.667,o),
(49,417,c),
(62,411,ls),
(96.173,397.857,o),
(96,380.628,o),
(96,315,cs),
(96,126,ls),
(96,34,o),
(134,-16,o),
(234,-16,cs),
(294.86,-16,o),
(352.762,20.084,o),
(390,43,c),
(396.667,43,o),
(400,37.667,o),
(400,27,cs),
(400,-19,l),
(402.667,-24.333,o),
(407.333,-27,o),
(414,-27,c),
(450.516,-6.134,o),
(527.825,6.959,o),
(562,15,c),
(566.667,17,o),
(569,22.333,o),
(569,31,cs),
(569,39,o),
(567,44.667,o),
(563,48,c),
(545.667,44,o),
(531,42,o),
(519,42,cs),
(503,42,o),
(493.167,51.167,o),
(489.5,69.5,cs),
(485.833,87.833,o),
(484,119.667,o),
(484,165,cs),
(484,356,ls),
(484,400,o),
(485,433,o),
(487,455,c),
(486.333,458.333,o),
(483,460.667,o),
(477,462,c),
(452.23,450.991,o),
(383.966,442,o),
(345,442,c),
(340.333,440,o),
(338,436,o),
(338,430,cs),
(338,424,o),
(339.667,419.667,o),
(343,417,c),
(358,411,ls),
(394.874,396.818,o),
(400,395.725,o),
(400,322,cs),
(400,136,ls),
(400,101.333,o),
(393,83.333,o),
(377,70,cs),
(351.667,48.667,o),
(315.333,36,o),
(286,36,cs),
(199.434,36,o),
(180,91.355,o),
(180,167,cs),
(180,356,l),
(180,356,l)
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */
0 2 59 4
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 4 values pushed */
32 2 11 4
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
32
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
27
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
27
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
32
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
29
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
29
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
11
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
48
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
0
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
72
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
72
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
0
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
74
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
74
MDAP[1]	/* MoveDirectAbsPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
0
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
27
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
27 10
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
29
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
29 10
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
72
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
72 10
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
74
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
74 10
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
48
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
48 4
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
56
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
56 4
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 2 values pushed */
5 1
MIRP[11100]	/* MoveIndirectRelPt */
NPUSHW[ ]	/* 33 values pushed */
7 5 23 5 39 5 55 5 71 5 87 5 103 5 119 5 135 5 151 5 167 5 183 5 199 5 215 5 231 5 247 5 16
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 23 values pushed */
7 5 23 5 39 5 55 5 71 5 87 5 103 5 119 5 135 5 151 5 167 5 11
DELTAP2[ ]	/* DeltaExceptionP2 */
NPUSHW[ ]	/* 5 values pushed */
182 5 198 5 2
DELTAP2[ ]	/* DeltaExceptionP2 */
PUSHW[ ]	/* 1 value pushed */
35
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
35
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
51
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
51
MDAP[1]	/* MoveDirectAbsPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 580;
}
);
note = u;
},
{
glyphname = u.002;
lastChange = "2025-01-13 19:00:14 +0000";
layers = (
{
background = {
shapes = (
{
closed = 1;
nodes = (
(377,270,l),
(372,106,l),
(334,79,l),
(298,64,l),
(258,57,l),
(205,72,l),
(181,101,l),
(169,160,l),
(167,265,l),
(169,459,l),
(29,450,l),
(29,414,l),
(63,411,l),
(82,397,l),
(88,348,l),
(88,173,l),
(91,94,l),
(102,56,l),
(128,24,l),
(147,7,l),
(185,-6,l),
(217,-11,l),
(265,-2,l),
(335,33,l),
(374,68,l),
(367,0,l),
(380,-12,l),
(459,5,l),
(516,12,l),
(517,46,l),
(474,51,l),
(461,62,l),
(452,85,l),
(451,121,l),
(452,200,l),
(454,319,l),
(458,457,l),
(300,444,l),
(299,409,l),
(341,405,l),
(366,396,l),
(375,366,l),
(378,318,l)
);
}
);
};
hints = (
{
horizontal = 1;
place = (410,51);
type = Stem;
},
{
horizontal = 1;
place = (-11,68);
type = Stem;
},
{
place = (377,74);
type = Stem;
},
{
place = (88,79);
type = Stem;
}
);
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(431,-1,o),
(487,9,o),
(516,12,c),
(517,46,l),
(479,46,o),
(452,62,o),
(452,85,cs),
(452,169,o),
(454,344,o),
(458,457,c),
(351,449,o),
(286,444,o),
(300,444,c),
(299,409,l),
(345,409,o),
(378,391,o),
(378,366,cs),
(378,329,o),
(375,183,o),
(371,87,c),
(377,97,l),
(367,0,l),
(380,-12,l),
(380,-12,l)
);
},
{
closed = 1;
nodes = (
(284,-8,o),
(365,44,o),
(413,115,c),
(413,144,l),
(369,94,o),
(306,58,o),
(260,58,cs),
(206,58,o),
(168,102,o),
(168,163,cs),
(168,271,o),
(169,408,o),
(169,459,c),
(29,451,l),
(29,414,l),
(64,414,o),
(88,401,o),
(88,382,cs),
(88,328,o),
(88,226,o),
(88,132,cs),
(88,43,o),
(141,-10,o),
(217,-10,cs)
);
}
);
width = 548;
}
);
},
{
glyphname = u.003;
lastChange = "2025-01-13 19:00:14 +0000";
layers = (
{
hints = (
{
horizontal = 1;
place = (410,51);
type = Stem;
},
{
horizontal = 1;
place = (-11,68);
type = Stem;
},
{
place = (377,74);
type = Stem;
},
{
place = (88,79);
type = Stem;
}
);
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(377,270,l),
(372,106,l),
(334,79,l),
(298,64,l),
(258,57,l),
(205,72,l),
(181,101,l),
(169,160,l),
(167,265,l),
(169,459,l),
(29,450,l),
(29,414,l),
(63,411,l),
(82,397,l),
(88,348,l),
(88,173,l),
(91,94,l),
(102,56,l),
(128,24,l),
(147,7,l),
(185,-6,l),
(217,-11,l),
(265,-2,l),
(335,33,l),
(374,68,l),
(367,0,l),
(380,-12,l),
(459,5,l),
(516,12,l),
(517,46,l),
(474,51,l),
(461,62,l),
(452,85,l),
(451,121,l),
(452,200,l),
(454,319,l),
(458,457,l),
(300,444,l),
(299,409,l),
(341,405,l),
(366,396,l),
(375,366,l),
(378,318,l),
(378,318,l)
);
}
);
width = 548;
}
);
},
{
glyphname = u.004;
lastChange = "2025-01-13 19:00:14 +0000";
layers = (
{
hints = (
{
horizontal = 1;
place = (421,34);
type = Stem;
},
{
horizontal = 1;
place = (-10,61);
type = Stem;
},
{
place = (364,93);
type = Stem;
},
{
place = (70,91);
type = Stem;
}
);
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(364,155,l),
(361,104,l),
(343,77,l),
(302,56,l),
(261,50,l),
(223,57,l),
(199,67,l),
(182,82,l),
(171,101,l),
(161,147,l),
(160,181,l),
(162,249,l),
(164,354,l),
(166,396,l),
(168,433,l),
(166,444,l),
(148,448,l),
(127,447,l),
(101,446,l),
(50,447,l),
(13,449,l),
(4,439,l),
(12,424,l),
(31,423,l),
(50,419,l),
(62,410,l),
(70,385,l),
(70,361,l),
(69,259,l),
(66,149,l),
(70,93,l),
(84,54,l),
(105,27,l),
(134,12,l),
(199,-5,l),
(243,-1,l),
(304,29,l),
(328,43,l),
(353,58,l),
(363,40,l),
(361,17,l),
(364,0,l),
(377,-9,l),
(402,-3,l),
(444,10,l),
(482,21,l),
(501,24,l),
(515,38,l),
(502,50,l),
(467,58,l),
(457,77,l),
(456,94,l),
(456,385,l),
(457,427,l),
(454,441,l),
(446,449,l),
(417,448,l),
(395,448,l),
(351,449,l),
(311,452,l),
(291,449,l),
(284,440,l),
(291,427,l),
(328,423,l),
(352,410,l),
(363,366,l),
(362,326,l),
(363,202,l),
(363,202,l)
);
}
);
width = 535;
}
);
},
{
glyphname = u.005;
lastChange = "2025-01-13 19:00:14 +0000";
layers = (
{
hints = (
{
horizontal = 1;
place = (406,51);
type = Stem;
},
{
horizontal = 1;
place = (-12,63);
type = Stem;
},
{
place = (368,75);
type = Stem;
},
{
place = (75,78);
type = Stem;
}
);
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(367,112,l),
(343,89,l),
(322,73,l),
(280,54,l),
(252,51,l),
(203,62,l),
(180,80,l),
(162,116,l),
(156,153,l),
(154,233,l),
(155,367,l),
(154,411,l),
(149,451,l),
(140,449,l),
(130,448,l),
(93,443,l),
(41,437,l),
(15,435,l),
(0,434,l),
(0,414,l),
(4,405,l),
(19,406,l),
(62,398,l),
(74,373,l),
(75,354,l),
(76,337,l),
(75,296,l),
(75,265,l),
(74,217,l),
(75,168,l),
(86,71,l),
(124,18,l),
(138,9,l),
(182,-11,l),
(213,-11,l),
(273,4,l),
(336,49,l),
(354,67,l),
(369,75,l),
(367,46,l),
(368,10,l),
(368,-10,l),
(373,-13,l),
(383,-11,l),
(398,-6,l),
(469,24,l),
(488,32,l),
(515,46,l),
(514,53,l),
(510,67,l),
(498,63,l),
(466,56,l),
(452,63,l),
(443,79,l),
(441,99,l),
(441,223,l),
(443,294,l),
(443,339,l),
(442,374,l),
(443,397,l),
(442,426,l),
(442,434,l),
(435,447,l),
(425,446,l),
(391,440,l),
(356,436,l),
(308,429,l),
(284,421,l),
(285,412,l),
(287,401,l),
(296,399,l),
(321,400,l),
(352,386,l),
(363,362,l),
(365,347,l),
(367,325,l),
(367,284,l),
(365,254,l),
(365,254,l)
);
}
);
width = 530;
}
);
},
{
glyphname = u.006;
lastChange = "2025-01-13 19:00:14 +0000";
layers = (
{
hints = (
{
horizontal = 1;
place = (-8,58);
type = Stem;
},
{
horizontal = 1;
place = (437,21);
target = up;
type = BottomGhost;
},
{
place = (357,71);
type = Stem;
},
{
place = (70,72);
type = Stem;
}
);
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(428,421,l),
(426,442,l),
(408,450,l),
(387,452,l),
(315,446,l),
(286,448,l),
(273,445,l),
(269,435,l),
(280,420,l),
(321,410,l),
(332,408,l),
(350,399,l),
(360,350,l),
(355,233,l),
(358,154,l),
(350,100,l),
(321,73,l),
(274,58,l),
(230,51,l),
(197,56,l),
(163,74,l),
(147,103,l),
(140,144,l),
(141,261,l),
(140,328,l),
(141,363,l),
(143,393,l),
(142,431,l),
(134,442,l),
(85,448,l),
(55,450,l),
(23,452,l),
(14,451,l),
(6,440,l),
(20,423,l),
(42,415,l),
(65,401,l),
(70,382,l),
(72,350,l),
(71,302,l),
(70,225,l),
(68,138,l),
(72,94,l),
(88,51,l),
(102,27,l),
(123,11,l),
(191,-6,l),
(245,1,l),
(299,24,l),
(331,45,l),
(350,64,l),
(356,53,l),
(354,42,l),
(353,30,l),
(362,0,l),
(369,-4,l),
(391,6,l),
(438,20,l),
(483,28,l),
(489,39,l),
(480,51,l),
(462,54,l),
(426,66,l),
(424,77,l),
(425,98,l),
(427,234,l),
(428,303,l),
(428,303,l)
);
}
);
width = 526;
}
);
},
{
glyphname = u.007;
lastChange = "2025-01-13 19:00:14 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(484,427,o),
(483.667,434.333,o),
(483,437,c),
(480.333,441.667,o),
(474.667,444,o),
(466,444,cs),
(435,443,ls),
(424.333,442.333,o),
(401.667,443.333,o),
(367,446,cs),
(347,447.333,o),
(334.333,448,o),
(329,448,cs),
(318.333,448,o),
(313,444,o),
(313,436,cs),
(313,415.581,o),
(367.492,422.656,o),
(380,403,cs),
(384.667,395.667,o),
(387,376.333,o),
(387,345,cs),
(387,120,ls),
(387,98.667,o),
(381,83,o),
(369,73,cs),
(347.667,56.333,o),
(319.333,48,o),
(284,48,cs),
(218,48,o),
(185,78,o),
(185,138,cs),
(185,410,l),
(185,429,ls),
(185,442.333,o),
(181.667,446,o),
(171,446,cs),
(117,444,ls),
(111.667,444,o),
(102,444.333,o),
(88,445,cs),
(60,446.333,o),
(41,447.333,o),
(31,448,cs),
(19.667,448,o),
(14,444,o),
(14,436,cs),
(14,415.561,o),
(68.21,422.684,o),
(81,403.5,cs),
(85.667,396.5,o),
(88,377,o),
(88,345,cs),
(88,142,ls),
(88,34,o),
(151.333,-9,o),
(218,-9,cs),
(254,-9,o),
(300,10,o),
(356,48,cs),
(363.333,53.333,o),
(368.667,56,o),
(372,56,cs),
(376.667,56,o),
(379,52,o),
(379,44,cs),
(379,5,ls),
(379,-7.667,o),
(384,-14,o),
(394,-14,cs),
(398.667,-14,o),
(405.333,-12.667,o),
(414,-10,cs),
(529,22,ls),
(539,24,o),
(544,28.333,o),
(544,35,cs),
(544,41,o),
(538.333,44.333,o),
(527,45,cs),
(487,47.667,o),
(484,50.667,o),
(484,92,cs),
(484,415,l),
(484,415,l)
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */
10
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
62
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
63
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
1
MDRP[11100]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
46
MDRP[11100]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
11
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
11
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
62
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
23
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
23
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
32
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
23
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
40
MDRP[11100]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
38
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
38
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
1
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
60
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
60
MDAP[1]	/* MoveDirectAbsPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
30
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
32
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
34
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
53
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
55
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
57
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
37
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
9
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
9 38
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
37
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
11
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
11 38
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
37
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
20
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
20 38
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
9
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
4
MDRP[11100]	/* MoveDirectRelPt */
NPUSHW[ ]	/* 21 values pushed */
103 4 119 4 135 4 151 4 167 4 183 4 199 4 215 4 231 4 247 4 10
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 7 values pushed */
7 4 23 4 39 4 3
DELTAP2[ ]	/* DeltaExceptionP2 */
NPUSHW[ ]	/* 5 values pushed */
54 4 70 4 2
DELTAP2[ ]	/* DeltaExceptionP2 */
PUSHW[ ]	/* 1 value pushed */
42
MDRP[10000]	/* MoveDirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 571;
}
);
note = u;
},
{
glyphname = u.008;
lastChange = "2025-01-13 19:00:14 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(102,79.333,o),
(114.833,35,o),
(163.5,3,cs),
(187.833,-13,o),
(213.333,-21,o),
(240,-21,cs),
(276.667,-21,o),
(314.333,-4.333,o),
(353,29,cs),
(361,36.333,o),
(366,40.667,o),
(368,42,cs),
(384,56,ls),
(386.667,58.667,o),
(389.333,61.333,o),
(392,64,c),
(393.333,64,o),
(394.333,65.333,o),
(395,68,c),
(398.333,68,o),
(400,64.333,o),
(400,57,cs),
(400,55.667,o),
(399.667,53.667,o),
(399,51,c),
(399,-3,ls),
(399,-14.333,o),
(402,-20,o),
(408,-20,cs),
(410.667,-20,o),
(414.333,-18.667,o),
(419,-16,c),
(428.333,-12.667,o),
(435,-10.5,o),
(439,-9.5,cs),
(443,-8.5,o),
(454,-4,o),
(472,4,cs),
(497.333,15.333,o),
(516,23,o),
(528,27,cs),
(544,33,o),
(552,37,o),
(552,39,cs),
(552.667,45.667,o),
(553.333,50.667,o),
(554,54,cs),
(556,62,o),
(553,66,o),
(545,66,cs),
(543,66,o),
(541.333,65.333,o),
(540,64,c),
(530.667,62,o),
(521.667,60,o),
(513,58,c),
(508.333,56,o),
(504.667,55,o),
(502,55,cs),
(492.667,55,o),
(486,61,o),
(482,73,c),
(479.333,91,o),
(478,106,o),
(478,118,cs),
(476,206,ls),
(476.667,226,o),
(477.667,240.667,o),
(479,250,c),
(477,321,l),
(478,353,ls),
(478,357,o),
(477.667,363.667,o),
(477,373,cs),
(476.333,382.333,o),
(476,388.667,o),
(476,392,cs),
(476,394.667,o),
(476.5,399,o),
(477.5,405,cs),
(478.5,411,o),
(479,415.333,o),
(479,418,cs),
(479,418.667,o),
(478.333,421.333,o),
(477,426,cs),
(476,429,l),
(478,441,l),
(476.667,449,o),
(473,453,o),
(467,453,c),
(464.333,452.333,o),
(461.667,451.667,o),
(459,451,cs),
(391.667,441.667,o),
(348.667,436.333,o),
(330,435,cs),
(318,434.333,o),
(312,428,o),
(312,416,cs),
(312,405.333,o),
(317.333,400.333,o),
(328,401,cs),
(358,403,ls),
(368.667,403,o),
(386,392,o),
(390,380,cs),
(396.667,364.667,o),
(399.667,345,o),
(399,321,cs),
(396,206,ls),
(396,199.333,o),
(396.667,188.5,o),
(398,173.5,cs),
(399.333,158.5,o),
(400,147.667,o),
(400,141,cs),
(400,105,o),
(399.333,103,o),
(366,79,cs),
(335.333,56.333,o),
(309,45,o),
(287,45,cs),
(267,45,o),
(247.333,50.333,o),
(228,61,c),
(220.667,67,o),
(212.5,76.167,o),
(203.5,88.5,cs),
(194.5,100.833,o),
(188.667,135,o),
(186,191,cs),
(185.333,199.667,o),
(185,206.667,o),
(185,212,cs),
(183.667,226.667,o),
(183,239,o),
(183,249,cs),
(183,252.333,o),
(183.5,257.333,o),
(184.5,264,cs),
(185.5,270.667,o),
(186,275.667,o),
(186,279,cs),
(186,281,o),
(185.5,284.5,o),
(184.5,289.5,cs),
(183.5,294.5,o),
(183,299,o),
(183,303,cs),
(185,355,l),
(183,375,l),
(183,395,ls),
(183,432.479,o),
(183.861,452,o),
(177.5,452,cs),
(175.167,452,o),
(171,451.333,o),
(165,450,c),
(146,449,ls),
(140,448.333,o),
(134.333,447.667,o),
(129,447,cs),
(81.667,440.333,o),
(53.333,437,o),
(44,437,cs),
(30.667,437,o),
(24,430.667,o),
(24,418,cs),
(24,412.667,o),
(25.667,409,o),
(29,407,cs),
(32.333,405,o),
(41.667,404,o),
(57,404,cs),
(93,402.667,o),
(105.333,382.667,o),
(104,324,cs),
(102,197,l),
(102,158,l),
(102,158,l)
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */
10
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
120
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
121
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
120
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
1
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
1
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
32
MDRP[11100]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
19
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
19
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
32
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
21
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
21
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
32
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
25
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
32
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
28
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
28
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
32
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
30
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
30
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
121
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
73
MDRP[11100]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
45
MDRP[11100]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
42
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
42
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
45
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
48
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
48
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
73
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
62
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
62
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
73
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
64
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
73
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
66
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
66
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
73
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
69
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
69
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
73
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
76
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
76
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
73
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
79
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
79
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
73
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
95
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
95
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
45
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
102
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
102
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
45
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
105
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
105
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
45
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
107
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
107
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
45
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
109
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
109
MDAP[1]	/* MoveDirectAbsPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
37
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
12
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
12 42
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
37
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
14
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
14 42
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
37
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
58
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
58 42
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
37
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
60
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
60 42
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
37
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
98
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
98 38
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
37
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
100
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
100 38
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
37
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
116
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
116 38
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 566;
}
);
note = u;
},
{
glyphname = u.009;
lastChange = "2025-01-13 19:00:14 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(361.333,45.333,o),
(311.333,27,o),
(260,27,cs),
(199.333,27,o),
(169.667,73,o),
(171,165,cs),
(171.667,214.333,o),
(172,250.667,o),
(172,274,cs),
(172,298,ls),
(172,314.667,o),
(172.333,335,o),
(173,359,cs),
(178,450,l),
(29,443,l),
(32.333,435.667,o),
(34,431.667,o),
(34,431,cs),
(34,429,o),
(32.333,425,o),
(29,419,c),
(53,417,ls),
(94.333,413,o),
(97,412,o),
(97,384,cs),
(97,161,ls),
(97,40.333,o),
(145,-20,o),
(241,-20,cs),
(272.333,-20,o),
(302.333,-13,o),
(331,1,cs),
(343,7,o),
(369.667,24,o),
(411,52,c),
(417.667,24,o),
(421.667,-0.667,o),
(423,-22,c),
(426.333,-18.667,o),
(430,-17,o),
(434,-17,cs),
(436.667,-17,o),
(440.333,-18.667,o),
(445,-22,c),
(458.333,-4,o),
(485,6.667,o),
(525,10,cs),
(561,14,l),
(559,20,o),
(558,24,o),
(558,26,cs),
(558,28,o),
(559,31.667,o),
(561,37,c),
(535,37,ls),
(492.333,37,o),
(485,38.667,o),
(485,108,cs),
(487,294,l),
(490,381,l),
(493,450,l),
(321,443,l),
(323.667,435.667,o),
(325,431.667,o),
(325,431,cs),
(325,429,o),
(323.667,425,o),
(321,419,c),
(347,417,ls),
(375.667,415,o),
(393.167,412.667,o),
(399.5,410,cs),
(405.833,407.333,o),
(409.333,400.333,o),
(410,389,c),
(412,381,o),
(413,358,o),
(413,320,cs),
(413,233.333,o),
(412.5,180.667,o),
(411.5,162,cs),
(410.5,143.333,o),
(410,125,o),
(410,107,cs),
(410,82,l),
(410,82,l)
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */
10
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
61
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
62
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
17
MDRP[11100]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
4
MDRP[11100]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
0
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
0
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
4
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
6
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
6
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
61
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
41
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
41
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
17
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
15
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
15
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 3 values pushed */
10 41 15
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHW[ ]	/* 3 values pushed */
33 17 4
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHW[ ]	/* 1 value pushed */
4
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
35
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
35
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
41
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
57
MDRP[11100]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
51
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
51
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
57
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
54
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
54
MDAP[1]	/* MoveDirectAbsPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
33
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
15
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
15 38
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
33
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
50
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
50 38
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
33
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
29
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
29 34
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
33
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
31
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
31 34
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
33
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
33
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
33 34
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
33
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
39
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
39 34
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 3 values pushed */
14 10 13
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
14
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 3 values pushed */
22 29 15
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHW[ ]	/* 1 value pushed */
39
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
59
MDRP[11100]	/* MoveDirectRelPt */
NPUSHW[ ]	/* 21 values pushed */
103 59 119 59 135 59 151 59 167 59 183 59 199 59 215 59 231 59 247 59 10
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 7 values pushed */
7 59 23 59 39 59 3
DELTAP2[ ]	/* DeltaExceptionP2 */
NPUSHW[ ]	/* 5 values pushed */
54 59 70 59 2
DELTAP2[ ]	/* DeltaExceptionP2 */
PUSHW[ ]	/* 3 values pushed */
26 39 59
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHW[ ]	/* 3 values pushed */
35 29 15
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHW[ ]	/* 1 value pushed */
10
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
45
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
45
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 3 values pushed */
46 29 15
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHW[ ]	/* 1 value pushed */
14
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
51
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
51
MDAP[1]	/* MoveDirectAbsPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 587;
}
);
note = u;
},
{
glyphname = u.010;
lastChange = "2025-01-13 19:00:14 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(84.681,415.531,o),
(88,399.643,o),
(88,346,cs),
(88,173,ls),
(88,122.091,o),
(89.179,60.126,o),
(135,17,cs),
(164.818,-10.333,o),
(211.459,-11,o),
(218,-11,cs),
(256.667,-11,o),
(292.333,4.667,o),
(323,26,cs),
(347,42,o),
(362.667,56,o),
(376,68,c),
(372.726,28.713,o),
(370.579,28.367,o),
(368,0,c),
(382,-12,l),
(455.522,8.282,o),
(480.669,9.333,o),
(518,12,c),
(518,46,l),
(452.801,46,o),
(453,65.914,o),
(453,123,cs),
(453,173.991,o),
(454.231,312.901,o),
(460,460,c),
(393.75,447.731,o),
(361.359,447,o),
(301,447,c),
(301,410,l),
(380.834,410,o),
(379,399.776,o),
(379,319,cs),
(379,253.667,o),
(377.667,170,o),
(375,106,c),
(345.667,82,o),
(311,56,o),
(259,56,cs),
(237.633,56,o),
(188.728,60.595,o),
(175,121,cs),
(167.733,147.646,o),
(168,242.967,o),
(168,265,cs),
(168,330.333,o),
(168.667,395.667,o),
(170,461,c),
(117.616,451.89,o),
(95.322,450,o),
(29,450,c),
(29,413,l),
(29,413,l)
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */
80
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
81
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
80
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
74
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
74
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 2 values pushed */
8 2
MIRP[11100]	/* MoveIndirectRelPt */
PUSHW[ ]	/* 1 value pushed */
5
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
5
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
8
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
13
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
13
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
81
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
40
MDRP[11100]	/* MoveDirectRelPt */
PUSHW[ ]	/* 2 values pushed */
24 2
MIRP[11100]	/* MoveIndirectRelPt */
NPUSHW[ ]	/* 5 values pushed */
138 24 154 24 2
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 17 values pushed */
9 24 25 24 41 24 57 24 73 24 89 24 105 24 121 24 8
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHW[ ]	/* 1 value pushed */
21
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
21
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
40
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
35
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
35
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
24
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
51
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
51
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
24
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
57
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
57
MDAP[1]	/* MoveDirectAbsPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
0
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
5
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
5 14
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
35
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
35 14
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
0
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
0 14
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
30
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
30 14
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
52
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
52 4
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
51
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
51 4
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
63
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
63 4
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 4 values pushed */
45 1 46 4
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
63
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
18 1
MIRP[11100]	/* MoveIndirectRelPt */
NPUSHW[ ]	/* 33 values pushed */
7 18 23 18 39 18 55 18 71 18 87 18 103 18 119 18 135 18 151 18 167 18 183 18 199 18 215 18 231 18 247 18 16
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 19 values pushed */
7 18 23 18 39 18 55 18 71 18 87 18 103 18 119 18 135 18 9
DELTAP2[ ]	/* DeltaExceptionP2 */
NPUSHW[ ]	/* 5 values pushed */
150 18 166 18 2
DELTAP2[ ]	/* DeltaExceptionP2 */
PUSHW[ ]	/* 1 value pushed */
30
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
29 1
MIRP[11100]	/* MoveIndirectRelPt */
PUSHW[ ]	/* 3 values pushed */
57 51 5
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHW[ ]	/* 1 value pushed */
79
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
79
MDAP[1]	/* MoveDirectAbsPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 551;
}
);
note = u;
},
{
glyphname = u.011;
lastChange = "2025-01-13 19:00:14 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(363,77,o),
(343.667,64.333,o),
(333,59,cs),
(312.333,48.333,o),
(290.333,43,o),
(267,43,cs),
(224.333,43,o),
(197.333,56.333,o),
(186,83,cs),
(179.333,97,o),
(176,127.667,o),
(176,175,cs),
(176,423,ls),
(176,440.333,o),
(175.167,451.167,o),
(173.5,455.5,cs),
(171.833,459.833,o),
(168.333,462,o),
(163,462,cs),
(161.667,462,o),
(160.5,461.5,o),
(159.5,460.5,cs),
(158.5,459.5,o),
(155,458.333,o),
(149,457,c),
(139,453,ls),
(124.333,447.667,o),
(99.333,444,o),
(64,442,cs),
(45,441,ls),
(31,440.333,o),
(24,434.667,o),
(24,424,cs),
(24,415.333,o),
(32.667,410,o),
(50,408,cs),
(62,407,ls),
(83.333,405,o),
(94.333,396.667,o),
(95,382,cs),
(96,178,ls),
(96,116.667,o),
(99,78,o),
(105,62,cs),
(121.667,13.333,o),
(161.333,-11,o),
(224,-11,cs),
(284,-11,o),
(339.667,11.333,o),
(391,56,c),
(390,11,l),
(390,7,ls),
(390,-6.333,o),
(394.333,-13,o),
(403,-13,cs),
(409,-13,o),
(413.333,-12,o),
(416,-10,c),
(426,-5,ls),
(448.667,6.333,o),
(474.667,14.667,o),
(504,20,cs),
(522,23,ls),
(536.667,25.667,o),
(544,31.333,o),
(544,40,cs),
(544,50.667,o),
(536,56,o),
(520,56,cs),
(508,56,ls),
(472,56,o),
(472,57.333,o),
(472,116,cs),
(472,426,ls),
(472,442,o),
(471.5,451.333,o),
(470.5,454,cs),
(469.5,456.667,o),
(466,458.333,o),
(460,459,cs),
(456.667,459,o),
(454,458.667,o),
(452,458,cs),
(444,455,ls),
(422.667,447,o),
(388,441.333,o),
(340,438,cs),
(327,436,ls),
(316.333,435.333,o),
(311,430.333,o),
(311,421,cs),
(311,409.667,o),
(321,404,o),
(341,404,cs),
(354,404,ls),
(372.667,404,o),
(383.5,401.167,o),
(386.5,395.5,cs),
(389.5,389.833,o),
(391,369.333,o),
(391,334,cs),
(391,97,l),
(391,97,l)
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */
10
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
70
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
71
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
19
MDRP[11100]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
0
MDRP[11100]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
35
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
35
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
0
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
37
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
70
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
44
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
44
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
61
MDRP[11100]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
35
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
12
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
12 40
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
35
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
15
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
15 40
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
35
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
55
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
55 40
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
35
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
58
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
58 40
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
35
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
31
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
31 36
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
35
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
33
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
33 36
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
35
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
39
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
39 36
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 3 values pushed */
52 47 13
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
52
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
47
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
4
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
4
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
52
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
9
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
9
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 3 values pushed */
37 33 58
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHW[ ]	/* 1 value pushed */
39
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
66
MDRP[11100]	/* MoveDirectRelPt */
NPUSHW[ ]	/* 21 values pushed */
103 66 119 66 135 66 151 66 167 66 183 66 199 66 215 66 231 66 247 66 10
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 7 values pushed */
7 66 23 66 39 66 3
DELTAP2[ ]	/* DeltaExceptionP2 */
NPUSHW[ ]	/* 5 values pushed */
54 66 70 66 2
DELTAP2[ ]	/* DeltaExceptionP2 */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 569;
}
);
note = u;
},
{
glyphname = v.001;
lastChange = "2025-01-13 19:00:14 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(205.333,62.667,o),
(221.667,18,o),
(231,-14,c),
(234.333,-16.667,o),
(239.333,-18,o),
(246,-18,cs),
(251.333,-18,o),
(255,-16.667,o),
(257,-14,c),
(273,26,o),
(283,51,o),
(295,79,cs),
(287.362,60.451,o),
(361.738,246.477,o),
(399,321,cs),
(430.995,384.989,o),
(444.224,413.963,o),
(482,419,cs),
(499,422,l),
(505.667,428.667,o),
(504,446,o),
(496,450,c),
(465.333,447.333,o),
(446.333,447,o),
(417,447,cs),
(395,447,o),
(366.667,448,o),
(332,450,c),
(324,446,o),
(322,428.667,o),
(330,422,c),
(356,418,ls),
(369.333,416,o),
(376,410.333,o),
(376,401,cs),
(376,397.667,o),
(374.667,390,o),
(372,378,cs),
(369.333,366,o),
(364,350.333,o),
(356,331,cs),
(343.499,303.498,o),
(321.573,240.431,o),
(291,164,cs),
(281.667,139.333,o),
(274.667,125,o),
(270,121,c),
(267.333,123.667,o),
(261.333,136,o),
(252,158,cs),
(225.333,216.667,o),
(192.333,295.333,o),
(167,374,cs),
(155,408.667,o),
(156,413.667,o),
(192,419,cs),
(205,422,l),
(213,427.333,o),
(212,446,o),
(204,450,c),
(165.333,447.333,o),
(142.667,447,o),
(112,447,cs),
(73.333,447,o),
(34,447.333,o),
(6,450,c),
(-3.333,447.333,o),
(-4.667,430,o),
(2,422,c),
(25,418,ls),
(66.333,412.667,o),
(75.667,376.667,o),
(93,334,cs),
(188,104,l),
(188,104,l)
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
0
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
7
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
7 10
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
10
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
10 10
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
13
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
13 10
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
41
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
41 10
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
43
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
43 10
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
46
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
46 10
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
63
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
63 4
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
65
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
65 4
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
67
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
67 4
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 490;
}
);
note = v;
},
{
glyphname = v.002;
lastChange = "2025-01-13 19:00:14 +0000";
layers = (
{
hints = (
{
horizontal = 1;
place = (414,41);
type = Stem;
},
{
horizontal = 1;
place = (-13,21);
target = up;
type = BottomGhost;
}
);
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(217,450,l),
(112,445,l),
(0,449,l),
(0,416,l),
(48,400,l),
(81,348,l),
(163,156,l),
(199,67,l),
(229,-13,l),
(249,-12,l),
(286,84,l),
(340,211,l),
(386,317,l),
(426,387,l),
(454,404,l),
(483,412,l),
(484,448,l),
(392,445,l),
(301,447,l),
(301,414,l),
(335,408,l),
(349,398,l),
(358,380,l),
(347,339,l),
(260,122,l),
(205,255,l),
(181,315,l),
(159,380,l),
(172,404,l),
(216,412,l),
(216,412,l)
);
}
);
width = 484;
}
);
},
{
glyphname = v.003;
lastChange = "2025-01-13 19:00:14 +0000";
layers = (
{
hints = (
{
horizontal = 1;
place = (414,41);
type = Stem;
},
{
horizontal = 1;
place = (-13,21);
target = up;
type = BottomGhost;
}
);
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(217,450,l),
(112,445,l),
(0,449,l),
(0,416,l),
(48,400,l),
(81,348,l),
(163,156,l),
(199,67,l),
(229,-13,l),
(249,-12,l),
(286,84,l),
(340,211,l),
(386,317,l),
(426,387,l),
(454,404,l),
(483,412,l),
(484,448,l),
(392,445,l),
(301,447,l),
(301,414,l),
(335,408,l),
(349,398,l),
(358,380,l),
(347,339,l),
(260,122,l),
(205,255,l),
(181,315,l),
(159,380,l),
(172,404,l),
(216,412,l),
(216,412,l)
);
}
);
width = 484;
}
);
},
{
glyphname = v.004;
lastChange = "2025-01-13 19:00:14 +0000";
layers = (
{
hints = (
{
horizontal = 1;
place = (420,36);
type = Stem;
},
{
horizontal = 1;
place = (-16,21);
target = up;
type = BottomGhost;
}
);
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(337,237,l),
(306,167,l),
(284,122,l),
(192,356,l),
(181,394,l),
(185,409,l),
(200,420,l),
(229,422,l),
(240,423,l),
(247,436,l),
(240,447,l),
(223,450,l),
(173,447,l),
(46,447,l),
(25,449,l),
(4,443,l),
(1,436,l),
(9,424,l),
(23,422,l),
(50,413,l),
(82,361,l),
(221,16,l),
(229,-5,l),
(245,-17,l),
(259,-6,l),
(266,12,l),
(413,337,l),
(439,385,l),
(454,404,l),
(475,419,l),
(507,426,l),
(512,435,l),
(509,444,l),
(495,449,l),
(470,447,l),
(413,445,l),
(370,447,l),
(334,448,l),
(320,447,l),
(314,437,l),
(315,426,l),
(325,423,l),
(355,421,l),
(376,414,l),
(384,405,l),
(391,388,l),
(375,328,l),
(375,328,l)
);
}
);
width = 517;
}
);
},
{
glyphname = v.005;
lastChange = "2025-01-13 19:00:14 +0000";
layers = (
{
hints = (
{
horizontal = 1;
place = (424,34);
type = Stem;
},
{
horizontal = 1;
place = (-13,21);
target = up;
type = BottomGhost;
}
);
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(153,202,l),
(166,168,l),
(182,132,l),
(199,96,l),
(220,48,l),
(229,21,l),
(234,4,l),
(245,-13,l),
(257,2,l),
(283,66,l),
(293,93,l),
(308,127,l),
(326,172,l),
(359,254,l),
(377,297,l),
(391,327,l),
(399,352,l),
(414,380,l),
(442,415,l),
(479,421,l),
(486,424,l),
(488,433,l),
(487,447,l),
(464,448,l),
(378,448,l),
(345,449,l),
(302,449,l),
(302,428,l),
(320,423,l),
(350,420,l),
(364,404,l),
(370,390,l),
(354,338,l),
(333,278,l),
(307,216,l),
(291,174,l),
(275,137,l),
(269,124,l),
(263,134,l),
(258,150,l),
(234,201,l),
(221,232,l),
(212,249,l),
(205,268,l),
(195,289,l),
(189,306,l),
(182,324,l),
(171,349,l),
(152,402,l),
(167,417,l),
(183,419,l),
(207,420,l),
(214,420,l),
(219,435,l),
(219,443,l),
(200,449,l),
(170,450,l),
(143,447,l),
(103,447,l),
(78,446,l),
(50,449,l),
(36,448,l),
(14,450,l),
(-1,443,l),
(-1,429,l),
(3,419,l),
(16,419,l),
(46,415,l),
(64,397,l),
(87,350,l),
(97,325,l),
(114,284,l),
(127,254,l),
(138,228,l),
(138,228,l)
);
}
);
width = 488;
}
);
},
{
glyphname = v.006;
lastChange = "2025-01-13 19:00:14 +0000";
layers = (
{
hints = (
{
horizontal = 1;
place = (418,40);
type = Stem;
},
{
horizontal = 1;
place = (-18,21);
target = up;
type = BottomGhost;
}
);
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(110,446,l),
(56,446,l),
(17,449,l),
(3,444,l),
(-3,433,l),
(32,412,l),
(48,396,l),
(70,363,l),
(107,266,l),
(137,194,l),
(155,150,l),
(174,104,l),
(189,66,l),
(223,-12,l),
(233,-16,l),
(247,-10,l),
(261,17,l),
(289,90,l),
(305,132,l),
(313,152,l),
(327,189,l),
(352,264,l),
(367,305,l),
(378,334,l),
(393,366,l),
(408,395,l),
(434,418,l),
(458,426,l),
(462,434,l),
(452,447,l),
(434,448,l),
(379,448,l),
(315,450,l),
(299,449,l),
(291,438,l),
(304,425,l),
(346,409,l),
(353,396,l),
(332,325,l),
(301,244,l),
(284,193,l),
(270,161,l),
(253,129,l),
(228,175,l),
(207,224,l),
(184,285,l),
(147,392,l),
(164,415,l),
(213,429,l),
(218,438,l),
(201,450,l),
(181,450,l),
(147,448,l),
(147,448,l)
);
}
);
width = 483;
}
);
},
{
glyphname = v.007;
lastChange = "2025-01-13 19:00:14 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(171.667,374.333,o),
(169,385.667,o),
(169,395,cs),
(169,411,o),
(180.333,419.667,o),
(203,421,cs),
(224.333,422.333,o),
(235,427.667,o),
(235,437,cs),
(235,445,o),
(228.667,449,o),
(216,449,cs),
(217.333,449,o),
(208,448.333,o),
(188,447,cs),
(168,445.667,o),
(146,445,o),
(122,445,cs),
(82.667,445,o),
(53.333,445.667,o),
(34,447,cs),
(24.667,447.667,o),
(16.667,448,o),
(10,448,cs),
(-7.333,448,o),
(-16,443.667,o),
(-16,435,cs),
(-16,427.667,o),
(-11,423.667,o),
(-1,423,cs),
(33.667,423,o),
(46,410,o),
(70,354,cs),
(217,-1,ls),
(221.667,-12.333,o),
(227,-18,o),
(233,-18,cs),
(239.667,-18,o),
(245.667,-11.333,o),
(251,2,cs),
(409,352,ls),
(431.667,404,o),
(446.5,418,o),
(476.5,422,cs),
(501.546,425.339,o),
(509,424.512,o),
(509,438,cs),
(509,446,o),
(503.667,450,o),
(493,450,cs),
(491.667,450,o),
(484.333,449.333,o),
(471,448,cs),
(450.333,446,o),
(429.667,445,o),
(409,445,cs),
(389.667,445,o),
(367,446,o),
(341,448,cs),
(332.333,448.667,o),
(326,449,o),
(322,449,cs),
(305.333,449,o),
(297,444.667,o),
(297,436,cs),
(297,428,o),
(309,423.333,o),
(333,422,cs),
(363,420.667,o),
(378,408.667,o),
(378,386,cs),
(378,370.667,o),
(370.333,345.667,o),
(355,311,cs),
(273,126,l),
(177,361,l),
(177,361,l)
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */
10
CALL[ ]	/* CallFunction */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
9
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
11
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
13
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
15
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
17
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
37
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
39
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
41
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
44
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
27
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 3 values pushed */
0 27 17
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHW[ ]	/* 1 value pushed */
39
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
48
MDRP[11100]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
5
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
5
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
48
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
33
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
33
MDAP[1]	/* MoveDirectAbsPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 494;
}
);
note = v;
},
{
glyphname = v.008;
lastChange = "2025-01-13 19:00:14 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(408.333,447,o),
(403.5,446.667,o),
(398.5,446,cs),
(393.5,445.333,o),
(390.667,445,o),
(390,445,cs),
(383.333,445,o),
(376.667,445.333,o),
(370,446,cs),
(350,447.333,o),
(332.667,448.333,o),
(318,449,cs),
(314,449.667,o),
(310.333,450,o),
(307,450,cs),
(293.667,449.333,o),
(287.667,441.667,o),
(289,427,c),
(291,421,o),
(296.333,418,o),
(305,418,cs),
(338.333,417.333,o),
(355.333,409.333,o),
(356,394,c),
(357.333,389.333,o),
(358,385.333,o),
(358,382,c),
(353.333,360.667,o),
(349,346.667,o),
(345,340,c),
(340,321,ls),
(334.667,306.333,o),
(331,296.667,o),
(329,292,cs),
(303,229,ls),
(299,218.333,o),
(295.333,208.667,o),
(292,200,cs),
(272.667,147.333,o),
(260.667,121,o),
(256,121,cs),
(252.667,121,o),
(247,131.667,o),
(239,153,cs),
(224.333,186.333,o),
(213,212,o),
(205,230,cs),
(178,298,l),
(170,315,ls),
(156,351.667,o),
(147,376.333,o),
(143,389,cs),
(141,393,o),
(140,396.333,o),
(140,399,cs),
(140,403.667,o),
(143.667,408.167,o),
(151,412.5,cs),
(158.333,416.833,o),
(168.667,418.333,o),
(182,417,cs),
(196,416,ls),
(200,415.333,o),
(202.5,415.833,o),
(203.5,417.5,cs),
(204.5,419.167,o),
(206.333,426,o),
(209,438,cs),
(210.333,446,o),
(202.333,450,o),
(185,450,cs),
(183,450,o),
(164,449,o),
(128,447,cs),
(108.667,445.667,o),
(96.667,445,o),
(92,445,cs),
(55.333,446.333,o),
(31.333,447.667,o),
(20,449,cs),
(11,450,l),
(-19.667,450,o),
(-23,447.333,o),
(-23,430,cs),
(-23,424.667,o),
(-16.667,421,o),
(-4,419,cs),
(24,416.333,o),
(43.333,405.667,o),
(54,387,c),
(78,330,ls),
(88.667,301.333,o),
(95.667,283.333,o),
(99,276,cs),
(106.333,258,o),
(111.667,245.667,o),
(115,239,cs),
(126,211,ls),
(128.667,205,o),
(131,199.333,o),
(133,194,cs),
(152.333,152.667,o),
(163.333,128.333,o),
(166,121,cs),
(187,69,l),
(202,35,ls),
(208,22.333,o),
(212.667,8.333,o),
(216,-7,cs),
(219.333,-17.667,o),
(223.667,-23,o),
(229,-23,cs),
(235.667,-23,o),
(241,-17.667,o),
(245,-7,cs),
(254.333,21,o),
(272.667,67,o),
(300,131,cs),
(313.333,162.333,o),
(321.667,183,o),
(325,193,cs),
(340.333,229.667,o),
(348,248.333,o),
(348,249,c),
(354,264.333,o),
(361.333,281.333,o),
(370,300,cs),
(376,312.667,o),
(379,319.667,o),
(379,321,c),
(408.333,401,o),
(425,417.333,o),
(469,416,cs),
(475.667,416,o),
(480.333,422.333,o),
(483,435,c),
(485,440.333,o),
(482.667,444.667,o),
(476,448,c),
(453,449,l),
(413,447,l),
(413,447,l)
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */
10
CALL[ ]	/* CallFunction */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
37
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
0
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
0 42
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
37
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
2
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
2 42
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
37
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
44
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
44 42
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
37
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
47
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
47 42
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
37
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
49
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
49 42
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
37
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
51
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
51 42
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
37
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
88
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
88 42
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
37
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
90
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
90 42
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
37
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
92
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
92 42
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
37
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
94
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
94 42
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
37
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
21
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
21 38
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
92
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
1
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
1
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
92
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
84
MDRP[11100]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
6
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
6
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
84
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
39
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
39
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
84
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
56
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
56
MDAP[1]	/* MoveDirectAbsPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 489;
}
);
note = v;
},
{
glyphname = v.009;
lastChange = "2025-01-13 19:00:14 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(161.333,325.667,o),
(141,382.333,o),
(141,397,cs),
(141,409.667,o),
(156.667,417.667,o),
(188,421,cs),
(214,423,l),
(212,429,o),
(211,433.333,o),
(211,436,cs),
(211,440,o),
(212,444.667,o),
(214,450,c),
(182,449,ls),
(140,447.667,o),
(115.333,447,o),
(108,447,cs),
(103.333,447,o),
(77.667,447.667,o),
(31,449,cs),
(-5,450,l),
(-1.667,444.667,o),
(0,440,o),
(0,436,cs),
(0,432.667,o),
(-1.667,428.333,o),
(-5,423,c),
(14,421,ls),
(26,419,o),
(34,416.333,o),
(38,413,cs),
(42,409.667,o),
(51.667,390.333,o),
(67,355,cs),
(147,165,ls),
(175,100.333,o),
(196,51.667,o),
(210,19,cs),
(229,-27,l),
(237,-24.333,o),
(244.333,-23,o),
(251,-23,cs),
(255.667,-23,o),
(262.333,-24.333,o),
(271,-27,c),
(281.667,2.333,o),
(289.667,23,o),
(295,35,cs),
(324.333,103,o),
(350.667,166.667,o),
(374,226,cs),
(385.333,255.333,o),
(394,277,o),
(400,291,cs),
(422,347,ls),
(430,367,o),
(435.333,380.333,o),
(438,387,cs),
(446.667,407.667,o),
(459.667,419,o),
(477,421,cs),
(499,423,l),
(496.333,429,o),
(495,433.333,o),
(495,436,cs),
(495,440,o),
(496.333,444.667,o),
(499,450,c),
(464,449,ls),
(456,449,o),
(445.333,448.667,o),
(432,448,cs),
(421.333,447.333,o),
(414,447,o),
(410,447,cs),
(408,447,o),
(401.333,447.333,o),
(390,448,cs),
(376.667,448.667,o),
(364.333,449,o),
(353,449,cs),
(306,450,l),
(308,444.667,o),
(309,440,o),
(309,436,cs),
(309,433.333,o),
(308,429,o),
(306,423,c),
(332,421,ls),
(349.333,419,o),
(360.667,417,o),
(366,415,cs),
(377.333,411,o),
(383,402.667,o),
(383,390,cs),
(383,354,o),
(341.667,218,o),
(303,130,cs),
(271,59,l),
(202,227,l),
(202,227,l)
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */
10
CALL[ ]	/* CallFunction */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
33
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
13
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
13 38
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
33
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
16
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
16 38
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
33
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
18
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
18 38
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
33
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
20
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
20 38
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
33
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
22
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
22 38
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
33
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
55
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
55 38
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
33
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
58
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
58 38
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
33
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
60
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
60 38
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
33
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
39
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
39 34
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
33
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
41
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
41 34
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
33
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
43
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
43 34
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 3 values pushed */
0 39 13
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHW[ ]	/* 1 value pushed */
13
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
8
MDRP[11100]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
27
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
27
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
28
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
51
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
51
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
65
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
65
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
66
MDRP[10000]	/* MoveDirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 494;
}
);
note = v;
},
{
glyphname = v.010;
lastChange = "2025-01-13 19:00:14 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(51.491,412.139,o),
(56.489,401.06,o),
(94,318,cs),
(140.028,220.192,o),
(188.941,84.541,o),
(230,-14,c),
(250,-14,l),
(291.632,97.02,o),
(384.863,312.727,o),
(411,365,c),
(435,405,o),
(455,410.333,o),
(487,413,c),
(487,450,l),
(455,447.333,o),
(424.667,445,o),
(394,445,cs),
(363.333,445,o),
(333.667,447.333,o),
(303,450,c),
(303,413,l),
(327.622,413,o),
(361,410.493,o),
(361,382,cs),
(361,377.333,o),
(360.167,372.167,o),
(358.5,366.5,cs),
(356.833,360.833,o),
(352.667,349.667,o),
(346,333,cs),
(324.137,271.783,o),
(333.459,300.129,o),
(261,122,c),
(174,337,ls),
(166,355.667,o),
(159,372.333,o),
(159,383,cs),
(159,412.333,o),
(187.333,412.667,o),
(218,414,c),
(218,450,l),
(183.333,447.333,o),
(147.667,445,o),
(113,445,cs),
(74.333,445,o),
(37.333,447.333,o),
(0,450,c),
(0,415,l),
(0,415,l)
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */
55
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
56
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
55
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
0
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
0
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
6
MDRP[11100]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
56
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
35
MDRP[11100]	/* MoveDirectRelPt */
PUSHW[ ]	/* 3 values pushed */
14 0 35
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHW[ ]	/* 2 values pushed */
27 3
MIRP[11100]	/* MoveIndirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
0
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
0
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
0 14
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
3
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
3 14
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
6
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
6 14
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
28
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
28 14
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
31
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
31 14
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
34
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
34 14
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
43
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
43 4
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
6
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
7 1
MIRP[11100]	/* MoveIndirectRelPt */
PUSHW[ ]	/* 3 values pushed */
14 43 0
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHW[ ]	/* 1 value pushed */
27
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
27
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
35
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
35
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
54
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
54
MDAP[1]	/* MoveDirectAbsPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 487;
}
);
note = v;
},
{
glyphname = v.011;
lastChange = "2025-01-13 19:00:14 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(180.333,367,o),
(175,384,o),
(175,390,cs),
(175,399.333,o),
(188.667,406.667,o),
(216,412,cs),
(227,414,ls),
(244.333,417.333,o),
(253,423.667,o),
(253,433,cs),
(253,443.667,o),
(246.333,449,o),
(233,449,cs),
(229,449,o),
(225.667,448.667,o),
(223,448,c),
(207,447,ls),
(176.333,445,o),
(153.333,444,o),
(138,444,cs),
(115.333,444,o),
(84.667,445.333,o),
(46,448,cs),
(31,449,ls),
(27,449.667,o),
(24,450,o),
(22,450,cs),
(9.333,450,o),
(3,444,o),
(3,432,cs),
(3,423.333,o),
(11.333,417.667,o),
(28,415,cs),
(45,412,ls),
(60.333,408.667,o),
(71.667,401.667,o),
(79,391,cs),
(83.667,383,o),
(95.667,354.667,o),
(115,306,cs),
(242,-15,ls),
(246.667,-27,o),
(252,-33,o),
(258,-33,cs),
(263.333,-33,o),
(268.333,-28.333,o),
(273,-19,cs),
(412,312,ls),
(430.667,356.667,o),
(442.833,383.5,o),
(448.5,392.5,cs),
(454.167,401.5,o),
(464.333,407.667,o),
(479,411,cs),
(494,414,ls),
(506.667,416.667,o),
(513,422.667,o),
(513,432,cs),
(513,443.333,o),
(506,449,o),
(492,449,cs),
(489.333,449,o),
(487,448.667,o),
(485,448,c),
(469,446,ls),
(457.667,444.667,o),
(439,444,o),
(413,444,cs),
(389.667,444,o),
(370.667,445,o),
(356,447,cs),
(340,449,l),
(332,449,ls),
(318.667,449,o),
(312,443,o),
(312,431,cs),
(312,421,o),
(319.667,415,o),
(335,413,cs),
(356,410,ls),
(372.667,406.667,o),
(381,400.333,o),
(381,391,cs),
(381,379.667,o),
(373,352.667,o),
(357,310,cs),
(280,102,l),
(191,339,l),
(191,339,l)
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */
10
CALL[ ]	/* CallFunction */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
17
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
45
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
50
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
35
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
10
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
10 40
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
35
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
12
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
12 40
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
35
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
14
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
14 40
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
35
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
16
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
16 40
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
35
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
19
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
19 40
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
35
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
42
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
42 40
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
35
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
44
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
44 40
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
35
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
47
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
47 40
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
35
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
49
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
49 40
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
35
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
52
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
52 40
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
35
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
30
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
30 36
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 3 values pushed */
0 30 42
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 517;
}
);
note = v;
},
{
glyphname = zero;
layers = (
{
layerId = m01;
width = 600;
}
);
unicode = 48;
},
{
glyphname = one;
layers = (
{
layerId = m01;
width = 600;
}
);
unicode = 49;
},
{
glyphname = two;
layers = (
{
layerId = m01;
width = 600;
}
);
unicode = 50;
},
{
glyphname = three;
layers = (
{
layerId = m01;
width = 600;
}
);
unicode = 51;
},
{
glyphname = four;
layers = (
{
layerId = m01;
width = 600;
}
);
unicode = 52;
},
{
glyphname = five;
layers = (
{
layerId = m01;
width = 600;
}
);
unicode = 53;
},
{
glyphname = six;
layers = (
{
layerId = m01;
width = 600;
}
);
unicode = 54;
},
{
glyphname = seven;
layers = (
{
layerId = m01;
width = 600;
}
);
unicode = 55;
},
{
glyphname = eight;
layers = (
{
layerId = m01;
width = 600;
}
);
unicode = 56;
},
{
glyphname = nine;
layers = (
{
layerId = m01;
width = 600;
}
);
unicode = 57;
},
{
glyphname = space;
layers = (
{
layerId = m01;
width = 200;
}
);
unicode = 32;
},
{
glyphname = period;
layers = (
{
layerId = m01;
width = 600;
}
);
unicode = 46;
},
{
glyphname = comma;
layers = (
{
layerId = m01;
width = 600;
}
);
unicode = 44;
},
{
glyphname = hyphen;
layers = (
{
layerId = m01;
width = 600;
}
);
unicode = 45;
}
);
metrics = (
{
type = ascender;
},
{
type = "cap height";
},
{
type = "x-height";
},
{
type = baseline;
},
{
type = descender;
},
{
type = "italic angle";
}
);
unitsPerEm = 1000;
versionMajor = 1;
versionMinor = 0;
}
